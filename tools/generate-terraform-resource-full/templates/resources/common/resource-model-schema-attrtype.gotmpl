{{define "resource-model-schema-attrtype"}}
/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype ({{.BaseName}}) */
	{{if eq .ValueType "string" -}}
		schema.StringAttribute{
			Optional:            true,
			MarkdownDescription: `{{.MarkdownDescription}}`,
			Description: `{{.Description}}`,
			{{if .Default }}
				// Default:          stringdefault.StaticString({{.Default}}),
				Computed:            true,
			{{end}}
		},
	{{- else  if eq .ValueType "number" -}}
		schema.NumberAttribute{
			Optional:            true,
			MarkdownDescription: `{{.MarkdownDescription}}`,
			Description: `{{.Description}}`,
			{{if .Default }}
				// Default:          stringdefault.StaticString({{.Default}}),
				Computed:            true,
			{{end}}
		},
	{{- else if eq .ValueType "bool" -}}
		schema.BoolAttribute{
			Optional:            true,
			MarkdownDescription: `{{.MarkdownDescription}}`,
			Description: `{{.Description}}`,
			Default: booldefault.StaticBool(false),
			Computed:            true,
		},
	{{- else -}}
		UNKNOWN TYPE: {{.ValueType}}
	{{- end}}
{{end}}

{{define "resource-model-schema-attrtype-multi"}}
/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi ({{.BaseName}}) */
	{{if eq .ValueType "string" -}}
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:            true,
			MarkdownDescription: `{{.MarkdownDescription}}`,
			Description: `{{.Description}}`,
			{{if .Default }}
				// Default:          stringdefault.StaticString({{.Default}}),
				Computed:            true,
			{{end}}
		},
	{{- else  if eq .ValueType "number" -}}
		schema.ListAttribute{
			ElementType: types.NumberType,
			Optional:            true,
			MarkdownDescription: `{{.MarkdownDescription}}`,
			Description: `{{.Description}}`,
			{{if .Default }}
				// Default:          stringdefault.StaticString({{.Default}}),
				Computed:            true,
			{{end}}
		},
	{{- else if eq .ValueType "bool" -}}
		schema.ListAttribute{
			ElementType: types.BoolType,
			Optional:            true,
			MarkdownDescription: `{{.MarkdownDescription}}`,
			Description: `{{.Description}}`,
			Default: booldefault.StaticBool(false),
			Computed:            true,
		},
	{{- else -}}
		UNKNOWN TYPE: {{.ValueType}}
	{{- end}}
{{end}}
