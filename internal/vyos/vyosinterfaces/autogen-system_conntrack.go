// Code generated by tools/build-vyos-infterface-definition-structs/main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/vyos/schemadefinition"
)

func system_conntrack() schemadefinition.InterfaceDefinition {
	return schemadefinition.InterfaceDefinition{
		XMLName: xml.Name{
			Local: "interfaceDefinition",
		},
		Node: []*schemadefinition.Node{{
			IsBaseNode: false,
			XMLName: xml.Name{
				Local: "node",
			},
			NodeNameAttr: "system",
			Children: []*schemadefinition.Children{{
				XMLName: xml.Name{
					Local: "children",
				},
				Node: []*schemadefinition.Node{{
					IsBaseNode: false,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "conntrack",
					OwnerAttr:    "${vyos_conf_scripts_dir}/system_conntrack.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"Connection Tracking Engine Options"},
						Priority: []string{"218"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "ignore",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Customized rules to ignore selective connection tracking"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "ipv4",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IPv4 rules"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "rule",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Rule number"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-999999",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-999999",
													Description: "Number of conntrack ignore rule",
												}},
												ConstraintErrorMessage: []string{"Ignore rule number must be between 1 and 999999"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "destination",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Destination parameters"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "group",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Group"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of addresses"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group address-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "domain-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of domains"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group domain-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "network-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of networks"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group network-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of ports"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group port-group"},
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "address",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"IP address, subnet, or range"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-prefix",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-range",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address-exclude",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-prefix-exclude",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-range-exclude",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4",
																	Description: "IPv4 address to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4net",
																	Description: "IPv4 prefix to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4range",
																	Description: "IPv4 address range to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv4",
																	Description: "Match everything except the specified address",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv4net",
																	Description: "Match everything except the specified prefix",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv4range",
																	Description: "Match everything except the specified range",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "port-multi",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Named port (any name in /etc/services, e.g., http)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "start-end",
																	Description: "Numbered port range (e.g. 1001-1005)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "source",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Source parameters"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "group",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Group"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of addresses"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group address-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "domain-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of domains"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group domain-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "network-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of networks"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group network-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of ports"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group port-group"},
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "address",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"IP address, subnet, or range"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-prefix",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-range",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address-exclude",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-prefix-exclude",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-range-exclude",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4",
																	Description: "IPv4 address to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4net",
																	Description: "IPv4 prefix to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4range",
																	Description: "IPv4 address range to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv4",
																	Description: "Match everything except the specified address",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv4net",
																	Description: "Match everything except the specified prefix",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv4range",
																	Description: "Match everything except the specified range",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "port-multi",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Named port (any name in /etc/services, e.g., http)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "start-end",
																	Description: "Numbered port range (e.g. 1001-1005)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "tcp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"TCP options to match"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "flags",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"TCP flags to match"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "not",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Match flags not set"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "syn",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Synchronise flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "ack",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Acknowledge flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "fin",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Finish flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "rst",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Reset flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "urg",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Urgent flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "psh",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Push flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "ecn",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Explicit Congestion Notification flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "cwr",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Congestion Window Reduced flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}},
																	}},
																}},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "syn",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Synchronise flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "ack",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Acknowledge flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "fin",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Finish flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "rst",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Reset flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "urg",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Urgent flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "psh",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Push flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "ecn",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Explicit Congestion Notification flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "cwr",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Congestion Window Reduced flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "description",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Description"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{".{0,255}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Description",
														}},
														ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "inbound-interface",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Interface to ignore connections tracking on"},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List:   []string{"any"},
															Script: []string{"${vyos_completion_dir}/list_interfaces"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "protocol",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Protocol"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ip-protocol",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Protocol name",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Script: []string{"${vyos_completion_dir}/list_protocols.sh"},
														}},
													}},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "ipv6",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IPv6 rules"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "rule",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Rule number"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-999999",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-999999",
													Description: "Number of conntrack ignore rule",
												}},
												ConstraintErrorMessage: []string{"Ignore rule number must be between 1 and 999999"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "destination",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Destination parameters"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "group",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Group"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of addresses"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group ipv6-address-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "domain-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of domains"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group domain-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "mac-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of MAC addresses"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group mac-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "network-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of networks"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group ipv6-network-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of ports"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group port-group"},
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "address",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"IP address, subnet, or range"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-exclude",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-range",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-range-exclude",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6",
																	Description: "IP address to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6net",
																	Description: "Subnet to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6range",
																	Description: "IP range to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv6",
																	Description: "Match everything except the specified address",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv6net",
																	Description: "Match everything except the specified prefix",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv6range",
																	Description: "Match everything except the specified range",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "port-multi",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Named port (any name in /etc/services, e.g., http)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "start-end",
																	Description: "Numbered port range (e.g. 1001-1005)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "source",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Source parameters"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "group",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Group"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of addresses"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group ipv6-address-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "domain-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of domains"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group domain-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "mac-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of MAC addresses"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group mac-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "network-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of networks"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group ipv6-network-group"},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port-group",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Group of ports"},
																		CompletionHelp: []*schemadefinition.CompletionHelp{{
																			XMLName: xml.Name{
																				Local: "completionHelp",
																			},
																			Path: []string{"firewall group port-group"},
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "address",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"IP address, subnet, or range"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-exclude",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-range",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-range-exclude",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6",
																	Description: "IP address to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6net",
																	Description: "Subnet to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6range",
																	Description: "IP range to match",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv6",
																	Description: "Match everything except the specified address",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv6net",
																	Description: "Match everything except the specified prefix",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "!ipv6range",
																	Description: "Match everything except the specified range",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "port-multi",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Named port (any name in /etc/services, e.g., http)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "start-end",
																	Description: "Numbered port range (e.g. 1001-1005)",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "tcp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"TCP options to match"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "flags",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"TCP flags to match"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "not",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Match flags not set"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "syn",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Synchronise flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "ack",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Acknowledge flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "fin",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Finish flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "rst",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Reset flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "urg",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Urgent flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "psh",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Push flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "ecn",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Explicit Congestion Notification flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "cwr",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Congestion Window Reduced flag"},
																				Valueless: []*schemadefinition.Valueless{{
																					XMLName: xml.Name{
																						Local: "valueless",
																					},
																				}},
																			}},
																		}},
																	}},
																}},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "syn",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Synchronise flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "ack",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Acknowledge flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "fin",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Finish flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "rst",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Reset flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "urg",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Urgent flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "psh",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Push flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "ecn",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Explicit Congestion Notification flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "cwr",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Congestion Window Reduced flag"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "description",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Description"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{".{0,255}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Description",
														}},
														ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "inbound-interface",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Interface to ignore connections tracking on"},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List:   []string{"any"},
															Script: []string{"${vyos_completion_dir}/list_interfaces"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "protocol",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Protocol"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ip-protocol",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Protocol name",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Script: []string{"${vyos_completion_dir}/list_protocols.sh"},
														}},
													}},
												}},
											}},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "log",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Log connection tracking"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "event",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Event type and protocol"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "destroy",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Log connection deletion"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "icmp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for ICMP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "other",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for all protocols other than TCP, UDP and ICMP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "tcp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for TCP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "udp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for UDP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "new",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Log connection creation"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "icmp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for ICMP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "other",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for all protocols other than TCP, UDP and ICMP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "tcp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for TCP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "udp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for UDP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "update",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Log connection updates"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "icmp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for ICMP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "other",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for all protocols other than TCP, UDP and ICMP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "tcp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for TCP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "udp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Log connection tracking events for UDP"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "timestamp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Log connection tracking events include flow-based timestamp"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "queue-size",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Internal message queue size"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-999999",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:100-999999",
											Description: "Queue size",
										}},
										ConstraintErrorMessage: []string{"Queue size must be between 100 and 999999"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "log-level",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Set log-level. Log must be enable."},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(info|debug)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "info",
											Description: "Info log level",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "debug",
											Description: "Debug log level",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"info debug"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "modules",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Connection tracking modules"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ftp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"FTP connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "h323",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"H.323 connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "nfs",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"NFS connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "pptp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"PPTP connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "rtsp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"RTSP connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "sip",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"SIP connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "sqlnet",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"SQLnet connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "tftp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"TFTP connection tracking"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "tcp",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"TCP options"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "half-open-connections",
									DefaultValue: []string{"512"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum number of TCP half-open connections"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-2147483647",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-2147483647",
											Description: "Generic connection timeout in seconds",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "loose",
									DefaultValue: []string{"enable"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Policy to track previously established connections"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(enable|disable)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "enable",
											Description: "Allow tracking of previously established connections",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "disable",
											Description: "Do not allow tracking of previously established connections",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"enable disable"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "max-retrans",
									DefaultValue: []string{"3"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum number of packets that can be retransmitted without received an ACK"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-255",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-255",
											Description: "Number of packets to be retransmitted",
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "timeout",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Connection timeout options"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "custom",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Define custom timeouts per connection"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "ipv4",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 rules"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												TagNode: []*schemadefinition.TagNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "tagNode",
													},
													NodeNameAttr: "rule",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Rule number"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-999999",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-999999",
															Description: "Number of conntrack rule",
														}},
														ConstraintErrorMessage: []string{"Timeout rule number must be between 1 and 999999"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "destination",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Destination parameters"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"IP address, subnet, or range"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-prefix",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-range",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address-exclude",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-prefix-exclude",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-range-exclude",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "IPv4 address to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4net",
																			Description: "IPv4 prefix to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4range",
																			Description: "IPv4 address range to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv4",
																			Description: "Match everything except the specified address",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv4net",
																			Description: "Match everything except the specified prefix",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv4range",
																			Description: "Match everything except the specified range",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Port number"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "port-multi",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "txt",
																			Description: "Named port (any name in /etc/services, e.g., http)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-65535",
																			Description: "Numeric IP port",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "start-end",
																			Description: "Numbered port range (e.g. 1001-1005)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																		}},
																	}},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "protocol",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Customize protocol specific timers, one protocol configuration per rule"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "tcp",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"TCP connection timeout options"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "close-wait",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP CLOSE-WAIT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP CLOSE-WAIT timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "close",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP CLOSE timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP CLOSE timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "established",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP ESTABLISHED timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP ESTABLISHED timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "fin-wait",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP FIN-WAIT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP FIN-WAIT timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "last-ack",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP LAST-ACK timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP LAST-ACK timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "syn-recv",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP SYN-RECEIVED timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP SYN-RECEIVED timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "syn-sent",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP SYN-SENT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP SYN-SENT timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "time-wait",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP TIME-WAIT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP TIME-WAIT timeout in seconds",
																				}},
																			}},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "udp",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"UDP timeout options"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "replied",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Timeout for UDP connection seen in both directions"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "Timeout for UDP connection seen in both directions",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "unreplied",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Timeout for unreplied UDP"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "Timeout for unreplied UDP",
																				}},
																			}},
																		}},
																	}},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "source",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Source parameters"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"IP address, subnet, or range"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-prefix",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-range",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address-exclude",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-prefix-exclude",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-range-exclude",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "IPv4 address to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4net",
																			Description: "IPv4 prefix to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4range",
																			Description: "IPv4 address range to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv4",
																			Description: "Match everything except the specified address",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv4net",
																			Description: "Match everything except the specified prefix",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv4range",
																			Description: "Match everything except the specified range",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Port number"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "port-multi",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "txt",
																			Description: "Named port (any name in /etc/services, e.g., http)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-65535",
																			Description: "Numeric IP port",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "start-end",
																			Description: "Numbered port range (e.g. 1001-1005)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "description",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Description"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Regex: []string{".{0,255}"},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Description",
																}},
																ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "inbound-interface",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Interface to apply custom connection timers on"},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	List:   []string{"any"},
																	Script: []string{"${vyos_completion_dir}/list_interfaces"},
																}},
															}},
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "ipv6",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv6 rules"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												TagNode: []*schemadefinition.TagNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "tagNode",
													},
													NodeNameAttr: "rule",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Rule number"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-999999",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-999999",
															Description: "Number of conntrack rule",
														}},
														ConstraintErrorMessage: []string{"Timeout rule number must be between 1 and 999999"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "destination",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Destination parameters"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"IP address, subnet, or range"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6-exclude",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6-range",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6-range-exclude",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv6",
																			Description: "IP address to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv6net",
																			Description: "Subnet to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv6range",
																			Description: "IP range to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv6",
																			Description: "Match everything except the specified address",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv6net",
																			Description: "Match everything except the specified prefix",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv6range",
																			Description: "Match everything except the specified range",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Port number"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "port-multi",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "txt",
																			Description: "Named port (any name in /etc/services, e.g., http)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-65535",
																			Description: "Numeric IP port",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "start-end",
																			Description: "Numbered port range (e.g. 1001-1005)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																		}},
																	}},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "protocol",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Customize protocol specific timers, one protocol configuration per rule"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "tcp",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"TCP connection timeout options"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "close-wait",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP CLOSE-WAIT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP CLOSE-WAIT timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "close",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP CLOSE timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP CLOSE timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "established",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP ESTABLISHED timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP ESTABLISHED timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "fin-wait",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP FIN-WAIT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP FIN-WAIT timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "last-ack",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP LAST-ACK timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP LAST-ACK timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "syn-recv",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP SYN-RECEIVED timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP SYN-RECEIVED timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "syn-sent",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP SYN-SENT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP SYN-SENT timeout in seconds",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "time-wait",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"TCP TIME-WAIT timeout in seconds"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "TCP TIME-WAIT timeout in seconds",
																				}},
																			}},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "udp",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"UDP timeout options"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "replied",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Timeout for UDP connection seen in both directions"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "Timeout for UDP connection seen in both directions",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "unreplied",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Timeout for unreplied UDP"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-21474836",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-21474836",
																					Description: "Timeout for unreplied UDP",
																				}},
																			}},
																		}},
																	}},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "source",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Source parameters"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"IP address, subnet, or range"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6-exclude",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6-range",
																			}, {
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv6-range-exclude",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv6",
																			Description: "IP address to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv6net",
																			Description: "Subnet to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv6range",
																			Description: "IP range to match",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv6",
																			Description: "Match everything except the specified address",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv6net",
																			Description: "Match everything except the specified prefix",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "!ipv6range",
																			Description: "Match everything except the specified range",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "port",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Port number"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "port-multi",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "txt",
																			Description: "Named port (any name in /etc/services, e.g., http)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-65535",
																			Description: "Numeric IP port",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "start-end",
																			Description: "Numbered port range (e.g. 1001-1005)",
																		}, {
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Description: "\\n\\nMultiple destination ports can be specified as a comma-separated list.\\nThe whole list can also be negated using '!'.\\nFor example: '!22,telnet,http,123,1001-1005'",
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "description",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Description"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Regex: []string{".{0,255}"},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Description",
																}},
																ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "inbound-interface",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Interface to apply custom connection timers on"},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	List:   []string{"any"},
																	Script: []string{"${vyos_completion_dir}/list_interfaces"},
																}},
															}},
														}},
													}},
												}},
											}},
										}},
									}},
								}},
							}},
						}},
						LeafNode: []*schemadefinition.LeafNode{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "flow-accounting",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Enable connection tracking flow accounting"},
								Valueless: []*schemadefinition.Valueless{{
									XMLName: xml.Name{
										Local: "valueless",
									},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "expect-table-size",
							DefaultValue: []string{"2048"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Size of connection tracking expect table"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--range 1-50000000",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:1-50000000",
									Description: "Number of entries allowed in connection tracking expect table",
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "hash-size",
							DefaultValue: []string{"32768"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Hash size for connection tracking table"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--range 1-50000000",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:1-50000000",
									Description: "Size of hash to use for connection tracking table",
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "table-size",
							DefaultValue: []string{"262144"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Size of connection tracking table"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--range 1-50000000",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:1-50000000",
									Description: "Number of entries allowed in connection tracking table",
								}},
							}},
						}},
					}},
				}},
			}},
		}},
	}
}
