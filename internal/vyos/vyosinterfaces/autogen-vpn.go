// Code generated by main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/vyos/schemadefinition"
)

func vpn() schemadefinition.InterfaceDefinition {
	return schemadefinition.InterfaceDefinition{
		XMLName: xml.Name{
			Local: "interfaceDefinition",
		},
		Node: []*schemadefinition.Node{{
			IsBaseNode: false,
			XMLName: xml.Name{
				Local: "node",
			},
			NodeNameAttr: "vpn",
			Properties: []*schemadefinition.Properties{{
				XMLName: xml.Name{
					Local: "properties",
				},
				Help: []string{"Virtual Private Network (VPN)"},
			}},
			Children: []*schemadefinition.Children{{
				XMLName: xml.Name{
					Local: "children",
				},
				Node: []*schemadefinition.Node{{
					IsBaseNode: true,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "ipsec",
					OwnerAttr:    "${vyos_conf_scripts_dir}/vpn_ipsec.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"VPN IP security (IPsec) parameters"},
						Priority: []string{"901"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "authentication",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Authentication"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "psk",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Pre-shared key name"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "dhcp-interface",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"DHCP interface supplying next-hop IP address"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(bond|br|dum|en|ersp|eth|gnv|ifb|ipoe|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|sstpc|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "file-path --lookup-path /sys/class/net --directory",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "DHCP interface name",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_interfaces"},
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"ID for authentication"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "ID used for authentication",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "secret",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IKE pre-shared secret key"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "IKE pre-shared secret key",
												}},
											}},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "log",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"IPsec logging"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "level",
									DefaultValue: []string{"0"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Global IPsec logging Level"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 0-2",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "0",
											Description: "Very basic auditing logs (e.g., SA up/SA down)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "1",
											Description: "Generic control flow with errors, a good default to see whats going on",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "2",
											Description: "More detailed debugging control flow",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "subsystem",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Subsystem logging levels"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(dmn|mgr|ike|chd|job|cfg|knl|net|asn|enc|lib|esp|tls|tnc|imc|imv|pts|any)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dmn",
											Description: "Main daemon setup/cleanup/signal handling",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "mgr",
											Description: "IKE_SA manager, handling synchronization for IKE_SA access",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ike",
											Description: "IKE_SA/ISAKMP SA",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "chd",
											Description: "CHILD_SA/IPsec SA",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "job",
											Description: "Jobs queuing/processing and thread pool management",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "cfg",
											Description: "Configuration management and plugins",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "knl",
											Description: "IPsec/Networking kernel interface",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "net",
											Description: "IKE network communication",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "asn",
											Description: "Low-level encoding/decoding (ASN.1, X.509 etc.)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "enc",
											Description: "Packet encoding/decoding encryption/decryption operations",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "lib",
											Description: "libstrongswan library messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "esp",
											Description: "libipsec library messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "tls",
											Description: " libtls library messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "tnc",
											Description: "Trusted Network Connect",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "imc",
											Description: "Integrity Measurement Collector",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "imv",
											Description: "Integrity Measurement Verifier",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "pts",
											Description: " Platform Trust Service",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "any",
											Description: "Any subsystem",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"dmn mgr ike chd job cfg knl net asn enc lib esp tls tnc imc imv pts any"},
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "options",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Global IPsec settings"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "disable-route-autoinstall",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Do not automatically install routes to remote networks"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "flexvpn",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Allow FlexVPN vendor ID payload (IKEv2 only)"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "interface",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Interface to use"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(bond|br|dum|en|ersp|eth|gnv|ifb|ipoe|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|sstpc|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo"},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "file-path --lookup-path /sys/class/net --directory",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Interface name",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Script: []string{"${vyos_completion_dir}/list_interfaces"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "virtual-ip",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Allow install virtual-ip addresses"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "remote-access",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"IKEv2 remote access VPN"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "dhcp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"DHCP pool options for remote access"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "interface",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Interface to use"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(bond|br|dum|en|ersp|eth|gnv|ifb|ipoe|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|sstpc|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "file-path --lookup-path /sys/class/net --directory",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Interface name",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"DHCP server address"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "DHCP server IPv4 address",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "radius",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"RADIUS based user authentication"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS server configuration"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "RADIUS server IPv4 address",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret key"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"[[:ascii:]]{1,128}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Password string (key)",
														}},
														ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1812"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port number used by connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
														ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable-accounting",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable accounting"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "source-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 source address used to initiate connection"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 source address",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "nas-identifier",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"NAS-Identifier attribute sent to RADIUS"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											DefaultValue: []string{"2"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Session timeout"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-240",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-240",
													Description: "Session timeout in seconds (default: 2)",
												}},
												ConstraintErrorMessage: []string{"Timeout must be between 1 and 240 seconds"},
											}},
										}},
									}},
								}},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "connection",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IKEv2 VPN connection name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[a-zA-Z][0-9a-zA-Z_-]+"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Connection name",
										}},
										ConstraintErrorMessage: []string{"Profile name must be alphanumeric and can contain hyphen(s) and underscore(s)"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "authentication",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Authentication for remote access"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "x509",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"X.509 certificate"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "certificate",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Certificate in PKI configuration"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Name of certificate in PKI configuration",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki certificate"},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "passphrase",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Private key passphrase"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Passphrase to decrypt the private key",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "ca-certificate",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Certificate Authority chain in PKI configuration"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Name of CA in PKI configuration",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki ca"},
																}},
																Multi: []*schemadefinition.Multi{{
																	XMLName: xml.Name{
																		Local: "multi",
																	},
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "local-users",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Local user authentication"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														TagNode: []*schemadefinition.TagNode{{
															IsBaseNode: true,
															XMLName: xml.Name{
																Local: "tagNode",
															},
															NodeNameAttr: "username",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Username used for authentication"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Username used for authentication",
																}},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "disable",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Disable instance"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "password",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Password used for authentication"},
																	}},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "local-id",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Local ID for peer authentication"},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Local ID used for peer authentication",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "eap-id",
													DefaultValue: []string{"any"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Remote EAP ID for client authentication"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"[[:ascii:]]{1,64}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Remote EAP ID for client authentication",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "any",
															Description: "Allow any EAP ID",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List: []string{"any"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "client-mode",
													DefaultValue: []string{"eap-mschapv2"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Client authentication mode"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"(x509|eap-tls|eap-mschapv2|eap-radius)"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "x509",
															Description: "Use IPsec x.509 certificate authentication",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "eap-tls",
															Description: "Use EAP-TLS authentication",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "eap-mschapv2",
															Description: "Use EAP-MSCHAPv2 authentication",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "eap-radius",
															Description: "Use EAP-RADIUS authentication",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List: []string{"x509 eap-tls eap-mschapv2 eap-radius"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "server-mode",
													DefaultValue: []string{"x509"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Server authentication mode"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"(pre-shared-secret|x509)"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "pre-shared-secret",
															Description: "Use a pre-shared secret key",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "x509",
															Description: "Use x.509 certificate",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List: []string{"pre-shared-secret x509"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "pre-shared-secret",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Pre-shared secret key"},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Pre-shared secret key",
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "local",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Local parameters for interesting traffic"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port number used by connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
														ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "prefix",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Local IPv4 or IPv6 prefix"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-prefix",
															}, {
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv6-prefix",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4net",
															Description: "Local IPv4 prefix",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv6net",
															Description: "Local IPv6 prefix",
														}},
														Multi: []*schemadefinition.Multi{{
															XMLName: xml.Name{
																Local: "multi",
															},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "description",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Description"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{".{0,255}"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Description",
												}},
												ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "disable",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Disable instance"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "esp-group",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Encapsulating Security Payloads (ESP) group name"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"vpn ipsec esp-group"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ike-group",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Internet Key Exchange (IKE) group name"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"vpn ipsec ike-group"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "local-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 or IPv6 address of a local interface to use for VPN"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(any)"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ip-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 address of a local interface for VPN",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6",
													Description: "IPv6 address of a local interface for VPN",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "any",
													Description: "Allow any IPv4 address present on the system to be used for VPN",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List:   []string{"any"},
													Script: []string{"${vyos_completion_dir}/list_local_ips.sh --both"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "dhcp-interface",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"DHCP interface supplying next-hop IP address"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(bond|br|dum|en|ersp|eth|gnv|ifb|ipoe|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|sstpc|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "file-path --lookup-path /sys/class/net --directory",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "DHCP interface name",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "replay-window",
											DefaultValue: []string{"32"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPsec replay window to configure for this CHILD_SA"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-2040",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:0",
													Description: "Disable IPsec replay protection",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-2040",
													Description: "Replay window size in packets",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "bind",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"VTI tunnel interface associated with this configuration"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"interfaces vti"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											DefaultValue: []string{"28800"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout to close connection if no data is transmitted"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-86400",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:0",
													Description: "Disable inactivity checks",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-86400",
													Description: "Timeout in seconds",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "pool",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IP address pool"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Predefined IP pool name",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "dhcp",
													Description: "Forward requests for virtual IP addresses to a DHCP server",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "radius",
													Description: "Forward requests for virtual IP addresses to a RADIUS server",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"dhcp radius"},
													Path: []string{"vpn ipsec remote-access pool"},
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "unique",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Connection uniqueness enforcement policy"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(never|keep|replace)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "never",
													Description: "Never enforce connection uniqueness",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "keep",
													Description: "Reject new connection attempts if the same user already has an active connection",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "replace",
													Description: "Delete any existing connection if a new one for the same user gets established",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"never keep replace"},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IP address pool for remote access users"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "range",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Local IPv4 or IPv6 pool range"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "start",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"First IP address for local pool range"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ip-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "IPv4 start address of pool",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv6",
															Description: "IPv6 start address of pool",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "stop",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Last IP address for local pool range"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ip-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "IPv4 end address of pool",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv6",
															Description: "IPv6 end address of pool",
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "exclude",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Local IPv4 or IPv6 pool prefix exclusions"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-prefix",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4net",
													Description: "Local IPv4 pool prefix exclusion",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "Local IPv6 pool prefix exclusion",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "prefix",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Local IPv4 or IPv6 pool prefix"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-prefix",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4net",
													Description: "Local IPv4 pool prefix",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "Local IPv6 pool prefix",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "name-server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Domain Name Servers (DNS) addresses"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ip-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "Domain Name Server (DNS) IPv4 address",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6",
													Description: "Domain Name Server (DNS) IPv6 address",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "site-to-site",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Site-to-site VPN"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "peer",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Connection name of the peer"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9|@]+"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Connection name of the peer",
										}},
										ConstraintErrorMessage: []string{"Peer connection name must be alphanumeric and can contain hyphen and underscores"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "authentication",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Peer authentication"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "rsa",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"RSA keys"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "local-key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Name of PKI key-pair with local private key"},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki key-pair"},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "passphrase",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Local private key passphrase"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "remote-key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Name of PKI key-pair with remote public key"},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki key-pair"},
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "x509",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"X.509 certificate"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "certificate",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Certificate in PKI configuration"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Name of certificate in PKI configuration",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki certificate"},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "passphrase",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Private key passphrase"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Passphrase to decrypt the private key",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "ca-certificate",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Certificate Authority chain in PKI configuration"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Name of CA in PKI configuration",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki ca"},
																}},
																Multi: []*schemadefinition.Multi{{
																	XMLName: xml.Name{
																		Local: "multi",
																	},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "local-id",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Local ID for peer authentication"},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Local ID used for peer authentication",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "mode",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Authentication mode"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"(pre-shared-secret|rsa|x509)"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "pre-shared-secret",
															Description: "Use pre-shared secret key",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "rsa",
															Description: "Use RSA key",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "x509",
															Description: "Use x.509 certificate",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List: []string{"pre-shared-secret rsa x509"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "remote-id",
													DefaultValue: []string{"%any"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"ID for remote authentication"},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "ID used for peer authentication",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "use-x509-id",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Use certificate common name as ID"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "vti",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Virtual tunnel interface"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "bind",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"VTI tunnel interface associated with this configuration"},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Path: []string{"interfaces vti"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "esp-group",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Encapsulating Security Payloads (ESP) group name"},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Path: []string{"vpn ipsec esp-group"},
														}},
													}},
												}},
											}},
										}},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "tunnel",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Peer tunnel"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32",
													Description: "Peer tunnel",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "local",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Local parameters for interesting traffic"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number used by connection"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}},
																ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "prefix",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Local IPv4 or IPv6 prefix"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-prefix",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-prefix",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4net",
																	Description: "Local IPv4 prefix",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6net",
																	Description: "Local IPv6 prefix",
																}},
																Multi: []*schemadefinition.Multi{{
																	XMLName: xml.Name{
																		Local: "multi",
																	},
																}},
															}},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "remote",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Match remote addresses"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number used by connection"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}},
																ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "prefix",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Remote IPv4 or IPv6 prefix"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-prefix",
																	}, {
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv6-prefix",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4net",
																	Description: "Remote IPv4 prefix",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv6net",
																	Description: "Remote IPv6 prefix",
																}},
																Multi: []*schemadefinition.Multi{{
																	XMLName: xml.Name{
																		Local: "multi",
																	},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "esp-group",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Encapsulating Security Payloads (ESP) group name"},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Path: []string{"vpn ipsec esp-group"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "protocol",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Protocol"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ip-protocol",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Protocol name",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Script: []string{"${vyos_completion_dir}/list_protocols.sh"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "priority",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Priority for IPsec policy (lowest value more preferable)"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-100",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-100",
															Description: "Priority for IPsec policy (lowest value more preferable)",
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "disable",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Disable instance"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "connection-type",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Connection type"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(initiate|respond|none)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "initiate",
													Description: "Bring the connection up immediately",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "respond",
													Description: "Wait for the peer to initiate the connection",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "none",
													Description: "Load the connection only",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"initiate respond none"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "default-esp-group",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Defult ESP group name"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"vpn ipsec esp-group"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "description",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Description"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{".{0,255}"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Description",
												}},
												ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "dhcp-interface",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"DHCP interface supplying next-hop IP address"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(bond|br|dum|en|ersp|eth|gnv|ifb|ipoe|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|sstpc|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "file-path --lookup-path /sys/class/net --directory",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "DHCP interface name",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_interfaces"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "force-udp-encapsulation",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Force UDP encapsulation"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ike-group",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Internet Key Exchange (IKE) group name"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"vpn ipsec ike-group"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ikev2-reauth",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Re-authentication of the remote peer during an IKE re-key (IKEv2 only)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(yes|no|inherit)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "yes",
													Description: "Enable remote host re-autentication during an IKE re-key. Currently broken due to a strong swan bug",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "no",
													Description: "Disable remote host re-authenticaton during an IKE re-key.",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "inherit",
													Description: "Inherit the reauth configuration form your IKE-group",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"yes no inherit"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "local-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 or IPv6 address of a local interface to use for VPN"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(any)"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ip-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 address of a local interface for VPN",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6",
													Description: "IPv6 address of a local interface for VPN",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "any",
													Description: "Allow any IPv4 address present on the system to be used for VPN",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List:   []string{"any"},
													Script: []string{"${vyos_completion_dir}/list_local_ips.sh --both"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "remote-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 or IPv6 address of the remote peer"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(any)"},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ip-address",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "fqdn",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 address of the remote peer",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6",
													Description: "IPv6 address of the remote peer",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "hostname",
													Description: "Fully qualified domain name of the remote peer",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "any",
													Description: "Allow any IP address of the remote peer",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "replay-window",
											DefaultValue: []string{"32"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPsec replay window to configure for this CHILD_SA"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-2040",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:0",
													Description: "Disable IPsec replay protection",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-2040",
													Description: "Replay window size in packets",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "virtual-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Initiator request virtual-address from peer"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "Request IPv4 address from peer",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6",
													Description: "Request IPv6 address from peer",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}},
									}},
								}},
							}},
						}},
						TagNode: []*schemadefinition.TagNode{{
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "esp-group",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Encapsulating Security Payload (ESP) group name"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "proposal",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"ESP group proposal"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-65535",
											Description: "ESP group proposal number",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "encryption",
											DefaultValue: []string{"aes128"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Encryption algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(null|aes128|aes192|aes256|aes128ctr|aes192ctr|aes256ctr|aes128ccm64|aes192ccm64|aes256ccm64|aes128ccm96|aes192ccm96|aes256ccm96|aes128ccm128|aes192ccm128|aes256ccm128|aes128gcm64|aes192gcm64|aes256gcm64|aes128gcm96|aes192gcm96|aes256gcm96|aes128gcm128|aes192gcm128|aes256gcm128|aes128gmac|aes192gmac|aes256gmac|3des|blowfish128|blowfish192|blowfish256|camellia128|camellia192|camellia256|camellia128ctr|camellia192ctr|camellia256ctr|camellia128ccm64|camellia192ccm64|camellia256ccm64|camellia128ccm96|camellia192ccm96|camellia256ccm96|camellia128ccm128|camellia192ccm128|camellia256ccm128|serpent128|serpent192|serpent256|twofish128|twofish192|twofish256|cast128|chacha20poly1305)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "null",
													Description: "Null encryption",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128",
													Description: "128 bit AES-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192",
													Description: "192 bit AES-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256",
													Description: "256 bit AES-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ctr",
													Description: "128 bit AES-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ctr",
													Description: "192 bit AES-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ctr",
													Description: "256 bit AES-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ccm64",
													Description: "128 bit AES-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ccm64",
													Description: "192 bit AES-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ccm64",
													Description: "256 bit AES-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ccm96",
													Description: "128 bit AES-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ccm96",
													Description: "192 bit AES-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ccm96",
													Description: "256 bit AES-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ccm128",
													Description: "128 bit AES-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ccm128",
													Description: "192 bit AES-CCM with 128 bit IC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ccm128",
													Description: "256 bit AES-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gcm64",
													Description: "128 bit AES-GCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gcm64",
													Description: "192 bit AES-GCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gcm64",
													Description: "256 bit AES-GCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gcm96",
													Description: "128 bit AES-GCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gcm96",
													Description: "192 bit AES-GCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gcm96",
													Description: "256 bit AES-GCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gcm128",
													Description: "128 bit AES-GCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gcm128",
													Description: "192 bit AES-GCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gcm128",
													Description: "256 bit AES-GCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gmac",
													Description: "Null encryption with 128 bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gmac",
													Description: "Null encryption with 192 bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gmac",
													Description: "Null encryption with 256 bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "3des",
													Description: "168 bit 3DES-EDE-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "blowfish128",
													Description: "128 bit Blowfish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "blowfish192",
													Description: "192 bit Blowfish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "blowfish256",
													Description: "256 bit Blowfish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128",
													Description: "128 bit Camellia-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192",
													Description: "192 bit Camellia-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256",
													Description: "256 bit Camellia-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ctr",
													Description: "128 bit Camellia-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ctr",
													Description: "192 bit Camellia-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ctr",
													Description: "256 bit Camellia-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ccm64",
													Description: "128 bit Camellia-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ccm64",
													Description: "192 bit Camellia-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ccm64",
													Description: "256 bit Camellia-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ccm96",
													Description: "128 bit Camellia-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ccm96",
													Description: "192 bit Camellia-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ccm96",
													Description: "256 bit Camellia-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ccm128",
													Description: "128 bit Camellia-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ccm128",
													Description: "192 bit Camellia-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ccm128",
													Description: "256 bit Camellia-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "serpent128",
													Description: "128 bit Serpent-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "serpent192",
													Description: "192 bit Serpent-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "serpent256",
													Description: "256 bit Serpent-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "twofish128",
													Description: "128 bit Twofish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "twofish192",
													Description: "192 bit Twofish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "twofish256",
													Description: "256 bit Twofish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "cast128",
													Description: "128 bit CAST-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "chacha20poly1305",
													Description: "256 bit ChaCha20/Poly1305 with 128 bit ICV",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"null aes128 aes192 aes256 aes128ctr aes192ctr aes256ctr aes128ccm64 aes192ccm64 aes256ccm64 aes128ccm96 aes192ccm96 aes256ccm96 aes128ccm128 aes192ccm128 aes256ccm128 aes128gcm64 aes192gcm64 aes256gcm64 aes128gcm96 aes192gcm96 aes256gcm96 aes128gcm128 aes192gcm128 aes256gcm128 aes128gmac aes192gmac aes256gmac 3des blowfish128 blowfish192 blowfish256 camellia128 camellia192 camellia256 camellia128ctr camellia192ctr camellia256ctr camellia128ccm64 camellia192ccm64 camellia256ccm64 camellia128ccm96 camellia192ccm96 camellia256ccm96 camellia128ccm128 camellia192ccm128 camellia256ccm128 serpent128 serpent192 serpent256 twofish128 twofish192 twofish256 cast128 chacha20poly1305"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "hash",
											DefaultValue: []string{"sha1"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Hash algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(md5|md5_128|sha1|sha1_160|sha256|sha256_96|sha384|sha512|aesxcbc|aescmac|aes128gmac|aes192gmac|aes256gmac)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "md5",
													Description: "MD5 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "md5_128",
													Description: "MD5_128 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha1",
													Description: "SHA1 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha1_160",
													Description: "SHA1_160 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha256",
													Description: "SHA2_256_128 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha256_96",
													Description: "SHA2_256_96 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha384",
													Description: "SHA2_384_192 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha512",
													Description: "SHA2_512_256 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aesxcbc",
													Description: "AES XCBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aescmac",
													Description: "AES CMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gmac",
													Description: "128-bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gmac",
													Description: "192-bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gmac",
													Description: "256-bit AES-GMAC",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"md5 md5_128 sha1 sha1_160 sha256 sha256_96 sha384 sha512 aesxcbc aescmac aes128gmac aes192gmac aes256gmac"},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "compression",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Enable ESP compression"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "lifetime",
									DefaultValue: []string{"3600"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Security Association time to expire"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 30-86400",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:30-86400",
											Description: "SA lifetime in seconds",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "life-bytes",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Security Association byte count to expire"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1024-26843545600000",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1024-26843545600000",
											Description: "SA life in bytes",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "life-packets",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Security Association packet count to expire"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1000-26843545600000",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1000-26843545600000",
											Description: "SA life in packets",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "disable-rekey",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Do not locally initiate a re-key of the SA, remote peer must re-key before expiration"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mode",
									DefaultValue: []string{"tunnel"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"ESP mode"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(tunnel|transport)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "tunnel",
											Description: "Tunnel mode",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "transport",
											Description: "Transport mode",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"tunnel transport"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "pfs",
									DefaultValue: []string{"enable"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"ESP Perfect Forward Secrecy"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(enable|dh-group1|dh-group2|dh-group5|dh-group14|dh-group15|dh-group16|dh-group17|dh-group18|dh-group19|dh-group20|dh-group21|dh-group22|dh-group23|dh-group24|dh-group25|dh-group26|dh-group27|dh-group28|dh-group29|dh-group30|dh-group31|dh-group32|disable)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "enable",
											Description: "Inherit Diffie-Hellman group from the IKE group",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group1",
											Description: "Use Diffie-Hellman group 1 (modp768)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group2",
											Description: "Use Diffie-Hellman group 2 (modp1024)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group5",
											Description: "Use Diffie-Hellman group 5 (modp1536)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group14",
											Description: "Use Diffie-Hellman group 14 (modp2048)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group15",
											Description: "Use Diffie-Hellman group 15 (modp3072)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group16",
											Description: "Use Diffie-Hellman group 16 (modp4096)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group17",
											Description: "Use Diffie-Hellman group 17 (modp6144)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group18",
											Description: "Use Diffie-Hellman group 18 (modp8192)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group19",
											Description: "Use Diffie-Hellman group 19 (ecp256)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group20",
											Description: "Use Diffie-Hellman group 20 (ecp384)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group21",
											Description: "Use Diffie-Hellman group 21 (ecp521)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group22",
											Description: "Use Diffie-Hellman group 22 (modp1024s160)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group23",
											Description: "Use Diffie-Hellman group 23 (modp2048s224)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group24",
											Description: "Use Diffie-Hellman group 24 (modp2048s256)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group25",
											Description: "Use Diffie-Hellman group 25 (ecp192)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group26",
											Description: "Use Diffie-Hellman group 26 (ecp224)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group27",
											Description: "Use Diffie-Hellman group 27 (ecp224bp)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group28",
											Description: "Use Diffie-Hellman group 28 (ecp256bp)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group29",
											Description: "Use Diffie-Hellman group 29 (ecp384bp)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group30",
											Description: "Use Diffie-Hellman group 30 (ecp512bp)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group31",
											Description: "Use Diffie-Hellman group 31 (curve25519)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "dh-group32",
											Description: "Use Diffie-Hellman group 32 (curve448)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "disable",
											Description: "Disable PFS",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"enable dh-group1 dh-group2 dh-group5 dh-group14 dh-group15 dh-group16 dh-group17 dh-group18 dh-group19 dh-group20 dh-group21 dh-group22 dh-group23 dh-group24 dh-group25 dh-group26 dh-group27 dh-group28 dh-group29 dh-group30 dh-group31 dh-group32 disable"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "ike-group",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Internet Key Exchange (IKE) group name"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "dead-peer-detection",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Dead Peer Detection (DPD)"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "action",
											DefaultValue: []string{"clear"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Keep-alive failure action"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(trap|clear|restart)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "trap",
													Description: "Attempt to re-negotiate the connection when matching traffic is seen",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "clear",
													Description: "Remove the connection immediately",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "restart",
													Description: "Attempt to re-negotiate the connection immediately",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"trap clear restart"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "interval",
											DefaultValue: []string{"30"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Keep-alive interval"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 2-86400",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:2-86400",
													Description: "Keep-alive interval in seconds",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											DefaultValue: []string{"120"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Dead Peer Detection keep-alive timeout (IKEv1 only)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 2-86400",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:2-86400",
													Description: "Keep-alive timeout in seconds",
												}},
											}},
										}},
									}},
								}},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "proposal",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IKE proposal"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-65535",
											Description: "IKE group proposal",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "dh-group",
											DefaultValue: []string{"2"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"dh-grouphelp"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(1|2|5|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "1",
													Description: "Diffie-Hellman group 1 (modp768)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "2",
													Description: "Diffie-Hellman group 2 (modp1024)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "5",
													Description: "Diffie-Hellman group 5 (modp1536)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "14",
													Description: "Diffie-Hellman group 14 (modp2048)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "15",
													Description: "Diffie-Hellman group 15 (modp3072)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "16",
													Description: "Diffie-Hellman group 16 (modp4096)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "17",
													Description: "Diffie-Hellman group 17 (modp6144)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "18",
													Description: "Diffie-Hellman group 18 (modp8192)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "19",
													Description: "Diffie-Hellman group 19 (ecp256)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "20",
													Description: "Diffie-Hellman group 20 (ecp384)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "21",
													Description: "Diffie-Hellman group 21 (ecp521)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "22",
													Description: "Diffie-Hellman group 22 (modp1024s160)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "23",
													Description: "Diffie-Hellman group 23 (modp2048s224)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "24",
													Description: "Diffie-Hellman group 24 (modp2048s256)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "25",
													Description: "Diffie-Hellman group 25 (ecp192)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "26",
													Description: "Diffie-Hellman group 26 (ecp224)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "27",
													Description: "Diffie-Hellman group 27 (ecp224bp)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "28",
													Description: "Diffie-Hellman group 28 (ecp256bp)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "29",
													Description: "Diffie-Hellman group 29 (ecp384bp)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "30",
													Description: "Diffie-Hellman group 30 (ecp512bp)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "31",
													Description: "Diffie-Hellman group 31 (curve25519)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "32",
													Description: "Diffie-Hellman group 32 (curve448)",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"1 2 5 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "prf",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Pseudo-Random Functions"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(prfmd5|prfsha1|prfaesxcbc|prfaescmac|prfsha256|prfsha384|prfsha512)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfmd5",
													Description: "MD5 PRF",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfsha1",
													Description: "SHA1 PRF",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfaesxcbc",
													Description: "AES XCBC PRF",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfaescmac",
													Description: "AES CMAC PRF",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfsha256",
													Description: "SHA2_256 PRF",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfsha384",
													Description: "SHA2_384 PRF",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prfsha512",
													Description: "SHA2_512 PRF",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"prfmd5 prfsha1 prfaesxcbc prfaescmac prfsha256 prfsha384 prfsha512"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "encryption",
											DefaultValue: []string{"aes128"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Encryption algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(null|aes128|aes192|aes256|aes128ctr|aes192ctr|aes256ctr|aes128ccm64|aes192ccm64|aes256ccm64|aes128ccm96|aes192ccm96|aes256ccm96|aes128ccm128|aes192ccm128|aes256ccm128|aes128gcm64|aes192gcm64|aes256gcm64|aes128gcm96|aes192gcm96|aes256gcm96|aes128gcm128|aes192gcm128|aes256gcm128|aes128gmac|aes192gmac|aes256gmac|3des|blowfish128|blowfish192|blowfish256|camellia128|camellia192|camellia256|camellia128ctr|camellia192ctr|camellia256ctr|camellia128ccm64|camellia192ccm64|camellia256ccm64|camellia128ccm96|camellia192ccm96|camellia256ccm96|camellia128ccm128|camellia192ccm128|camellia256ccm128|serpent128|serpent192|serpent256|twofish128|twofish192|twofish256|cast128|chacha20poly1305)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "null",
													Description: "Null encryption",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128",
													Description: "128 bit AES-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192",
													Description: "192 bit AES-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256",
													Description: "256 bit AES-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ctr",
													Description: "128 bit AES-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ctr",
													Description: "192 bit AES-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ctr",
													Description: "256 bit AES-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ccm64",
													Description: "128 bit AES-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ccm64",
													Description: "192 bit AES-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ccm64",
													Description: "256 bit AES-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ccm96",
													Description: "128 bit AES-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ccm96",
													Description: "192 bit AES-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ccm96",
													Description: "256 bit AES-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128ccm128",
													Description: "128 bit AES-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192ccm128",
													Description: "192 bit AES-CCM with 128 bit IC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256ccm128",
													Description: "256 bit AES-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gcm64",
													Description: "128 bit AES-GCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gcm64",
													Description: "192 bit AES-GCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gcm64",
													Description: "256 bit AES-GCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gcm96",
													Description: "128 bit AES-GCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gcm96",
													Description: "192 bit AES-GCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gcm96",
													Description: "256 bit AES-GCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gcm128",
													Description: "128 bit AES-GCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gcm128",
													Description: "192 bit AES-GCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gcm128",
													Description: "256 bit AES-GCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gmac",
													Description: "Null encryption with 128 bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gmac",
													Description: "Null encryption with 192 bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gmac",
													Description: "Null encryption with 256 bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "3des",
													Description: "168 bit 3DES-EDE-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "blowfish128",
													Description: "128 bit Blowfish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "blowfish192",
													Description: "192 bit Blowfish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "blowfish256",
													Description: "256 bit Blowfish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128",
													Description: "128 bit Camellia-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192",
													Description: "192 bit Camellia-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256",
													Description: "256 bit Camellia-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ctr",
													Description: "128 bit Camellia-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ctr",
													Description: "192 bit Camellia-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ctr",
													Description: "256 bit Camellia-COUNTER",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ccm64",
													Description: "128 bit Camellia-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ccm64",
													Description: "192 bit Camellia-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ccm64",
													Description: "256 bit Camellia-CCM with 64 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ccm96",
													Description: "128 bit Camellia-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ccm96",
													Description: "192 bit Camellia-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ccm96",
													Description: "256 bit Camellia-CCM with 96 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia128ccm128",
													Description: "128 bit Camellia-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia192ccm128",
													Description: "192 bit Camellia-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "camellia256ccm128",
													Description: "256 bit Camellia-CCM with 128 bit ICV",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "serpent128",
													Description: "128 bit Serpent-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "serpent192",
													Description: "192 bit Serpent-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "serpent256",
													Description: "256 bit Serpent-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "twofish128",
													Description: "128 bit Twofish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "twofish192",
													Description: "192 bit Twofish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "twofish256",
													Description: "256 bit Twofish-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "cast128",
													Description: "128 bit CAST-CBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "chacha20poly1305",
													Description: "256 bit ChaCha20/Poly1305 with 128 bit ICV",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"null aes128 aes192 aes256 aes128ctr aes192ctr aes256ctr aes128ccm64 aes192ccm64 aes256ccm64 aes128ccm96 aes192ccm96 aes256ccm96 aes128ccm128 aes192ccm128 aes256ccm128 aes128gcm64 aes192gcm64 aes256gcm64 aes128gcm96 aes192gcm96 aes256gcm96 aes128gcm128 aes192gcm128 aes256gcm128 aes128gmac aes192gmac aes256gmac 3des blowfish128 blowfish192 blowfish256 camellia128 camellia192 camellia256 camellia128ctr camellia192ctr camellia256ctr camellia128ccm64 camellia192ccm64 camellia256ccm64 camellia128ccm96 camellia192ccm96 camellia256ccm96 camellia128ccm128 camellia192ccm128 camellia256ccm128 serpent128 serpent192 serpent256 twofish128 twofish192 twofish256 cast128 chacha20poly1305"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "hash",
											DefaultValue: []string{"sha1"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Hash algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(md5|md5_128|sha1|sha1_160|sha256|sha256_96|sha384|sha512|aesxcbc|aescmac|aes128gmac|aes192gmac|aes256gmac)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "md5",
													Description: "MD5 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "md5_128",
													Description: "MD5_128 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha1",
													Description: "SHA1 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha1_160",
													Description: "SHA1_160 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha256",
													Description: "SHA2_256_128 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha256_96",
													Description: "SHA2_256_96 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha384",
													Description: "SHA2_384_192 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "sha512",
													Description: "SHA2_512_256 HMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aesxcbc",
													Description: "AES XCBC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aescmac",
													Description: "AES CMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes128gmac",
													Description: "128-bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes192gmac",
													Description: "192-bit AES-GMAC",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "aes256gmac",
													Description: "256-bit AES-GMAC",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"md5 md5_128 sha1 sha1_160 sha256 sha256_96 sha384 sha512 aesxcbc aescmac aes128gmac aes192gmac aes256gmac"},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "close-action",
									DefaultValue: []string{"none"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Action to take if a child SA is unexpectedly closed"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(none|trap|start)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "none",
											Description: "Do nothing",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "trap",
											Description: "Attempt to re-negotiate when matching traffic is seen",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "start",
											Description: "Attempt to re-negotiate the connection immediately",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"none trap start"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ikev2-reauth",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Re-authentication of the remote peer during an IKE re-key (IKEv2 only)"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "key-exchange",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IKE version"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(ikev1|ikev2)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ikev1",
											Description: "Use IKEv1 for key exchange",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ikev2",
											Description: "Use IKEv2 for key exchange",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"ikev1 ikev2"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "lifetime",
									DefaultValue: []string{"28800"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IKE lifetime"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 0-86400",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:0-86400",
											Description: "IKE lifetime in seconds",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "disable-mobike",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Disable MOBIKE Support (IKEv2 only)"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mode",
									DefaultValue: []string{"main"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IKEv1 phase 1 mode"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(main|aggressive)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "main",
											Description: "Use the main mode (recommended)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "aggressive",
											Description: "Use the aggressive mode (insecure, not recommended)",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"main aggressive"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "profile",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"VPN IPsec profile"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[a-zA-Z][0-9a-zA-Z_-]+"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Profile name",
								}},
								ConstraintErrorMessage: []string{"Profile name must be alphanumeric and can contain hyphen(s) and underscore(s)"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "authentication",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mode",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Authentication mode"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "pre-shared-secret",
													Description: "Use a pre-shared secret key",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"pre-shared-secret"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "pre-shared-secret",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Pre-shared secret key"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Pre-shared secret key",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "bind",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"DMVPN tunnel configuration"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "tunnel",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Tunnel interface associated with this profile"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Associated interface to this profile",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"interfaces tunnel"},
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "disable",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Disable instance"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "esp-group",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Encapsulating Security Payloads (ESP) group name"},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"vpn ipsec esp-group"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ike-group",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Internet Key Exchange (IKE) group name"},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"vpn ipsec ike-group"},
										}},
									}},
								}},
							}},
						}},
						LeafNode: []*schemadefinition.LeafNode{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "disable-uniqreqids",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Disable requirement for unique IDs in the Security Database"},
								Valueless: []*schemadefinition.Valueless{{
									XMLName: xml.Name{
										Local: "valueless",
									},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "interface",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Interface to use"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"(bond|br|dum|en|ersp|eth|gnv|ifb|ipoe|lan|l2tp|l2tpeth|macsec|peth|ppp|pppoe|pptp|sstp|sstpc|tun|veth|vti|vtun|vxlan|wg|wlan|wwan)[0-9]+(.\\d+)?|lo"},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "file-path --lookup-path /sys/class/net --directory",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Interface name",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Script: []string{"${vyos_completion_dir}/list_interfaces"},
								}},
								Multi: []*schemadefinition.Multi{{
									XMLName: xml.Name{
										Local: "multi",
									},
								}},
							}},
						}},
					}},
				}, {
					IsBaseNode: false,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "l2tp",
					OwnerAttr:    "${vyos_conf_scripts_dir}/vpn_l2tp.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"L2TP Virtual Private Network (VPN)"},
						Priority: []string{"902"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "remote-access",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Remote access L2TP VPN"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "authentication",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication for remote access L2TP VPN"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "local-users",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Local user authentication for PPPoE server"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												TagNode: []*schemadefinition.TagNode{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "tagNode",
													},
													NodeNameAttr: "username",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"User name for authentication"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "rate-limit",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Upload/Download speed limits"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "upload",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Upload bandwidth limit in kbits/sec"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-10000000",
																			}},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "download",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Download bandwidth limit in kbits/sec"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-10000000",
																			}},
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "disable",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Disable instance"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "password",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Password for authentication"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "static-ip",
															DefaultValue: []string{"&"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Static client IP address"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address",
																	}},
																}},
															}},
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "radius",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS based user authentication"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "dynamic-author",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "server",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4",
																	Description: "IPv4 address for dynamic authorization server",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															DefaultValue: []string{"1700"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "TCP port",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Shared secret for Dynamic Authorization Extension server"},
															}},
														}},
													}},
												}, {
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "rate-limit",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Upload/Download speed limits"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "attribute",
															DefaultValue: []string{"Filter-Id"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"RADIUS attribute that contains rate information"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "vendor",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Vendor dictionary"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "enable",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Enable bandwidth shaping via RADIUS"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "multiplier",
															DefaultValue: []string{"1"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Shaper multiplier"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 0.001-1000 --float",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "<0.001-1000>",
																	Description: "Shaper multiplier",
																}},
																ConstraintErrorMessage: []string{"Multiplier needs to be between 0.001 and 1000"},
															}},
														}},
													}},
												}},
												TagNode: []*schemadefinition.TagNode{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "tagNode",
													},
													NodeNameAttr: "server",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"RADIUS server configuration"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "RADIUS server IPv4 address",
														}},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "disable",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Disable instance"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Shared secret key"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Regex: []string{"[[:ascii:]]{1,128}"},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Password string (key)",
																}},
																ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															DefaultValue: []string{"1812"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number used by connection"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}},
																ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "acct-port",
															DefaultValue: []string{"1813"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Accounting port"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "disable-accounting",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Disable accounting"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "fail-time",
															DefaultValue: []string{"0"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Mark server unavailable for <n> seconds on failure"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 0-600",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:0-600",
																	Description: "Fail time penalty",
																}},
																ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "priority",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Server priority"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-255",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-255",
																	Description: "Server priority",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "backup",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Use backup server if other servers are not available"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "source-address",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"IPv4 source address used to initiate connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "IPv4 source address",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "accounting-interim-interval",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Interval in seconds to send accounting information"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-3600",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-3600",
															Description: "Interval in seconds to send accounting information",
														}},
														ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "acct-interim-jitter",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-60",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-60",
															Description: "Maximum jitter value in seconds",
														}},
														ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "timeout",
													DefaultValue: []string{"3"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Timeout in seconds to wait response from RADIUS server"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-60",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-60",
															Description: "Timeout in seconds",
														}},
														ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "acct-timeout",
													DefaultValue: []string{"3"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 0-60",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:0-60",
															Description: "Timeout in seconds, 0 to keep active",
														}},
														ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "max-try",
													DefaultValue: []string{"3"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-20",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-20",
															Description: "Maximum tries",
														}},
														ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "nas-identifier",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"NAS-Identifier attribute sent to RADIUS"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "nas-ip-address",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "NAS-IP-Address attribute",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "preallocate-vif",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mode",
											DefaultValue: []string{"local"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Authentication mode used by this server"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(local|radius|noauth)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "local",
													Description: "Use local username/password configuration",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "radius",
													Description: "Use RADIUS server for user autentication",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "noauth",
													Description: "Authentication disabled",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"local radius noauth"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "protocols",
											DefaultValue: []string{"pap chap mschap mschap-v2"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Authentication protocol for remote access peer"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(pap|chap|mschap|mschap-v2)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "pap",
													Description: "Authentication via PAP (Password Authentication Protocol)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "chap",
													Description: "Authentication via CHAP (Challenge Handshake Authentication Protocol)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "mschap",
													Description: "Authentication via MS-CHAP (Microsoft Challenge Handshake Authentication Protocol)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "mschap-v2",
													Description: "Authentication via MS-CHAPv2 (Microsoft Challenge Handshake Authentication Protocol, version 2)",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"pap chap mschap mschap-v2"},
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "ipsec-settings",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Internet Protocol Security (IPsec) for remote access L2TP VPN"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "authentication",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPsec authentication settings"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "x509",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"X.509 certificate"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "certificate",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Certificate in PKI configuration"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Name of certificate in PKI configuration",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki certificate"},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "passphrase",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Private key passphrase"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Passphrase to decrypt the private key",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "ca-certificate",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Certificate Authority chain in PKI configuration"},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Name of CA in PKI configuration",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	Path: []string{"pki ca"},
																}},
																Multi: []*schemadefinition.Multi{{
																	XMLName: xml.Name{
																		Local: "multi",
																	},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "mode",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Authentication mode for IPsec"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"(pre-shared-secret|x509)"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "pre-shared-secret",
															Description: "Use pre-shared secret for IPsec authentication",
														}, {
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "x509",
															Description: "Use X.509 certificate for IPsec authentication",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															List: []string{"pre-shared-secret x509"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "pre-shared-secret",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Pre-shared secret key"},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Pre-shared secret key",
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ike-lifetime",
											DefaultValue: []string{"3600"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IKE lifetime"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 30-86400",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:30-86400",
													Description: "IKE lifetime in seconds",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lifetime",
											DefaultValue: []string{"3600"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"ESP lifetime"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 30-86400",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:30-86400",
													Description: "IKE lifetime in seconds",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "esp-group",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Encapsulating Security Payloads (ESP) group name"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"vpn ipsec esp-group"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ike-group",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Internet Key Exchange (IKE) group name"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"vpn ipsec ike-group"},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "lns",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"L2TP Network Server (LNS)"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "shared-secret",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Tunnel password used to authenticate the client (LAC)"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "host-name",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Sent to the client (LAC) in the Host-Name attribute"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"[A-Za-z0-9][-.A-Za-z0-9]&[A-Za-z0-9]"},
												}},
												ConstraintErrorMessage: []string{"Host-name must be alphanumeric and can contain hyphens"},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "extended-scripts",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Extended script execution"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-pre-up",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run before session interface comes up"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-up",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run when session interface is completely configured and started"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-down",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run when session interface going to terminate"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-change",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run when session interface changed by RADIUS CoA handling"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "limits",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Limits the connection rate from a single source"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "connection-limit",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Acceptable rate of connections (e.g. 1/min, 60/sec)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"[0-9]+\\/(min|sec)"},
												}},
												ConstraintErrorMessage: []string{"illegal value"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "burst",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Burst count"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout in seconds"},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "ppp-options",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Advanced protocol options"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "min-mtu",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Minimum acceptable MTU (68-65535)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 68-65535",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mru",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Preferred MRU (68-65535)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 68-65535",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "disable-ccp",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Disable Compression Control Protocol (CCP)"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mppe",
											DefaultValue: []string{"prefer"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Specifies mppe negotiation preferences"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(require|prefer|deny)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "require",
													Description: "send mppe request, if client rejects, drop the connection",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prefer",
													Description: "send mppe request, if client rejects continue",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "deny",
													Description: "drop all mppe",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"require prefer deny"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lcp-echo-interval",
											DefaultValue: []string{"30"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"LCP echo-requests/sec"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--positive",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lcp-echo-failure",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Maximum number of Echo-Requests may be sent without valid reply"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--positive",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lcp-echo-timeout",
											DefaultValue: []string{"0"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout in seconds to wait for any peer activity. If this option specified it turns on adaptive lcp echo functionality and \"lcp-echo-failure\" is not used."},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--positive",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "interface-cache",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"PPP interface cache"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-256000",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-256000",
													Description: "Count of interfaces to keep in cache",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv4",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 (IPCP) negotiation algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(deny|allow|prefer|require)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "deny",
													Description: "Do not negotiate IPv4",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "allow",
													Description: "Negotiate IPv4 only if client requests",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prefer",
													Description: "Ask client for IPv4 negotiation, do not fail if it rejects",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "require",
													Description: "Require IPv4 negotiation",
												}},
												ConstraintErrorMessage: []string{"invalid value"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"deny allow prefer require"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6",
											DefaultValue: []string{"deny"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv6 (IPCP6) negotiation algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(deny|allow|prefer|require)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "deny",
													Description: "Do not negotiate IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "allow",
													Description: "Negotiate IPv6 only if client requests",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prefer",
													Description: "Ask client for IPv6 negotiation, do not fail if it rejects",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "require",
													Description: "Require IPv6 negotiation",
												}},
												ConstraintErrorMessage: []string{"invalid value"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"deny allow prefer require"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6-interface-id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Fixed or random interface identifier for IPv6"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(random|((\\d+){1,4}:){3}(\\d+){1,4})"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "random",
													Description: "Random interface identifier for IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "x:x:x:x",
													Description: "specify interface identifier for IPv6",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"random"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6-peer-interface-id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Peer interface identifier for IPv6"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(random|calling-sid|ipv4-addr|((\\d+){1,4}:){3}(\\d+){1,4})"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "x:x:x:x",
													Description: "Interface identifier for IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "random",
													Description: "Use a random interface identifier for IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4-addr",
													Description: "Calculate interface identifier from IPv4 address, for example 192:168:0:1",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "calling-sid",
													Description: "Calculate interface identifier from calling-station-id",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"random calling-sid ipv4-addr"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6-accept-peer-interface-id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Accept peer interface identifier"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "shaper",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Traffic shaper bandwidth parameters"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "fwmark",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Firewall mark value for traffic that excludes from shaping"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-2147483647",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-2147483647",
													Description: "Match firewall mark value",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "snmp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Enable SNMP"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "master-agent",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Enable SNMP master agent mode"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "log",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Server logging "},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "level",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Specifies log level"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-5",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "0",
													Description: "Turn off logging",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "1",
													Description: "Log only error messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "2",
													Description: "Log error and warning messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "3",
													Description: "Log error, warning and minimum information messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "4",
													Description: "Log error, warning and full information messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "5",
													Description: "Log all messages including debug messages",
												}},
											}},
										}},
									}},
								}},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "client-ip-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Client IP pool"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of IP pool",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "range",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Range of IP addresses"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-prefix",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-host",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "ipv4-range-mask",
														ArgumentAttr: "-m 24 -r",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4net",
													Description: "IPv4 prefix",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4range",
													Description: "IPv4 address range inside /24 network",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "next-pool",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Next pool name"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Name of IP pool",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-4}"},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "client-ipv6-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Pool of client IPv6 addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of IPv6 pool",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "prefix",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Pool of addresses used to assign to clients"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "IPv6 address and prefix length",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "mask",
													DefaultValue: []string{"64"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Prefix length used for individual client"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 48-128",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:48-128",
															Description: "Client prefix length",
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "delegate",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Subnet used to delegate prefix through DHCPv6-PD (RFC3633)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "IPv6 address and prefix length",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "delegation-prefix",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Prefix length delegated to client"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 32-64",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:32-64",
															Description: "Delegated prefix length",
														}},
													}},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "outside-address",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"External IP address to which VPN clients will connect"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-address",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "default-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Default client IP pool name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Default IP pool",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ip-pool"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "default-ipv6-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Default client IPv6 pool name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Default IPv6 pool",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ipv6-pool"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "gateway-address",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Gateway IP address"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Default Gateway send to the client",
										}},
										ConstraintErrorMessage: []string{"invalid IPv4 address"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "max-concurrent-sessions",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum number of concurrent session start attempts"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--allow-range --range 0-65535",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:0-65535",
											Description: "Maximum number of concurrent session start attempts",
										}},
										ConstraintErrorMessage: []string{"Maximum concurent sessions must be in range 0-65535"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mtu",
									DefaultValue: []string{"1436"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum Transmission Unit (MTU)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 128-16384",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "wins-server",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Windows Internet Name Service (WINS) servers propagated to client"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Domain Name Server (DNS) IPv4 address",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "description",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Description"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{".{0,255}"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Description",
										}},
										ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "name-server",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Domain Name Servers (DNS) addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ip-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Domain Name Server (DNS) IPv4 address",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6",
											Description: "Domain Name Server (DNS) IPv6 address",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}},
							}},
						}},
					}},
				}, {
					IsBaseNode: true,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "openconnect",
					OwnerAttr:    "${vyos_conf_scripts_dir}/vpn_openconnect.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"SSL VPN OpenConnect, AnyConnect compatible server"},
						Priority: []string{"901"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "accounting",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Accounting for users OpenConnect VPN Sessions"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "mode",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Accounting mode used by this server"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "radius",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Use RADIUS server for accounting"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "radius",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"RADIUS accounting for users OpenConnect VPN sessions OpenConnect authentication mode radius"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS server configuration"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "RADIUS server IPv4 address",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret key"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"[[:ascii:]]{1,128}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Password string (key)",
														}},
														ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1813"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Accounting port"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
													}},
												}},
											}},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "authentication",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Authentication for remote access SSL VPN Server"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "mode",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication mode used by this server"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "local",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Use local username/password configuration (OTP supported)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(password|otp|password-otp)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "password",
													Description: "Password-only local authentication",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "otp",
													Description: "OTP-only local authentication",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "password-otp",
													Description: "Password (first) + OTP local authentication",
												}},
												ConstraintErrorMessage: []string{"Invalid authentication mode. Must be one of: password, otp or password-otp "},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"otp password password-otp"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "radius",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Use RADIUS server for user autentication"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "identity-based-config",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Include configuration file by username or RADIUS group attribute"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "disable",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Disable instance"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mode",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Select per user or per group configuration file - ignored if authentication group is configured"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(user|group)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "user",
													Description: "Match configuration file on username",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "group",
													Description: "Match RADIUS response class attribute as file name",
												}},
												ConstraintErrorMessage: []string{"Invalid mode, must be either user or group"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"user group"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "directory",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Directory to containing configuration files"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "file-path",
														ArgumentAttr: "--directory --parent-dir /config/auth --strict",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "path",
													Description: "Path to configuration directory, must be under /config/auth",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "default-config",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Default configuration if discrete config could not be found"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "file-path",
														ArgumentAttr: "--file --parent-dir /config/auth --strict",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "filename",
													Description: "Default configuration filename, must be under /config/auth",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "local-users",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Local user authentication"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "username",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Username used for authentication"},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Username used for authentication",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "otp",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"2FA OTP authentication parameters"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Token Key Secret key for the token algorithm (see RFC 4226)"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Regex: []string{"[a-fA-F0-9]{20,10000}"},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "OTP key in hex-encoded format",
																}},
																ConstraintErrorMessage: []string{"Key name must only include hex characters and be at least 20 characters long"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "otp-length",
															DefaultValue: []string{"6"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Number of digits in OTP code"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 6-8",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:6-8",
																	Description: "Number of digits in OTP code",
																}},
																ConstraintErrorMessage: []string{"Number of digits in OTP code must be between 6 and 8"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "interval",
															DefaultValue: []string{"30"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Time tokens interval in seconds"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 5-86400",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:5-86400",
																	Description: "Time tokens interval in seconds.",
																}},
																ConstraintErrorMessage: []string{"Time token interval must be between 5 and 86400 seconds"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "token-type",
															DefaultValue: []string{"hotp-time"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Token type"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Regex: []string{"(hotp-time|hotp-event)"},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "hotp-time",
																	Description: "Time-based OTP algorithm",
																}, {
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "hotp-event",
																	Description: "Event-based OTP algorithm",
																}},
																CompletionHelp: []*schemadefinition.CompletionHelp{{
																	XMLName: xml.Name{
																		Local: "completionHelp",
																	},
																	List: []string{"hotp-time hotp-event"},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "password",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Password used for authentication"},
													}},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "radius",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"RADIUS based user authentication"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS server configuration"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "RADIUS server IPv4 address",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret key"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"[[:ascii:]]{1,128}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Password string (key)",
														}},
														ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1812"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port number used by connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
														ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "source-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 source address used to initiate connection"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 source address",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											DefaultValue: []string{"2"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Session timeout"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-240",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-240",
													Description: "Session timeout in seconds (default: 2)",
												}},
												ConstraintErrorMessage: []string{"Timeout must be between 1 and 240 seconds"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "groupconfig",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"If the groupconfig option is set, then config-per-user will be overriden, and all configuration will be read from RADIUS."},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "group",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Group that a client is allowed to select (from a list). Maps to RADIUS Class attribute."},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Group string. The group may be followed by a user-friendly name in brackets: group1[First Group]",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "listen-ports",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Specify custom ports to use for client connections"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "tcp",
									DefaultValue: []string{"443"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"tcp port number to accept connections"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-65535",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-65535",
											Description: "Numeric IP port",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "udp",
									DefaultValue: []string{"443"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"udp port number to accept connections"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-65535",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-65535",
											Description: "Numeric IP port",
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "ssl",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"SSL Certificate, SSL Key and CA"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ca-certificate",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Certificate Authority chain in PKI configuration"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of CA in PKI configuration",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"pki ca"},
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "certificate",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Certificate in PKI configuration"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of certificate in PKI configuration",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"pki certificate"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "passphrase",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Private key passphrase"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Passphrase to decrypt the private key",
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "network-settings",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Network settings"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "client-ip-settings",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Client IP pools settings"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "subnet",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Client IP subnet (CIDR notation)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4net",
													Description: "IPv4 address and prefix length",
												}},
												ConstraintErrorMessage: []string{"Not a valid CIDR formatted prefix"},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "client-ipv6-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Pool of client IPv6 addresses"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "prefix",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Pool of addresses used to assign to clients"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "IPv6 address and prefix length",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mask",
											DefaultValue: []string{"64"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Prefix length used for individual client"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 48-128",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:48-128",
													Description: "Client prefix length",
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "push-route",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Route to be pushed to the client"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ip-prefix",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4net",
											Description: "IPv4 network and prefix length",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6net",
											Description: "IPv6 network and prefix length",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "name-server",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Domain Name Servers (DNS) addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ip-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Domain Name Server (DNS) IPv4 address",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6",
											Description: "Domain Name Server (DNS) IPv6 address",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "split-dns",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Domains over which the provided DNS should be used"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "fqdn",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Client prefix length",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "tunnel-all-dns",
									DefaultValue: []string{"no"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"If the tunnel-all-dns option is set to yes, tunnel all DNS queries via the VPN. This is the default when a default route is set."},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(yes|no)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "yes",
											Description: "Enable tunneling of all DNS traffic",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "no",
											Description: "Disable tunneling of all DNS traffic",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"yes no"},
										}},
									}},
								}},
							}},
						}},
						LeafNode: []*schemadefinition.LeafNode{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "listen-address",
							DefaultValue: []string{"0.0.0.0"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Local IPv4 addresses to listen on"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ipv4-address",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv4",
									Description: "IPv4 address to listen for incoming connections",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "http-security-headers",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Enable HTTP security headers"},
								Valueless: []*schemadefinition.Valueless{{
									XMLName: xml.Name{
										Local: "valueless",
									},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "tls-version-min",
							DefaultValue: []string{"1.2"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Specify the minimum required TLS version"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"(1.0|1.1|1.2|1.3)"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "1.0",
									Description: "TLS v1.0",
								}, {
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "1.1",
									Description: "TLS v1.1",
								}, {
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "1.2",
									Description: "TLS v1.2",
								}, {
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "1.3",
									Description: "TLS v1.3",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									List: []string{"1.0 1.1 1.2 1.3"},
								}},
							}},
						}},
					}},
				}, {
					IsBaseNode: false,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "pptp",
					OwnerAttr:    "${vyos_conf_scripts_dir}/vpn_pptp.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"Point to Point Tunneling Protocol (PPTP) Virtual Private Network (VPN)"},
						Priority: []string{"901"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "remote-access",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Remote access PPTP VPN"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "authentication",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication for remote access PPTP VPN"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "local-users",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Local user authentication for PPPoE server"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												TagNode: []*schemadefinition.TagNode{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "tagNode",
													},
													NodeNameAttr: "username",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"User name for authentication"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														Node: []*schemadefinition.Node{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "rate-limit",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Upload/Download speed limits"},
															}},
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "upload",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Upload bandwidth limit in kbits/sec"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-10000000",
																			}},
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "download",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Download bandwidth limit in kbits/sec"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-10000000",
																			}},
																		}},
																	}},
																}},
															}},
														}},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "disable",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Disable instance"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "password",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Password for authentication"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "static-ip",
															DefaultValue: []string{"&"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Static client IP address"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address",
																	}},
																}},
															}},
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "radius",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS based user authentication"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "dynamic-author",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "server",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr: "ipv4-address",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "ipv4",
																	Description: "IPv4 address for dynamic authorization server",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															DefaultValue: []string{"1700"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "TCP port",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Shared secret for Dynamic Authorization Extension server"},
															}},
														}},
													}},
												}, {
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "rate-limit",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Upload/Download speed limits"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "attribute",
															DefaultValue: []string{"Filter-Id"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"RADIUS attribute that contains rate information"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "vendor",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Vendor dictionary"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "enable",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Enable bandwidth shaping via RADIUS"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "multiplier",
															DefaultValue: []string{"1"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Shaper multiplier"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 0.001-1000 --float",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "<0.001-1000>",
																	Description: "Shaper multiplier",
																}},
																ConstraintErrorMessage: []string{"Multiplier needs to be between 0.001 and 1000"},
															}},
														}},
													}},
												}},
												TagNode: []*schemadefinition.TagNode{{
													IsBaseNode: true,
													XMLName: xml.Name{
														Local: "tagNode",
													},
													NodeNameAttr: "server",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"RADIUS server configuration"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "RADIUS server IPv4 address",
														}},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "disable",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Disable instance"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "key",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Shared secret key"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Regex: []string{"[[:ascii:]]{1,128}"},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "txt",
																	Description: "Password string (key)",
																}},
																ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "port",
															DefaultValue: []string{"1812"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Port number used by connection"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}},
																ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "acct-port",
															DefaultValue: []string{"1813"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Accounting port"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-65535",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-65535",
																	Description: "Numeric IP port",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "disable-accounting",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Disable accounting"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "fail-time",
															DefaultValue: []string{"0"},
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Mark server unavailable for <n> seconds on failure"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 0-600",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:0-600",
																	Description: "Fail time penalty",
																}},
																ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "priority",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Server priority"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-255",
																	}},
																}},
																ValueHelp: []*schemadefinition.ValueHelp{{
																	XMLName: xml.Name{
																		Local: "valueHelp",
																	},
																	Format:      "u32:1-255",
																	Description: "Server priority",
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "backup",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Use backup server if other servers are not available"},
																Valueless: []*schemadefinition.Valueless{{
																	XMLName: xml.Name{
																		Local: "valueless",
																	},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "source-address",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"IPv4 source address used to initiate connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "IPv4 source address",
														}},
														CompletionHelp: []*schemadefinition.CompletionHelp{{
															XMLName: xml.Name{
																Local: "completionHelp",
															},
															Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "accounting-interim-interval",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Interval in seconds to send accounting information"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-3600",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-3600",
															Description: "Interval in seconds to send accounting information",
														}},
														ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "acct-interim-jitter",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-60",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-60",
															Description: "Maximum jitter value in seconds",
														}},
														ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "timeout",
													DefaultValue: []string{"3"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Timeout in seconds to wait response from RADIUS server"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-60",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-60",
															Description: "Timeout in seconds",
														}},
														ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "acct-timeout",
													DefaultValue: []string{"3"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 0-60",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:0-60",
															Description: "Timeout in seconds, 0 to keep active",
														}},
														ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "max-try",
													DefaultValue: []string{"3"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-20",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-20",
															Description: "Maximum tries",
														}},
														ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "nas-identifier",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"NAS-Identifier attribute sent to RADIUS"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "nas-ip-address",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "NAS-IP-Address attribute",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "preallocate-vif",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mode",
											DefaultValue: []string{"local"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Authentication mode used by this server"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(local|radius|noauth)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "local",
													Description: "Use local username/password configuration",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "radius",
													Description: "Use RADIUS server for user autentication",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "noauth",
													Description: "Authentication disabled",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"local radius noauth"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "protocols",
											DefaultValue: []string{"pap chap mschap mschap-v2"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Authentication protocol for remote access peer"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(pap|chap|mschap|mschap-v2)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "pap",
													Description: "Authentication via PAP (Password Authentication Protocol)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "chap",
													Description: "Authentication via CHAP (Challenge Handshake Authentication Protocol)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "mschap",
													Description: "Authentication via MS-CHAP (Microsoft Challenge Handshake Authentication Protocol)",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "mschap-v2",
													Description: "Authentication via MS-CHAPv2 (Microsoft Challenge Handshake Authentication Protocol, version 2)",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"pap chap mschap mschap-v2"},
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "extended-scripts",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Extended script execution"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-pre-up",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run before session interface comes up"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-up",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run when session interface is completely configured and started"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-down",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run when session interface going to terminate"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "on-change",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Script to run when session interface changed by RADIUS CoA handling"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "script",
													}},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "limits",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Limits the connection rate from a single source"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "connection-limit",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Acceptable rate of connections (e.g. 1/min, 60/sec)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"[0-9]+\\/(min|sec)"},
												}},
												ConstraintErrorMessage: []string{"illegal value"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "burst",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Burst count"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout in seconds"},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "ppp-options",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Advanced protocol options"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "min-mtu",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Minimum acceptable MTU (68-65535)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 68-65535",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mru",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Preferred MRU (68-65535)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 68-65535",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "disable-ccp",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Disable Compression Control Protocol (CCP)"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mppe",
											DefaultValue: []string{"prefer"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Specifies mppe negotiation preferences"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(require|prefer|deny)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "require",
													Description: "send mppe request, if client rejects, drop the connection",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prefer",
													Description: "send mppe request, if client rejects continue",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "deny",
													Description: "drop all mppe",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"require prefer deny"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lcp-echo-interval",
											DefaultValue: []string{"30"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"LCP echo-requests/sec"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--positive",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lcp-echo-failure",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Maximum number of Echo-Requests may be sent without valid reply"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--positive",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "lcp-echo-timeout",
											DefaultValue: []string{"0"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout in seconds to wait for any peer activity. If this option specified it turns on adaptive lcp echo functionality and \"lcp-echo-failure\" is not used."},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--positive",
													}},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "interface-cache",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"PPP interface cache"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-256000",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-256000",
													Description: "Count of interfaces to keep in cache",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv4",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 (IPCP) negotiation algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(deny|allow|prefer|require)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "deny",
													Description: "Do not negotiate IPv4",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "allow",
													Description: "Negotiate IPv4 only if client requests",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prefer",
													Description: "Ask client for IPv4 negotiation, do not fail if it rejects",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "require",
													Description: "Require IPv4 negotiation",
												}},
												ConstraintErrorMessage: []string{"invalid value"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"deny allow prefer require"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6",
											DefaultValue: []string{"deny"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv6 (IPCP6) negotiation algorithm"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(deny|allow|prefer|require)"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "deny",
													Description: "Do not negotiate IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "allow",
													Description: "Negotiate IPv6 only if client requests",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "prefer",
													Description: "Ask client for IPv6 negotiation, do not fail if it rejects",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "require",
													Description: "Require IPv6 negotiation",
												}},
												ConstraintErrorMessage: []string{"invalid value"},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"deny allow prefer require"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6-interface-id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Fixed or random interface identifier for IPv6"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(random|((\\d+){1,4}:){3}(\\d+){1,4})"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "random",
													Description: "Random interface identifier for IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "x:x:x:x",
													Description: "specify interface identifier for IPv6",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"random"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6-peer-interface-id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Peer interface identifier for IPv6"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"(random|calling-sid|ipv4-addr|((\\d+){1,4}:){3}(\\d+){1,4})"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "x:x:x:x",
													Description: "Interface identifier for IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "random",
													Description: "Use a random interface identifier for IPv6",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4-addr",
													Description: "Calculate interface identifier from IPv4 address, for example 192:168:0:1",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "calling-sid",
													Description: "Calculate interface identifier from calling-station-id",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													List: []string{"random calling-sid ipv4-addr"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "ipv6-accept-peer-interface-id",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Accept peer interface identifier"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "shaper",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Traffic shaper bandwidth parameters"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "fwmark",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Firewall mark value for traffic that excludes from shaping"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-2147483647",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-2147483647",
													Description: "Match firewall mark value",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "snmp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Enable SNMP"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "master-agent",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Enable SNMP master agent mode"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "log",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Server logging "},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "level",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Specifies log level"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-5",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "0",
													Description: "Turn off logging",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "1",
													Description: "Log only error messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "2",
													Description: "Log error and warning messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "3",
													Description: "Log error, warning and minimum information messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "4",
													Description: "Log error, warning and full information messages",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "5",
													Description: "Log all messages including debug messages",
												}},
											}},
										}},
									}},
								}},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "client-ip-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Client IP pool"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of IP pool",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "range",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Range of IP addresses"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-prefix",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-host",
													}, {
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "ipv4-range-mask",
														ArgumentAttr: "-m 24 -r",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4net",
													Description: "IPv4 prefix",
												}, {
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4range",
													Description: "IPv4 address range inside /24 network",
												}},
												Multi: []*schemadefinition.Multi{{
													XMLName: xml.Name{
														Local: "multi",
													},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "next-pool",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Next pool name"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "txt",
													Description: "Name of IP pool",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-4}"},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "client-ipv6-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Pool of client IPv6 addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of IPv6 pool",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "prefix",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Pool of addresses used to assign to clients"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "IPv6 address and prefix length",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "mask",
													DefaultValue: []string{"64"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Prefix length used for individual client"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 48-128",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:48-128",
															Description: "Client prefix length",
														}},
													}},
												}},
											}},
										}, {
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "delegate",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Subnet used to delegate prefix through DHCPv6-PD (RFC3633)"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv6-prefix",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv6net",
													Description: "IPv6 address and prefix length",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "delegation-prefix",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Prefix length delegated to client"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 32-64",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:32-64",
															Description: "Delegated prefix length",
														}},
													}},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "outside-address",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"External IP address to which VPN clients will connect"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-address",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "default-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Default client IP pool name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Default IP pool",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ip-pool"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "default-ipv6-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Default client IPv6 pool name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Default IPv6 pool",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ipv6-pool"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "gateway-address",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Gateway IP address"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Default Gateway send to the client",
										}},
										ConstraintErrorMessage: []string{"invalid IPv4 address"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "max-concurrent-sessions",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum number of concurrent session start attempts"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--allow-range --range 0-65535",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:0-65535",
											Description: "Maximum number of concurrent session start attempts",
										}},
										ConstraintErrorMessage: []string{"Maximum concurent sessions must be in range 0-65535"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mtu",
									DefaultValue: []string{"1436"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum Transmission Unit (MTU)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 128-16384",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "wins-server",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Windows Internet Name Service (WINS) servers propagated to client"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Domain Name Server (DNS) IPv4 address",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "description",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Description"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{".{0,255}"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Description",
										}},
										ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "name-server",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Domain Name Servers (DNS) addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ip-address",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4",
											Description: "Domain Name Server (DNS) IPv4 address",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6",
											Description: "Domain Name Server (DNS) IPv6 address",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}},
							}},
						}},
					}},
				}, {
					IsBaseNode: true,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "sstp",
					OwnerAttr:    "${vyos_conf_scripts_dir}/vpn_sstp.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"Secure Socket Tunneling Protocol (SSTP) server"},
						Priority: []string{"901"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "authentication",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Authentication for remote access SSTP Server"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "local-users",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Local user authentication for PPPoE server"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "username",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"User name for authentication"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "rate-limit",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Upload/Download speed limits"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "upload",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Upload bandwidth limit in kbits/sec"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-10000000",
																	}},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "download",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Download bandwidth limit in kbits/sec"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range 1-10000000",
																	}},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "password",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Password for authentication"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "static-ip",
													DefaultValue: []string{"&"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Static client IP address"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
													}},
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "radius",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"RADIUS based user authentication"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "dynamic-author",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "server",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "IPv4 address for dynamic authorization server",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1700"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "TCP port",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret for Dynamic Authorization Extension server"},
													}},
												}},
											}},
										}, {
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "rate-limit",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Upload/Download speed limits"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "attribute",
													DefaultValue: []string{"Filter-Id"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"RADIUS attribute that contains rate information"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "vendor",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Vendor dictionary"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "enable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Enable bandwidth shaping via RADIUS"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "multiplier",
													DefaultValue: []string{"1"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shaper multiplier"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 0.001-1000 --float",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "<0.001-1000>",
															Description: "Shaper multiplier",
														}},
														ConstraintErrorMessage: []string{"Multiplier needs to be between 0.001 and 1000"},
													}},
												}},
											}},
										}},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: true,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS server configuration"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "RADIUS server IPv4 address",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret key"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"[[:ascii:]]{1,128}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Password string (key)",
														}},
														ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1812"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port number used by connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
														ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "acct-port",
													DefaultValue: []string{"1813"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Accounting port"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable-accounting",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable accounting"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "fail-time",
													DefaultValue: []string{"0"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Mark server unavailable for <n> seconds on failure"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 0-600",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:0-600",
															Description: "Fail time penalty",
														}},
														ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "priority",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Server priority"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-255",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-255",
															Description: "Server priority",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "backup",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Use backup server if other servers are not available"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "source-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 source address used to initiate connection"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 source address",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "accounting-interim-interval",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Interval in seconds to send accounting information"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-3600",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-3600",
													Description: "Interval in seconds to send accounting information",
												}},
												ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "acct-interim-jitter",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-60",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-60",
													Description: "Maximum jitter value in seconds",
												}},
												ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout in seconds to wait response from RADIUS server"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-60",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-60",
													Description: "Timeout in seconds",
												}},
												ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "acct-timeout",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-60",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:0-60",
													Description: "Timeout in seconds, 0 to keep active",
												}},
												ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "max-try",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-20",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-20",
													Description: "Maximum tries",
												}},
												ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "nas-identifier",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"NAS-Identifier attribute sent to RADIUS"},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "nas-ip-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "NAS-IP-Address attribute",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "preallocate-vif",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mode",
									DefaultValue: []string{"local"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication mode used by this server"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(local|radius|noauth)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "local",
											Description: "Use local username/password configuration",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "radius",
											Description: "Use RADIUS server for user autentication",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "noauth",
											Description: "Authentication disabled",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"local radius noauth"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "protocols",
									DefaultValue: []string{"pap chap mschap mschap-v2"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication protocol for remote access peer"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(pap|chap|mschap|mschap-v2)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "pap",
											Description: "Authentication via PAP (Password Authentication Protocol)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "chap",
											Description: "Authentication via CHAP (Challenge Handshake Authentication Protocol)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "mschap",
											Description: "Authentication via MS-CHAP (Microsoft Challenge Handshake Authentication Protocol)",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "mschap-v2",
											Description: "Authentication via MS-CHAPv2 (Microsoft Challenge Handshake Authentication Protocol, version 2)",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"pap chap mschap mschap-v2"},
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "ssl",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"SSL Certificate, SSL Key and CA"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ca-certificate",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Certificate Authority in PKI configuration"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of CA in PKI configuration",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"pki ca"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "certificate",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Certificate in PKI configuration"},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of certificate in PKI configuration",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"pki certificate"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "extended-scripts",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Extended script execution"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-pre-up",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run before session interface comes up"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-up",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run when session interface is completely configured and started"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-down",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run when session interface going to terminate"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-change",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run when session interface changed by RADIUS CoA handling"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "limits",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Limits the connection rate from a single source"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "connection-limit",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Acceptable rate of connections (e.g. 1/min, 60/sec)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[0-9]+\\/(min|sec)"},
										}},
										ConstraintErrorMessage: []string{"illegal value"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "burst",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Burst count"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "timeout",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Timeout in seconds"},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "ppp-options",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Advanced protocol options"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "min-mtu",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Minimum acceptable MTU (68-65535)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 68-65535",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mru",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Preferred MRU (68-65535)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 68-65535",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "disable-ccp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Disable Compression Control Protocol (CCP)"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mppe",
									DefaultValue: []string{"prefer"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Specifies mppe negotiation preferences"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(require|prefer|deny)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "require",
											Description: "send mppe request, if client rejects, drop the connection",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "prefer",
											Description: "send mppe request, if client rejects continue",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "deny",
											Description: "drop all mppe",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"require prefer deny"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "lcp-echo-interval",
									DefaultValue: []string{"30"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"LCP echo-requests/sec"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--positive",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "lcp-echo-failure",
									DefaultValue: []string{"3"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Maximum number of Echo-Requests may be sent without valid reply"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--positive",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "lcp-echo-timeout",
									DefaultValue: []string{"0"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Timeout in seconds to wait for any peer activity. If this option specified it turns on adaptive lcp echo functionality and \"lcp-echo-failure\" is not used."},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--positive",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "interface-cache",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"PPP interface cache"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-256000",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-256000",
											Description: "Count of interfaces to keep in cache",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ipv4",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IPv4 (IPCP) negotiation algorithm"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(deny|allow|prefer|require)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "deny",
											Description: "Do not negotiate IPv4",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "allow",
											Description: "Negotiate IPv4 only if client requests",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "prefer",
											Description: "Ask client for IPv4 negotiation, do not fail if it rejects",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "require",
											Description: "Require IPv4 negotiation",
										}},
										ConstraintErrorMessage: []string{"invalid value"},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"deny allow prefer require"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ipv6",
									DefaultValue: []string{"deny"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"IPv6 (IPCP6) negotiation algorithm"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(deny|allow|prefer|require)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "deny",
											Description: "Do not negotiate IPv6",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "allow",
											Description: "Negotiate IPv6 only if client requests",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "prefer",
											Description: "Ask client for IPv6 negotiation, do not fail if it rejects",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "require",
											Description: "Require IPv6 negotiation",
										}},
										ConstraintErrorMessage: []string{"invalid value"},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"deny allow prefer require"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ipv6-interface-id",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Fixed or random interface identifier for IPv6"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(random|((\\d+){1,4}:){3}(\\d+){1,4})"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "random",
											Description: "Random interface identifier for IPv6",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "x:x:x:x",
											Description: "specify interface identifier for IPv6",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"random"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ipv6-peer-interface-id",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Peer interface identifier for IPv6"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(random|calling-sid|ipv4-addr|((\\d+){1,4}:){3}(\\d+){1,4})"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "x:x:x:x",
											Description: "Interface identifier for IPv6",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "random",
											Description: "Use a random interface identifier for IPv6",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4-addr",
											Description: "Calculate interface identifier from IPv4 address, for example 192:168:0:1",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "calling-sid",
											Description: "Calculate interface identifier from calling-station-id",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"random calling-sid ipv4-addr"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "ipv6-accept-peer-interface-id",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Accept peer interface identifier"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "shaper",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Traffic shaper bandwidth parameters"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "fwmark",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Firewall mark value for traffic that excludes from shaping"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-2147483647",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-2147483647",
											Description: "Match firewall mark value",
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "snmp",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Enable SNMP"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "master-agent",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Enable SNMP master agent mode"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "log",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Server logging "},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "level",
									DefaultValue: []string{"3"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Specifies log level"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 0-5",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "0",
											Description: "Turn off logging",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "1",
											Description: "Log only error messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "2",
											Description: "Log error and warning messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "3",
											Description: "Log error, warning and minimum information messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "4",
											Description: "Log error, warning and full information messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "5",
											Description: "Log all messages including debug messages",
										}},
									}},
								}},
							}},
						}},
						TagNode: []*schemadefinition.TagNode{{
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "client-ip-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Client IP pool"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Name of IP pool",
								}},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "range",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Range of IP addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-prefix",
											}, {
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-host",
											}, {
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "ipv4-range-mask",
												ArgumentAttr: "-m 24 -r",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4net",
											Description: "IPv4 prefix",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4range",
											Description: "IPv4 address range inside /24 network",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "next-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Next pool name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of IP pool",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-4}"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: true,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "client-ipv6-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Pool of client IPv6 addresses"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Name of IPv6 pool",
								}},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "prefix",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Pool of addresses used to assign to clients"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv6-prefix",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6net",
											Description: "IPv6 address and prefix length",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mask",
											DefaultValue: []string{"64"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Prefix length used for individual client"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 48-128",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:48-128",
													Description: "Client prefix length",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: true,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "delegate",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Subnet used to delegate prefix through DHCPv6-PD (RFC3633)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv6-prefix",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6net",
											Description: "IPv6 address and prefix length",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "delegation-prefix",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Prefix length delegated to client"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 32-64",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:32-64",
													Description: "Delegated prefix length",
												}},
											}},
										}},
									}},
								}},
							}},
						}},
						LeafNode: []*schemadefinition.LeafNode{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "default-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Default client IP pool name"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Default IP pool",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ip-pool"},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "default-ipv6-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Default client IPv6 pool name"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Default IPv6 pool",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ipv6-pool"},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "gateway-address",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Gateway IP address"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ipv4-address",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv4",
									Description: "Default Gateway send to the client",
								}},
								ConstraintErrorMessage: []string{"invalid IPv4 address"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "max-concurrent-sessions",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Maximum number of concurrent session start attempts"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--allow-range --range 0-65535",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:0-65535",
									Description: "Maximum number of concurrent session start attempts",
								}},
								ConstraintErrorMessage: []string{"Maximum concurent sessions must be in range 0-65535"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "mtu",
							DefaultValue: []string{"1500"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Maximum Transmission Unit (MTU)"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--range 68-1500",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:68-1500",
									Description: "Maximum Transmission Unit in byte",
								}},
								ConstraintErrorMessage: []string{"MTU must be between 68 and 1500"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "port",
							DefaultValue: []string{"443"},
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Port number used by connection"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--range 1-65535",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:1-65535",
									Description: "Numeric IP port",
								}},
								ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "wins-server",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Windows Internet Name Service (WINS) servers propagated to client"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ipv4-address",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv4",
									Description: "Domain Name Server (DNS) IPv4 address",
								}},
								Multi: []*schemadefinition.Multi{{
									XMLName: xml.Name{
										Local: "multi",
									},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "description",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Description"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{".{0,255}"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Description",
								}},
								ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "name-server",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Domain Name Servers (DNS) addresses"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ip-address",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv4",
									Description: "Domain Name Server (DNS) IPv4 address",
								}, {
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv6",
									Description: "Domain Name Server (DNS) IPv6 address",
								}},
								Multi: []*schemadefinition.Multi{{
									XMLName: xml.Name{
										Local: "multi",
									},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "host-name",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Only allow connection to specified host with the same TLS SNI"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[A-Za-z0-9][-.A-Za-z0-9]&[A-Za-z0-9]"},
								}},
								ConstraintErrorMessage: []string{"Host-name must be alphanumeric and can contain hyphens"},
							}},
						}},
					}},
				}},
			}},
		}},
	}
}
