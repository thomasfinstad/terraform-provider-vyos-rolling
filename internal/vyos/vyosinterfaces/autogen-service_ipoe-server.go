// Code generated by tools/build-vyos-infterface-definition-structs/main.go. DO NOT EDIT.

package vyosinterface

import (
	"encoding/xml"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/vyos/schemadefinition"
)

func service_ipoeserver() schemadefinition.InterfaceDefinition {
	return schemadefinition.InterfaceDefinition{
		XMLName: xml.Name{
			Local: "interfaceDefinition",
		},
		Node: []*schemadefinition.Node{{
			IsBaseNode: false,
			XMLName: xml.Name{
				Local: "node",
			},
			NodeNameAttr: "service",
			Children: []*schemadefinition.Children{{
				XMLName: xml.Name{
					Local: "children",
				},
				Node: []*schemadefinition.Node{{
					IsBaseNode: false,
					XMLName: xml.Name{
						Local: "node",
					},
					NodeNameAttr: "ipoe-server",
					OwnerAttr:    "${vyos_conf_scripts_dir}/service_ipoe-server.py",
					Properties: []*schemadefinition.Properties{{
						XMLName: xml.Name{
							Local: "properties",
						},
						Help:     []string{"Internet Protocol over Ethernet (IPoE) Server"},
						Priority: []string{"900"},
					}},
					Children: []*schemadefinition.Children{{
						XMLName: xml.Name{
							Local: "children",
						},
						Node: []*schemadefinition.Node{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "authentication",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Client authentication methods"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "radius",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"RADIUS based user authentication"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										Node: []*schemadefinition.Node{{
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{nil},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "dynamic-author",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "server",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr: "ipv4-address",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "ipv4",
															Description: "IPv4 address for dynamic authorization server",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1700"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "TCP port",
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret for Dynamic Authorization Extension server"},
													}},
												}},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{nil},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "node",
											},
											NodeNameAttr: "rate-limit",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Upload/Download speed limits"},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "attribute",
													DefaultValue: []string{"Filter-Id"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"RADIUS attribute that contains rate information"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "vendor",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Vendor dictionary"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "enable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Enable bandwidth shaping via RADIUS"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "multiplier",
													DefaultValue: []string{"1"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shaper multiplier"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 0.001-1000 --float",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "<0.001-1000>",
															Description: "Shaper multiplier",
														}},
														ConstraintErrorMessage: []string{"Multiplier needs to be between 0.001 and 1000"},
													}},
												}},
											}},
										}},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "server",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"RADIUS server configuration"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "RADIUS server IPv4 address",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable instance"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "key",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Shared secret key"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Regex: []string{"[[:ascii:]]{1,128}"},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "txt",
															Description: "Password string (key)",
														}},
														ConstraintErrorMessage: []string{"Password must be less then 128 characters"},
													}},
												}, {
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "port",
													DefaultValue: []string{"1812"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Port number used by connection"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
														ConstraintErrorMessage: []string{"Port number must be in range 1 to 65535"},
													}},
												}, {
													Parent: &schemadefinition.TagNode{
														Parent: &schemadefinition.Node{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "radius",
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "dynamic-author",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "server",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr: "ipv4-address",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "ipv4",
																					Description: "IPv4 address for dynamic authorization server",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "port",
																			DefaultValue: []string{"1700"},
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-65535",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-65535",
																					Description: "TCP port",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "key",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																			}},
																		}},
																	}},
																}},
																TagNode: []*schemadefinition.TagNode{nil},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "accounting-interim-interval",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Interval in seconds to send accounting information"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-3600",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-3600",
																			Description: "Interval in seconds to send accounting information",
																		}},
																		ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-interim-jitter",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Maximum jitter value in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout in seconds to wait response from RADIUS server"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Timeout in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 0-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:0-60",
																			Description: "Timeout in seconds, 0 to keep active",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "max-try",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-20",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-20",
																			Description: "Maximum tries",
																		}},
																		ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-identifier",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-Identifier attribute sent to RADIUS"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-ip-address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "NAS-IP-Address attribute",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "preallocate-vif",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														},
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{nil, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													},
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "acct-port",
													DefaultValue: []string{"1813"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Accounting port"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-65535",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-65535",
															Description: "Numeric IP port",
														}},
													}},
												}, {
													Parent: &schemadefinition.TagNode{
														Parent: &schemadefinition.Node{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "radius",
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "dynamic-author",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "server",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr: "ipv4-address",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "ipv4",
																					Description: "IPv4 address for dynamic authorization server",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "port",
																			DefaultValue: []string{"1700"},
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-65535",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-65535",
																					Description: "TCP port",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "key",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																			}},
																		}},
																	}},
																}},
																TagNode: []*schemadefinition.TagNode{nil},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "accounting-interim-interval",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Interval in seconds to send accounting information"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-3600",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-3600",
																			Description: "Interval in seconds to send accounting information",
																		}},
																		ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-interim-jitter",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Maximum jitter value in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout in seconds to wait response from RADIUS server"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Timeout in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 0-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:0-60",
																			Description: "Timeout in seconds, 0 to keep active",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "max-try",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-20",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-20",
																			Description: "Maximum tries",
																		}},
																		ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-identifier",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-Identifier attribute sent to RADIUS"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-ip-address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "NAS-IP-Address attribute",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "preallocate-vif",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														},
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, nil, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													},
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "disable-accounting",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Disable accounting"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}, {
													Parent: &schemadefinition.TagNode{
														Parent: &schemadefinition.Node{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "radius",
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "dynamic-author",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "server",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr: "ipv4-address",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "ipv4",
																					Description: "IPv4 address for dynamic authorization server",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "port",
																			DefaultValue: []string{"1700"},
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-65535",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-65535",
																					Description: "TCP port",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "key",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																			}},
																		}},
																	}},
																}},
																TagNode: []*schemadefinition.TagNode{nil},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "accounting-interim-interval",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Interval in seconds to send accounting information"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-3600",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-3600",
																			Description: "Interval in seconds to send accounting information",
																		}},
																		ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-interim-jitter",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Maximum jitter value in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout in seconds to wait response from RADIUS server"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Timeout in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 0-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:0-60",
																			Description: "Timeout in seconds, 0 to keep active",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "max-try",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-20",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-20",
																			Description: "Maximum tries",
																		}},
																		ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-identifier",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-Identifier attribute sent to RADIUS"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-ip-address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "NAS-IP-Address attribute",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "preallocate-vif",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														},
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, nil, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													},
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "fail-time",
													DefaultValue: []string{"0"},
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Mark server unavailable for <n> seconds on failure"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 0-600",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:0-600",
															Description: "Fail time penalty",
														}},
														ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
													}},
												}, {
													Parent: &schemadefinition.TagNode{
														Parent: &schemadefinition.Node{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "radius",
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "dynamic-author",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "server",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr: "ipv4-address",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "ipv4",
																					Description: "IPv4 address for dynamic authorization server",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "port",
																			DefaultValue: []string{"1700"},
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-65535",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-65535",
																					Description: "TCP port",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "key",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																			}},
																		}},
																	}},
																}},
																TagNode: []*schemadefinition.TagNode{nil},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "accounting-interim-interval",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Interval in seconds to send accounting information"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-3600",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-3600",
																			Description: "Interval in seconds to send accounting information",
																		}},
																		ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-interim-jitter",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Maximum jitter value in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout in seconds to wait response from RADIUS server"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Timeout in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 0-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:0-60",
																			Description: "Timeout in seconds, 0 to keep active",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "max-try",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-20",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-20",
																			Description: "Maximum tries",
																		}},
																		ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-identifier",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-Identifier attribute sent to RADIUS"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-ip-address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "NAS-IP-Address attribute",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "preallocate-vif",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														},
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, nil, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													},
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "priority",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Server priority"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-255",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-255",
															Description: "Server priority",
														}},
													}},
												}, {
													Parent: &schemadefinition.TagNode{
														Parent: &schemadefinition.Node{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "node",
															},
															NodeNameAttr: "radius",
															Children: []*schemadefinition.Children{{
																XMLName: xml.Name{
																	Local: "children",
																},
																Node: []*schemadefinition.Node{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "node",
																	},
																	NodeNameAttr: "dynamic-author",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
																	}},
																	Children: []*schemadefinition.Children{{
																		XMLName: xml.Name{
																			Local: "children",
																		},
																		LeafNode: []*schemadefinition.LeafNode{{
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "server",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr: "ipv4-address",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "ipv4",
																					Description: "IPv4 address for dynamic authorization server",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "port",
																			DefaultValue: []string{"1700"},
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																				Constraint: []*schemadefinition.Constraint{{
																					XMLName: xml.Name{
																						Local: "constraint",
																					},
																					Validator: []*schemadefinition.Validator{{
																						XMLName: xml.Name{
																							Local: "validator",
																						},
																						NameAttr:     "numeric",
																						ArgumentAttr: "--range 1-65535",
																					}},
																				}},
																				ValueHelp: []*schemadefinition.ValueHelp{{
																					XMLName: xml.Name{
																						Local: "valueHelp",
																					},
																					Format:      "u32:1-65535",
																					Description: "TCP port",
																				}},
																			}},
																		}, {
																			IsBaseNode: false,
																			XMLName: xml.Name{
																				Local: "leafNode",
																			},
																			NodeNameAttr: "key",
																			Properties: []*schemadefinition.Properties{{
																				XMLName: xml.Name{
																					Local: "properties",
																				},
																				Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																			}},
																		}},
																	}},
																}},
																TagNode: []*schemadefinition.TagNode{nil},
																LeafNode: []*schemadefinition.LeafNode{{
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "accounting-interim-interval",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Interval in seconds to send accounting information"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-3600",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-3600",
																			Description: "Interval in seconds to send accounting information",
																		}},
																		ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-interim-jitter",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Maximum jitter value in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout in seconds to wait response from RADIUS server"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-60",
																			Description: "Timeout in seconds",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "acct-timeout",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 0-60",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:0-60",
																			Description: "Timeout in seconds, 0 to keep active",
																		}},
																		ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "max-try",
																	DefaultValue: []string{"3"},
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr:     "numeric",
																				ArgumentAttr: "--range 1-20",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "u32:1-20",
																			Description: "Maximum tries",
																		}},
																		ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-identifier",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-Identifier attribute sent to RADIUS"},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "nas-ip-address",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
																		Constraint: []*schemadefinition.Constraint{{
																			XMLName: xml.Name{
																				Local: "constraint",
																			},
																			Validator: []*schemadefinition.Validator{{
																				XMLName: xml.Name{
																					Local: "validator",
																				},
																				NameAttr: "ipv4-address",
																			}},
																		}},
																		ValueHelp: []*schemadefinition.ValueHelp{{
																			XMLName: xml.Name{
																				Local: "valueHelp",
																			},
																			Format:      "ipv4",
																			Description: "NAS-IP-Address attribute",
																		}},
																	}},
																}, {
																	IsBaseNode: false,
																	XMLName: xml.Name{
																		Local: "leafNode",
																	},
																	NodeNameAttr: "preallocate-vif",
																	Properties: []*schemadefinition.Properties{{
																		XMLName: xml.Name{
																			Local: "properties",
																		},
																		Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
																		Valueless: []*schemadefinition.Valueless{{
																			XMLName: xml.Name{
																				Local: "valueless",
																			},
																		}},
																	}},
																}},
															}},
														},
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, nil},
														}},
													},
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "backup",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Use backup server if other servers are not available"},
														Valueless: []*schemadefinition.Valueless{{
															XMLName: xml.Name{
																Local: "valueless",
															},
														}},
													}},
												}},
											}},
										}},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "source-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"IPv4 source address used to initiate connection"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 source address",
												}},
												CompletionHelp: []*schemadefinition.CompletionHelp{{
													XMLName: xml.Name{
														Local: "completionHelp",
													},
													Script: []string{"${vyos_completion_dir}/list_local_ips.sh --ipv4"},
												}},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "accounting-interim-interval",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Interval in seconds to send accounting information"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-3600",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-3600",
													Description: "Interval in seconds to send accounting information",
												}},
												ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "acct-interim-jitter",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-60",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-60",
													Description: "Maximum jitter value in seconds",
												}},
												ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "timeout",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout in seconds to wait response from RADIUS server"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-60",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-60",
													Description: "Timeout in seconds",
												}},
												ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "acct-timeout",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 0-60",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:0-60",
													Description: "Timeout in seconds, 0 to keep active",
												}},
												ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "max-try",
											DefaultValue: []string{"3"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 1-20",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:1-20",
													Description: "Maximum tries",
												}},
												ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "nas-identifier",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"NAS-Identifier attribute sent to RADIUS"},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, nil, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "preallocate-vif",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
															Valueless: []*schemadefinition.Valueless{{
																XMLName: xml.Name{
																	Local: "valueless",
																},
															}},
														}},
													}},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "nas-ip-address",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "NAS-IP-Address attribute",
												}},
											}},
										}, {
											Parent: &schemadefinition.Node{
												IsBaseNode: false,
												XMLName: xml.Name{
													Local: "node",
												},
												NodeNameAttr: "radius",
												Children: []*schemadefinition.Children{{
													XMLName: xml.Name{
														Local: "children",
													},
													Node: []*schemadefinition.Node{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "node",
														},
														NodeNameAttr: "dynamic-author",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Dynamic Authorization Extension/Change of Authorization server"},
														}},
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "server",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"IP address for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr: "ipv4-address",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "ipv4",
																		Description: "IPv4 address for dynamic authorization server",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "port",
																DefaultValue: []string{"1700"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Port for Dynamic Authorization Extension server (DM/CoA)"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "TCP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "key",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Shared secret for Dynamic Authorization Extension server"},
																}},
															}},
														}},
													}},
													TagNode: []*schemadefinition.TagNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "tagNode",
														},
														NodeNameAttr: "server",
														Children: []*schemadefinition.Children{{
															XMLName: xml.Name{
																Local: "children",
															},
															LeafNode: []*schemadefinition.LeafNode{{
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "acct-port",
																DefaultValue: []string{"1813"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Accounting port"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-65535",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-65535",
																		Description: "Numeric IP port",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "disable-accounting",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Disable accounting"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "fail-time",
																DefaultValue: []string{"0"},
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Mark server unavailable for <n> seconds on failure"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 0-600",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:0-600",
																		Description: "Fail time penalty",
																	}},
																	ConstraintErrorMessage: []string{"Fail time must be between 0 and 600 seconds"},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "priority",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Server priority"},
																	Constraint: []*schemadefinition.Constraint{{
																		XMLName: xml.Name{
																			Local: "constraint",
																		},
																		Validator: []*schemadefinition.Validator{{
																			XMLName: xml.Name{
																				Local: "validator",
																			},
																			NameAttr:     "numeric",
																			ArgumentAttr: "--range 1-255",
																		}},
																	}},
																	ValueHelp: []*schemadefinition.ValueHelp{{
																		XMLName: xml.Name{
																			Local: "valueHelp",
																		},
																		Format:      "u32:1-255",
																		Description: "Server priority",
																	}},
																}},
															}, {
																IsBaseNode: false,
																XMLName: xml.Name{
																	Local: "leafNode",
																},
																NodeNameAttr: "backup",
																Properties: []*schemadefinition.Properties{{
																	XMLName: xml.Name{
																		Local: "properties",
																	},
																	Help: []string{"Use backup server if other servers are not available"},
																	Valueless: []*schemadefinition.Valueless{{
																		XMLName: xml.Name{
																			Local: "valueless",
																		},
																	}},
																}},
															}},
														}},
													}},
													LeafNode: []*schemadefinition.LeafNode{{
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "accounting-interim-interval",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Interval in seconds to send accounting information"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-3600",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-3600",
																Description: "Interval in seconds to send accounting information",
															}},
															ConstraintErrorMessage: []string{"Interval value must be between 1 and 3600 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-interim-jitter",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Maximum jitter value in seconds to be applied to accounting information interval"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Maximum jitter value in seconds",
															}},
															ConstraintErrorMessage: []string{"Jitter value must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout in seconds to wait response from RADIUS server"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-60",
																Description: "Timeout in seconds",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 1 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "acct-timeout",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Timeout for Interim-Update packets, terminate session afterwards"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 0-60",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:0-60",
																Description: "Timeout in seconds, 0 to keep active",
															}},
															ConstraintErrorMessage: []string{"Timeout must be between 0 and 60 seconds"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "max-try",
														DefaultValue: []string{"3"},
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"Number of tries to send Access-Request/Accounting-Request queries"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr:     "numeric",
																	ArgumentAttr: "--range 1-20",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "u32:1-20",
																Description: "Maximum tries",
															}},
															ConstraintErrorMessage: []string{"Maximum tries must be between 1 and 20"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-identifier",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-Identifier attribute sent to RADIUS"},
														}},
													}, {
														IsBaseNode: false,
														XMLName: xml.Name{
															Local: "leafNode",
														},
														NodeNameAttr: "nas-ip-address",
														Properties: []*schemadefinition.Properties{{
															XMLName: xml.Name{
																Local: "properties",
															},
															Help: []string{"NAS-IP-Address attribute sent to RADIUS"},
															Constraint: []*schemadefinition.Constraint{{
																XMLName: xml.Name{
																	Local: "constraint",
																},
																Validator: []*schemadefinition.Validator{{
																	XMLName: xml.Name{
																		Local: "validator",
																	},
																	NameAttr: "ipv4-address",
																}},
															}},
															ValueHelp: []*schemadefinition.ValueHelp{{
																XMLName: xml.Name{
																	Local: "valueHelp",
																},
																Format:      "ipv4",
																Description: "NAS-IP-Address attribute",
															}},
														}},
													}, nil},
												}},
											},
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "preallocate-vif",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Enable attribute NAS-Port-Id in Access-Request"},
												Valueless: []*schemadefinition.Valueless{{
													XMLName: xml.Name{
														Local: "valueless",
													},
												}},
											}},
										}},
									}},
								}},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "interface",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Network interface for client MAC addresses"},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Script: []string{"${vyos_completion_dir}/list_interfaces"},
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										TagNode: []*schemadefinition.TagNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "tagNode",
											},
											NodeNameAttr: "mac",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Media Access Control (MAC) address"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "mac-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "macaddr",
													Description: "Hardware (MAC) address",
												}},
											}},
											Children: []*schemadefinition.Children{{
												XMLName: xml.Name{
													Local: "children",
												},
												Node: []*schemadefinition.Node{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "node",
													},
													NodeNameAttr: "rate-limit",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"Upload/Download speed limits"},
													}},
													Children: []*schemadefinition.Children{{
														XMLName: xml.Name{
															Local: "children",
														},
														LeafNode: []*schemadefinition.LeafNode{{
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "upload",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Upload bandwidth limit in kbits/sec"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range  1-4294967295",
																	}},
																}},
															}},
														}, {
															IsBaseNode: false,
															XMLName: xml.Name{
																Local: "leafNode",
															},
															NodeNameAttr: "download",
															Properties: []*schemadefinition.Properties{{
																XMLName: xml.Name{
																	Local: "properties",
																},
																Help: []string{"Download bandwidth limit in kbits/sec"},
																Constraint: []*schemadefinition.Constraint{{
																	XMLName: xml.Name{
																		Local: "constraint",
																	},
																	Validator: []*schemadefinition.Validator{{
																		XMLName: xml.Name{
																			Local: "validator",
																		},
																		NameAttr:     "numeric",
																		ArgumentAttr: "--range  1-4294967295",
																	}},
																}},
															}},
														}},
													}},
												}},
												LeafNode: []*schemadefinition.LeafNode{{
													IsBaseNode: false,
													XMLName: xml.Name{
														Local: "leafNode",
													},
													NodeNameAttr: "vlan",
													Properties: []*schemadefinition.Properties{{
														XMLName: xml.Name{
															Local: "properties",
														},
														Help: []string{"VLAN monitor for automatic creation of VLAN interfaces"},
														Constraint: []*schemadefinition.Constraint{{
															XMLName: xml.Name{
																Local: "constraint",
															},
															Validator: []*schemadefinition.Validator{{
																XMLName: xml.Name{
																	Local: "validator",
																},
																NameAttr:     "numeric",
																ArgumentAttr: "--range 1-4094",
															}},
														}},
														ValueHelp: []*schemadefinition.ValueHelp{{
															XMLName: xml.Name{
																Local: "valueHelp",
															},
															Format:      "u32:1-4094",
															Description: "Client VLAN id",
														}},
														ConstraintErrorMessage: []string{"VLAN IDs need to be in range 1-4094"},
													}},
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mode",
									DefaultValue: []string{"local"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Authentication mode used by this server"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(local|radius|noauth)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "local",
											Description: "Use local username/password configuration",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "radius",
											Description: "Use RADIUS server for user autentication",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "noauth",
											Description: "Authentication disabled",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"local radius noauth"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "extended-scripts",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Extended script execution"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-pre-up",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run before session interface comes up"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-up",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run when session interface is completely configured and started"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-down",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run when session interface going to terminate"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "on-change",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Script to run when session interface changed by RADIUS CoA handling"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "script",
											}},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "limits",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Limits the connection rate from a single source"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "connection-limit",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Acceptable rate of connections (e.g. 1/min, 60/sec)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[0-9]+\\/(min|sec)"},
										}},
										ConstraintErrorMessage: []string{"illegal value"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "burst",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Burst count"},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "timeout",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Timeout in seconds"},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "shaper",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Traffic shaper bandwidth parameters"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "fwmark",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Firewall mark value for traffic that excludes from shaping"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 1-2147483647",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-2147483647",
											Description: "Match firewall mark value",
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "snmp",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Enable SNMP"},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "master-agent",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Enable SNMP master agent mode"},
										Valueless: []*schemadefinition.Valueless{{
											XMLName: xml.Name{
												Local: "valueless",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "node",
							},
							NodeNameAttr: "log",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Server logging "},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "level",
									DefaultValue: []string{"3"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Specifies log level"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--range 0-5",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "0",
											Description: "Turn off logging",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "1",
											Description: "Log only error messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "2",
											Description: "Log error and warning messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "3",
											Description: "Log error, warning and minimum information messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "4",
											Description: "Log error, warning and full information messages",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "5",
											Description: "Log all messages including debug messages",
										}},
									}},
								}},
							}},
						}},
						TagNode: []*schemadefinition.TagNode{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "interface",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Interface to listen dhcp or unclassified packets"},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Script: []string{"${vyos_completion_dir}/list_interfaces"},
								}},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								Node: []*schemadefinition.Node{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "node",
									},
									NodeNameAttr: "external-dhcp",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"DHCP requests will be forwarded"},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "dhcp-relay",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"DHCP Server the request will be redirected to."},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "IPv4 address of the DHCP Server",
												}},
											}},
										}, {
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "giaddr",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Relay Agent IPv4 Address"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr: "ipv4-address",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "ipv4",
													Description: "Gateway IP address",
												}},
											}},
										}},
									}},
								}},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "mode",
									DefaultValue: []string{"l2"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Client connectivity mode"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(l2|l3)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "l2",
											Description: "Client located on same interface as server",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "l3",
											Description: "Client located behind a router",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"l2 l3"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "network",
									DefaultValue: []string{"shared"},
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Enables clients to share the same network or each client has its own vlan"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"(shared|vlan)"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "shared",
											Description: "Multiple clients share the same network",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "vlan",
											Description: "One VLAN per client",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											List: []string{"shared vlan"},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "client-subnet",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Client address pool"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-prefix",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4net",
											Description: "IPv4 address and prefix length",
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "vlan",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"VLAN monitor for automatic creation of VLAN interfaces"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "numeric",
												ArgumentAttr: "--allow-range --range 1-4094",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "u32:1-4094",
											Description: "VLAN for automatic creation",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "start-end",
											Description: "VLAN range for automatic creation (e.g. 1-4094)",
										}},
										ConstraintErrorMessage: []string{"VLAN IDs need to be in range 1-4094"},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "client-ip-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Client IP pool"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Name of IP pool",
								}},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								LeafNode: []*schemadefinition.LeafNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "range",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Range of IP addresses"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-prefix",
											}, {
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv4-host",
											}, {
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr:     "ipv4-range-mask",
												ArgumentAttr: "-m 24 -r",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4net",
											Description: "IPv4 prefix",
										}, {
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv4range",
											Description: "IPv4 address range inside /24 network",
										}},
										Multi: []*schemadefinition.Multi{{
											XMLName: xml.Name{
												Local: "multi",
											},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "leafNode",
									},
									NodeNameAttr: "next-pool",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Next pool name"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "txt",
											Description: "Name of IP pool",
										}},
										CompletionHelp: []*schemadefinition.CompletionHelp{{
											XMLName: xml.Name{
												Local: "completionHelp",
											},
											Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-4}"},
										}},
									}},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "tagNode",
							},
							NodeNameAttr: "client-ipv6-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Pool of client IPv6 addresses"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Name of IPv6 pool",
								}},
							}},
							Children: []*schemadefinition.Children{{
								XMLName: xml.Name{
									Local: "children",
								},
								TagNode: []*schemadefinition.TagNode{{
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "prefix",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Pool of addresses used to assign to clients"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv6-prefix",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6net",
											Description: "IPv6 address and prefix length",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "mask",
											DefaultValue: []string{"64"},
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Prefix length used for individual client"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 48-128",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:48-128",
													Description: "Client prefix length",
												}},
											}},
										}},
									}},
								}, {
									IsBaseNode: false,
									XMLName: xml.Name{
										Local: "tagNode",
									},
									NodeNameAttr: "delegate",
									Properties: []*schemadefinition.Properties{{
										XMLName: xml.Name{
											Local: "properties",
										},
										Help: []string{"Subnet used to delegate prefix through DHCPv6-PD (RFC3633)"},
										Constraint: []*schemadefinition.Constraint{{
											XMLName: xml.Name{
												Local: "constraint",
											},
											Validator: []*schemadefinition.Validator{{
												XMLName: xml.Name{
													Local: "validator",
												},
												NameAttr: "ipv6-prefix",
											}},
										}},
										ValueHelp: []*schemadefinition.ValueHelp{{
											XMLName: xml.Name{
												Local: "valueHelp",
											},
											Format:      "ipv6net",
											Description: "IPv6 address and prefix length",
										}},
									}},
									Children: []*schemadefinition.Children{{
										XMLName: xml.Name{
											Local: "children",
										},
										LeafNode: []*schemadefinition.LeafNode{{
											IsBaseNode: false,
											XMLName: xml.Name{
												Local: "leafNode",
											},
											NodeNameAttr: "delegation-prefix",
											Properties: []*schemadefinition.Properties{{
												XMLName: xml.Name{
													Local: "properties",
												},
												Help: []string{"Prefix length delegated to client"},
												Constraint: []*schemadefinition.Constraint{{
													XMLName: xml.Name{
														Local: "constraint",
													},
													Validator: []*schemadefinition.Validator{{
														XMLName: xml.Name{
															Local: "validator",
														},
														NameAttr:     "numeric",
														ArgumentAttr: "--range 32-64",
													}},
												}},
												ValueHelp: []*schemadefinition.ValueHelp{{
													XMLName: xml.Name{
														Local: "valueHelp",
													},
													Format:      "u32:32-64",
													Description: "Delegated prefix length",
												}},
											}},
										}},
									}},
								}},
							}},
						}},
						LeafNode: []*schemadefinition.LeafNode{{
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "default-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Default client IP pool name"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Default IP pool",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ip-pool"},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "default-ipv6-pool",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Default client IPv6 pool name"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{"[-_a-zA-Z0-9][\\w\\-\\.\\+]&"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Default IPv6 pool",
								}},
								CompletionHelp: []*schemadefinition.CompletionHelp{{
									XMLName: xml.Name{
										Local: "completionHelp",
									},
									Path: []string{"${COMP_WORDS[@]:1:${#COMP_WORDS[@]}-3} client-ipv6-pool"},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "gateway-address",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Gateway IP address"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ipv4-prefix",
									}, {
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ipv4-host",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv4net",
									Description: "Default Gateway, mask send to the client",
								}},
								ConstraintErrorMessage: []string{"invalid IPv4 address"},
								Multi: []*schemadefinition.Multi{{
									XMLName: xml.Name{
										Local: "multi",
									},
								}},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "max-concurrent-sessions",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Maximum number of concurrent session start attempts"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr:     "numeric",
										ArgumentAttr: "--allow-range --range 0-65535",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "u32:0-65535",
									Description: "Maximum number of concurrent session start attempts",
								}},
								ConstraintErrorMessage: []string{"Maximum concurent sessions must be in range 0-65535"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "description",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Description"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Regex: []string{".{0,255}"},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "txt",
									Description: "Description",
								}},
								ConstraintErrorMessage: []string{"Description too long (limit 255 characters)"},
							}},
						}, {
							IsBaseNode: false,
							XMLName: xml.Name{
								Local: "leafNode",
							},
							NodeNameAttr: "name-server",
							Properties: []*schemadefinition.Properties{{
								XMLName: xml.Name{
									Local: "properties",
								},
								Help: []string{"Domain Name Servers (DNS) addresses"},
								Constraint: []*schemadefinition.Constraint{{
									XMLName: xml.Name{
										Local: "constraint",
									},
									Validator: []*schemadefinition.Validator{{
										XMLName: xml.Name{
											Local: "validator",
										},
										NameAttr: "ip-address",
									}},
								}},
								ValueHelp: []*schemadefinition.ValueHelp{{
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv4",
									Description: "Domain Name Server (DNS) IPv4 address",
								}, {
									XMLName: xml.Name{
										Local: "valueHelp",
									},
									Format:      "ipv6",
									Description: "Domain Name Server (DNS) IPv6 address",
								}},
								Multi: []*schemadefinition.Multi{{
									XMLName: xml.Name{
										Local: "multi",
									},
								}},
							}},
						}},
					}},
				}},
			}},
		}},
	}
}
