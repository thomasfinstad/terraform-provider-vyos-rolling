// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance
var _ helpers.VyosTopResourceDataModel = &SystemOption{}

// SystemOption describes the resource data model.
type SystemOption struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafSystemOptionCtrlAltDelete           types.String `tfsdk:"ctrl_alt_delete" vyos:"ctrl-alt-delete,omitempty"`
	LeafSystemOptionKeyboardLayout          types.String `tfsdk:"keyboard_layout" vyos:"keyboard-layout,omitempty"`
	LeafSystemOptionPerformance             types.String `tfsdk:"performance" vyos:"performance,omitempty"`
	LeafSystemOptionRebootOnPanic           types.Bool   `tfsdk:"reboot_on_panic" vyos:"reboot-on-panic,omitempty"`
	LeafSystemOptionStartupBeep             types.Bool   `tfsdk:"startup_beep" vyos:"startup-beep,omitempty"`
	LeafSystemOptionRootPartitionAutoResize types.Bool   `tfsdk:"root_partition_auto_resize" vyos:"root-partition-auto-resize,omitempty"`
	LeafSystemOptionTimeFormat              types.String `tfsdk:"time_format" vyos:"time-format,omitempty"`
	LeafSystemOptionDisableUsbAutosuspend   types.Bool   `tfsdk:"disable_usb_autosuspend" vyos:"disable-usb-autosuspend,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
	ExistsNodeSystemOptionKernel     bool `tfsdk:"-" vyos:"kernel,child"`
	ExistsNodeSystemOptionHTTPClient bool `tfsdk:"-" vyos:"http-client,child"`
	ExistsNodeSystemOptionTCPClient  bool `tfsdk:"-" vyos:"ssh-client,child"`
}

// SetID configures the resource ID
func (o *SystemOption) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *SystemOption) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *SystemOption) IsGlobalResource() bool {
	return (true)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *SystemOption) GetVyosPath() []string {
	return append(
		o.GetVyosParentPath(),
		"option",
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *SystemOption) GetVyosParentPath() []string {
	return []string{
		"system",
	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
// ! Since this is a global resource it MUST NOT have a named resource as a parent and should therefore always return an empty string
func (o *SystemOption) GetVyosNamedParentPath() []string {
	return []string{}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o SystemOption) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"ctrl_alt_delete": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `System action on Ctrl-Alt-Delete keystroke

    |  Format    |  Description          |
    |------------|-----------------------|
    |  ignore    |  Ignore key sequence  |
    |  reboot    |  Reboot system        |
    |  poweroff  |  Poweroff system      |
`,
			Description: `System action on Ctrl-Alt-Delete keystroke

    |  Format    |  Description          |
    |------------|-----------------------|
    |  ignore    |  Ignore key sequence  |
    |  reboot    |  Reboot system        |
    |  poweroff  |  Poweroff system      |
`,
		},

		"keyboard_layout": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `System keyboard layout, type ISO2

    |  Format     |  Description     |
    |-------------|------------------|
    |  us         |  United States   |
    |  uk         |  United Kingdom  |
    |  fr         |  France          |
    |  de         |  Germany         |
    |  es         |  Spain           |
    |  fi         |  Finland         |
    |  it         |  Italy           |
    |  jp106      |  Japan           |
    |  no         |  Norway          |
    |  dk         |  Denmark         |
    |  se-latin1  |  Sweden          |
    |  dvorak     |  Dvorak          |
`,
			Description: `System keyboard layout, type ISO2

    |  Format     |  Description     |
    |-------------|------------------|
    |  us         |  United States   |
    |  uk         |  United Kingdom  |
    |  fr         |  France          |
    |  de         |  Germany         |
    |  es         |  Spain           |
    |  fi         |  Finland         |
    |  it         |  Italy           |
    |  jp106      |  Japan           |
    |  no         |  Norway          |
    |  dk         |  Denmark         |
    |  se-latin1  |  Sweden          |
    |  dvorak     |  Dvorak          |
`,

			// Default:          stringdefault.StaticString(`us`),
			Computed: true,
		},

		"performance": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Tune system performance

    |  Format      |  Description                          |
    |--------------|---------------------------------------|
    |  throughput  |  Tune for maximum network throughput  |
    |  latency     |  Tune for low network latency         |
`,
			Description: `Tune system performance

    |  Format      |  Description                          |
    |--------------|---------------------------------------|
    |  throughput  |  Tune for maximum network throughput  |
    |  latency     |  Tune for low network latency         |
`,
		},

		"reboot_on_panic": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Reboot system on kernel panic

`,
			Description: `Reboot system on kernel panic

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"startup_beep": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `plays sound via system speaker when you can login

`,
			Description: `plays sound via system speaker when you can login

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"root_partition_auto_resize": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Enable root partition auto-extention on system boot

`,
			Description: `Enable root partition auto-extention on system boot

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"time_format": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `System time-format

    |  Format   |  Description          |
    |-----------|-----------------------|
    |  12-hour  |  12 hour time format  |
    |  24-hour  |  24 hour time format  |
`,
			Description: `System time-format

    |  Format   |  Description          |
    |-----------|-----------------------|
    |  12-hour  |  12 hour time format  |
    |  24-hour  |  24 hour time format  |
`,

			// Default:          stringdefault.StaticString(`12-hour`),
			Computed: true,
		},

		"disable_usb_autosuspend": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Disable autosuspend for all USB devices

`,
			Description: `Disable autosuspend for all USB devices

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},
	}
}
