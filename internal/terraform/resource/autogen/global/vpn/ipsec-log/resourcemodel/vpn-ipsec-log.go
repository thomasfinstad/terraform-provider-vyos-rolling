/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl #package (<no value>) */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl #imports (.) */
import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl #resource-model (log) */
// Validate compliance

var _ helpers.VyosTopResourceDataModel = &VpnIPsecLog{}

// VpnIPsecLog describes the resource data model.
// This is a basenode!
// Top level basenode type: `Node`
type VpnIPsecLog struct {
	ID       types.String   `tfsdk:"id" vyos:"-,tfsdk-id"`
	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafVpnIPsecLogLevel     types.String `tfsdk:"level" vyos:"level,omitempty"`
	LeafVpnIPsecLogSubsystem types.List   `tfsdk:"subsystem" vyos:"subsystem,omitempty"`

	// TagNodes

	// Nodes
}

// SetID configures the resource ID
func (o *VpnIPsecLog) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *VpnIPsecLog) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *VpnIPsecLog) IsGlobalResource() bool {
	return (true)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *VpnIPsecLog) GetVyosPath() []string {
	return append(
		o.GetVyosParentPath(),
		"log",
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *VpnIPsecLog) GetVyosParentPath() []string {
	return []string{
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack (ipsec) */

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack (vpn) */
		"vpn", // Node

		"ipsec", // Node

	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
func (o *VpnIPsecLog) GetVyosNamedParentPath() []string {
	return []string{
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack-for-non-global (ipsec) */

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack-for-non-global (vpn) */

	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VpnIPsecLog) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"level":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (level) */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Global IPsec logging Level

    |  Format  |  Description                                                             |
    |----------|--------------------------------------------------------------------------|
    |  0       |  Very basic auditing logs (e.g., SA up/SA down)                          |
    |  1       |  Generic control flow with errors, a good default to see whats going on  |
    |  2       |  More detailed debugging control flow                                    |
`,
			Description: `Global IPsec logging Level

    |  Format  |  Description                                                             |
    |----------|--------------------------------------------------------------------------|
    |  0       |  Very basic auditing logs (e.g., SA up/SA down)                          |
    |  1       |  Generic control flow with errors, a good default to see whats going on  |
    |  2       |  More detailed debugging control flow                                    |
`,

			// Default:          stringdefault.StaticString(`0`),
			Computed: true,
		},

		"subsystem":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (subsystem) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Subsystem logging levels

    |  Format  |  Description                                                 |
    |----------|--------------------------------------------------------------|
    |  dmn     |  Main daemon setup/cleanup/signal handling                   |
    |  mgr     |  IKE_SA manager, handling synchronization for IKE_SA access  |
    |  ike     |  IKE_SA/ISAKMP SA                                            |
    |  chd     |  CHILD_SA/IPsec SA                                           |
    |  job     |  Jobs queuing/processing and thread pool management          |
    |  cfg     |  Configuration management and plugins                        |
    |  knl     |  IPsec/Networking kernel interface                           |
    |  net     |  IKE network communication                                   |
    |  asn     |  Low-level encoding/decoding (ASN.1, X.509 etc.)             |
    |  enc     |  Packet encoding/decoding encryption/decryption operations   |
    |  lib     |  libstrongswan library messages                              |
    |  esp     |  libipsec library messages                                   |
    |  tls     |   libtls library messages                                    |
    |  tnc     |  Trusted Network Connect                                     |
    |  imc     |  Integrity Measurement Collector                             |
    |  imv     |  Integrity Measurement Verifier                              |
    |  pts     |   Platform Trust Service                                     |
    |  any     |  Any subsystem                                               |
`,
			Description: `Subsystem logging levels

    |  Format  |  Description                                                 |
    |----------|--------------------------------------------------------------|
    |  dmn     |  Main daemon setup/cleanup/signal handling                   |
    |  mgr     |  IKE_SA manager, handling synchronization for IKE_SA access  |
    |  ike     |  IKE_SA/ISAKMP SA                                            |
    |  chd     |  CHILD_SA/IPsec SA                                           |
    |  job     |  Jobs queuing/processing and thread pool management          |
    |  cfg     |  Configuration management and plugins                        |
    |  knl     |  IPsec/Networking kernel interface                           |
    |  net     |  IKE network communication                                   |
    |  asn     |  Low-level encoding/decoding (ASN.1, X.509 etc.)             |
    |  enc     |  Packet encoding/decoding encryption/decryption operations   |
    |  lib     |  libstrongswan library messages                              |
    |  esp     |  libipsec library messages                                   |
    |  tls     |   libtls library messages                                    |
    |  tnc     |  Trusted Network Connect                                     |
    |  imc     |  Integrity Measurement Collector                             |
    |  imv     |  Integrity Measurement Verifier                              |
    |  pts     |   Platform Trust Service                                     |
    |  any     |  Any subsystem                                               |
`,
		},

		// TagNodes

		// Nodes

	}
}
