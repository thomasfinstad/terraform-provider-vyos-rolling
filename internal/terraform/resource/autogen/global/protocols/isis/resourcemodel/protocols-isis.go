// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance
var _ helpers.VyosTopResourceDataModel = &ProtocolsIsis{}

// ProtocolsIsis describes the resource data model.
type ProtocolsIsis struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafProtocolsIsisAdvertiseHighMetrics types.Bool   `tfsdk:"advertise_high_metrics" vyos:"advertise-high-metrics,omitempty"`
	LeafProtocolsIsisAdvertisePassiveOnly types.Bool   `tfsdk:"advertise_passive_only" vyos:"advertise-passive-only,omitempty"`
	LeafProtocolsIsisDynamicHostname      types.Bool   `tfsdk:"dynamic_hostname" vyos:"dynamic-hostname,omitempty"`
	LeafProtocolsIsisLevel                types.String `tfsdk:"level" vyos:"level,omitempty"`
	LeafProtocolsIsisLogAdjacencyChanges  types.Bool   `tfsdk:"log_adjacency_changes" vyos:"log-adjacency-changes,omitempty"`
	LeafProtocolsIsisLspGenInterval       types.Number `tfsdk:"lsp_gen_interval" vyos:"lsp-gen-interval,omitempty"`
	LeafProtocolsIsisLspMtu               types.Number `tfsdk:"lsp_mtu" vyos:"lsp-mtu,omitempty"`
	LeafProtocolsIsisLspRefreshInterval   types.Number `tfsdk:"lsp_refresh_interval" vyos:"lsp-refresh-interval,omitempty"`
	LeafProtocolsIsisMaxLspLifetime       types.Number `tfsdk:"max_lsp_lifetime" vyos:"max-lsp-lifetime,omitempty"`
	LeafProtocolsIsisMetricStyle          types.String `tfsdk:"metric_style" vyos:"metric-style,omitempty"`
	LeafProtocolsIsisTopology             types.String `tfsdk:"topology" vyos:"topology,omitempty"`
	LeafProtocolsIsisNet                  types.String `tfsdk:"net" vyos:"net,omitempty"`
	LeafProtocolsIsisPurgeOriginator      types.Bool   `tfsdk:"purge_originator" vyos:"purge-originator,omitempty"`
	LeafProtocolsIsisSetAttachedBit       types.Bool   `tfsdk:"set_attached_bit" vyos:"set-attached-bit,omitempty"`
	LeafProtocolsIsisSetOverloadBit       types.Bool   `tfsdk:"set_overload_bit" vyos:"set-overload-bit,omitempty"`
	LeafProtocolsIsisSpfInterval          types.Number `tfsdk:"spf_interval" vyos:"spf-interval,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	ExistsTagProtocolsIsisInterface bool `tfsdk:"-" vyos:"interface,child"`

	// Nodes (Bools that show if child resources have been configured)
	ExistsNodeProtocolsIsisAreaPassword       bool `tfsdk:"-" vyos:"area-password,child"`
	ExistsNodeProtocolsIsisDefaultInformation bool `tfsdk:"-" vyos:"default-information,child"`
	ExistsNodeProtocolsIsisDomainPassword     bool `tfsdk:"-" vyos:"domain-password,child"`
	ExistsNodeProtocolsIsisLdpSync            bool `tfsdk:"-" vyos:"ldp-sync,child"`
	ExistsNodeProtocolsIsisFastReroute        bool `tfsdk:"-" vyos:"fast-reroute,child"`
	ExistsNodeProtocolsIsisTrafficEngineering bool `tfsdk:"-" vyos:"traffic-engineering,child"`
	ExistsNodeProtocolsIsisSegmentRouting     bool `tfsdk:"-" vyos:"segment-routing,child"`
	ExistsNodeProtocolsIsisRedistribute       bool `tfsdk:"-" vyos:"redistribute,child"`
	ExistsNodeProtocolsIsisSpfDelayIetf       bool `tfsdk:"-" vyos:"spf-delay-ietf,child"`
}

// SetID configures the resource ID
func (o *ProtocolsIsis) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *ProtocolsIsis) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *ProtocolsIsis) IsGlobalResource() bool {
	return (true)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsIsis) GetVyosPath() []string {
	return append(
		o.GetVyosParentPath(),
		"isis",
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *ProtocolsIsis) GetVyosParentPath() []string {
	return []string{
		"protocols",
	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
// ! Since this is a global resource it MUST NOT have a named resource as a parent and should therefore always return an empty string
func (o *ProtocolsIsis) GetVyosNamedParentPath() []string {
	return []string{}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsIsis) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"advertise_high_metrics": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Advertise high metric value on all interfaces

`,
			Description: `Advertise high metric value on all interfaces

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"advertise_passive_only": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Advertise prefixes of passive interfaces only

`,
			Description: `Advertise prefixes of passive interfaces only

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"dynamic_hostname": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Dynamic hostname for IS-IS

`,
			Description: `Dynamic hostname for IS-IS

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"level": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IS-IS level number

    |  Format     |  Description                               |
    |-------------|--------------------------------------------|
    |  level-1    |  Act as a station router                   |
    |  level-1-2  |  Act as both a station and an area router  |
    |  level-2    |  Act as an area router                     |
`,
			Description: `IS-IS level number

    |  Format     |  Description                               |
    |-------------|--------------------------------------------|
    |  level-1    |  Act as a station router                   |
    |  level-1-2  |  Act as both a station and an area router  |
    |  level-2    |  Act as an area router                     |
`,
		},

		"log_adjacency_changes": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Log changes in adjacency state

`,
			Description: `Log changes in adjacency state

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"lsp_gen_interval": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Minimum interval between regenerating same LSP

    |  Format  |  Description                  |
    |----------|-------------------------------|
    |  1-120   |  Minimum interval in seconds  |
`,
			Description: `Minimum interval between regenerating same LSP

    |  Format  |  Description                  |
    |----------|-------------------------------|
    |  1-120   |  Minimum interval in seconds  |
`,
		},

		"lsp_mtu": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Configure the maximum size of generated LSPs

    |  Format    |  Description                     |
    |------------|----------------------------------|
    |  128-4352  |  Maximum size of generated LSPs  |
`,
			Description: `Configure the maximum size of generated LSPs

    |  Format    |  Description                     |
    |------------|----------------------------------|
    |  128-4352  |  Maximum size of generated LSPs  |
`,

			// Default:          stringdefault.StaticString(`1497`),
			Computed: true,
		},

		"lsp_refresh_interval": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `LSP refresh interval

    |  Format   |  Description                      |
    |-----------|-----------------------------------|
    |  1-65235  |  LSP refresh interval in seconds  |
`,
			Description: `LSP refresh interval

    |  Format   |  Description                      |
    |-----------|-----------------------------------|
    |  1-65235  |  LSP refresh interval in seconds  |
`,
		},

		"max_lsp_lifetime": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Maximum LSP lifetime

    |  Format     |  Description              |
    |-------------|---------------------------|
    |  350-65535  |  LSP lifetime in seconds  |
`,
			Description: `Maximum LSP lifetime

    |  Format     |  Description              |
    |-------------|---------------------------|
    |  350-65535  |  LSP lifetime in seconds  |
`,
		},

		"metric_style": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Use old-style (ISO 10589) or new-style packet formats

    |  Format      |  Description                                            |
    |--------------|---------------------------------------------------------|
    |  narrow      |  Use old style of TLVs with narrow metric               |
    |  transition  |  Send and accept both styles of TLVs during transition  |
    |  wide        |  Use new style of TLVs to carry wider metric            |
`,
			Description: `Use old-style (ISO 10589) or new-style packet formats

    |  Format      |  Description                                            |
    |--------------|---------------------------------------------------------|
    |  narrow      |  Use old style of TLVs with narrow metric               |
    |  transition  |  Send and accept both styles of TLVs during transition  |
    |  wide        |  Use new style of TLVs to carry wider metric            |
`,
		},

		"topology": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Configure IS-IS topologies

    |  Format          |  Description                   |
    |------------------|--------------------------------|
    |  ipv4-multicast  |  Use IPv4 multicast topology   |
    |  ipv4-mgmt       |  Use IPv4 management topology  |
    |  ipv6-unicast    |  Use IPv6 unicast topology     |
    |  ipv6-multicast  |  Use IPv6 multicast topology   |
    |  ipv6-mgmt       |  Use IPv6 management topology  |
    |  ipv6-dstsrc     |  Use IPv6 dst-src topology     |
`,
			Description: `Configure IS-IS topologies

    |  Format          |  Description                   |
    |------------------|--------------------------------|
    |  ipv4-multicast  |  Use IPv4 multicast topology   |
    |  ipv4-mgmt       |  Use IPv4 management topology  |
    |  ipv6-unicast    |  Use IPv6 unicast topology     |
    |  ipv6-multicast  |  Use IPv6 multicast topology   |
    |  ipv6-mgmt       |  Use IPv6 management topology  |
    |  ipv6-dstsrc     |  Use IPv6 dst-src topology     |
`,
		},

		"net": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `A Network Entity Title for the process (ISO only)

    |  Format                |  Description                 |
    |------------------------|------------------------------|
    |  XX.XXXX. ... .XXX.XX  |  Network entity title (NET)  |
`,
			Description: `A Network Entity Title for the process (ISO only)

    |  Format                |  Description                 |
    |------------------------|------------------------------|
    |  XX.XXXX. ... .XXX.XX  |  Network entity title (NET)  |
`,
		},

		"purge_originator": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Use the RFC 6232 purge-originator

`,
			Description: `Use the RFC 6232 purge-originator

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"set_attached_bit": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Set attached bit to identify as L1/L2 router for inter-area traffic

`,
			Description: `Set attached bit to identify as L1/L2 router for inter-area traffic

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"set_overload_bit": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Set overload bit to avoid any transit traffic

`,
			Description: `Set overload bit to avoid any transit traffic

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"spf_interval": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Minimum interval between SPF calculations

    |  Format  |  Description          |
    |----------|-----------------------|
    |  1-120   |  Interval in seconds  |
`,
			Description: `Minimum interval between SPF calculations

    |  Format  |  Description          |
    |----------|-----------------------|
    |  1-120   |  Interval in seconds  |
`,
		},
	}
}
