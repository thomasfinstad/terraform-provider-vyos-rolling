// Package resourcemodel code generated by tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance
var _ helpers.VyosTopResourceDataModel = &ProtocolsRIPngTimers{}

// ProtocolsRIPngTimers describes the resource data model.
type ProtocolsRIPngTimers struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafProtocolsRIPngTimersGarbageCollection types.Number `tfsdk:"garbage_collection" vyos:"garbage-collection,omitempty"`
	LeafProtocolsRIPngTimersTimeout           types.Number `tfsdk:"timeout" vyos:"timeout,omitempty"`
	LeafProtocolsRIPngTimersUpdate            types.Number `tfsdk:"update" vyos:"update,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)

	// Nodes (Bools that show if child resources have been configured)
}

// SetID configures the resource ID
func (o *ProtocolsRIPngTimers) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *ProtocolsRIPngTimers) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *ProtocolsRIPngTimers) IsGlobalResource() bool {
	return (true)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsRIPngTimers) GetVyosPath() []string {
	return append(
		o.GetVyosParentPath(),
		"timers",
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *ProtocolsRIPngTimers) GetVyosParentPath() []string {
	return []string{
		"protocols",

		"ripng",
	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
// ! Since this is a global resource it MUST NOT have a named resource as a parent and should therefore always return an empty string
func (o *ProtocolsRIPngTimers) GetVyosNamedParentPath() []string {
	return []string{}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsRIPngTimers) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"garbage_collection": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Garbage collection timer

    |  Format        |  Description             |
    |----------------|--------------------------|
    |  5-2147483647  |  Garbage colletion time  |
`,
			Description: `Garbage collection timer

    |  Format        |  Description             |
    |----------------|--------------------------|
    |  5-2147483647  |  Garbage colletion time  |
`,

			// Default:          stringdefault.StaticString(`120`),
			Computed: true,
		},

		"timeout": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Routing information timeout timer

    |  Format        |  Description                        |
    |----------------|-------------------------------------|
    |  5-2147483647  |  Routing information timeout timer  |
`,
			Description: `Routing information timeout timer

    |  Format        |  Description                        |
    |----------------|-------------------------------------|
    |  5-2147483647  |  Routing information timeout timer  |
`,

			// Default:          stringdefault.StaticString(`180`),
			Computed: true,
		},

		"update": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Routing table update timer

    |  Format        |  Description                            |
    |----------------|-----------------------------------------|
    |  5-2147483647  |  Routing table update timer in seconds  |
`,
			Description: `Routing table update timer

    |  Format        |  Description                            |
    |----------------|-----------------------------------------|
    |  5-2147483647  |  Routing table update timer in seconds  |
`,

			// Default:          stringdefault.StaticString(`30`),
			Computed: true,
		},
	}
}
