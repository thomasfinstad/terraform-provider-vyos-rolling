/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl #package (<no value>) */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl #imports (.) */
import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl #resource-model (rip) */
// Validate compliance

var _ helpers.VyosTopResourceDataModel = &ProtocolsRIP{}

// ProtocolsRIP describes the resource data model.
// This is a basenode!
// Top level basenode type: `Node`
type ProtocolsRIP struct {
	ID       types.String   `tfsdk:"id" vyos:"-,tfsdk-id"`
	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafProtocolsRIPDefaultDistance  types.Number `tfsdk:"default_distance" vyos:"default-distance,omitempty"`
	LeafProtocolsRIPDefaultMetric    types.Number `tfsdk:"default_metric" vyos:"default-metric,omitempty"`
	LeafProtocolsRIPNeighbor         types.List   `tfsdk:"neighbor" vyos:"neighbor,omitempty"`
	LeafProtocolsRIPNetwork          types.List   `tfsdk:"network" vyos:"network,omitempty"`
	LeafProtocolsRIPPassiveInterface types.List   `tfsdk:"passive_interface" vyos:"passive-interface,omitempty"`
	LeafProtocolsRIPRoute            types.List   `tfsdk:"route" vyos:"route,omitempty"`
	LeafProtocolsRIPRouteMap         types.String `tfsdk:"route_map" vyos:"route-map,omitempty"`
	LeafProtocolsRIPVersion          types.String `tfsdk:"version" vyos:"version,omitempty"`

	// TagNodes

	ExistsTagProtocolsRIPInterface bool `tfsdk:"-" vyos:"interface,child"`

	ExistsTagProtocolsRIPNetworkDistance bool `tfsdk:"-" vyos:"network-distance,child"`

	// Nodes

	ExistsNodeProtocolsRIPDefaultInformation bool `tfsdk:"-" vyos:"default-information,child"`

	// Ignoring Node `ProtocolsRIPDistributeList`.

	// Ignoring Node `ProtocolsRIPRedistribute`.

	ExistsNodeProtocolsRIPTimers bool `tfsdk:"-" vyos:"timers,child"`
}

// SetID configures the resource ID
func (o *ProtocolsRIP) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *ProtocolsRIP) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *ProtocolsRIP) IsGlobalResource() bool {
	return (true)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsRIP) GetVyosPath() []string {
	return append(
		o.GetVyosParentPath(),
		"rip",
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *ProtocolsRIP) GetVyosParentPath() []string {
	return []string{
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack (protocols) */
		"protocols", // Node

	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
func (o *ProtocolsRIP) GetVyosNamedParentPath() []string {
	return []string{
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack-for-non-global (protocols) */

	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsRIP) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"default_distance":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (default-distance) */
		schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Administrative distance

    |  Format  |  Description              |
    |----------|---------------------------|
    |  1-255   |  Administrative distance  |
`,
			Description: `Administrative distance

    |  Format  |  Description              |
    |----------|---------------------------|
    |  1-255   |  Administrative distance  |
`,
		},

		"default_metric":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (default-metric) */
		schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Metric of redistributed routes

    |  Format  |  Description     |
    |----------|------------------|
    |  1-16    |  Default metric  |
`,
			Description: `Metric of redistributed routes

    |  Format  |  Description     |
    |----------|------------------|
    |  1-16    |  Default metric  |
`,
		},

		"neighbor":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (neighbor) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Neighbor router

    |  Format  |  Description      |
    |----------|-------------------|
    |  ipv4    |  Neighbor router  |
`,
			Description: `Neighbor router

    |  Format  |  Description      |
    |----------|-------------------|
    |  ipv4    |  Neighbor router  |
`,
		},

		"network":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (network) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `RIP network

    |  Format   |  Description  |
    |-----------|---------------|
    |  ipv4net  |  RIP network  |
`,
			Description: `RIP network

    |  Format   |  Description  |
    |-----------|---------------|
    |  ipv4net  |  RIP network  |
`,
		},

		"passive_interface":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (passive-interface) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Suppress routing updates on an interface

    |  Format   |  Description                                              |
    |-----------|-----------------------------------------------------------|
    |  txt      |  Interface to be passive (i.e. suppress routing updates)  |
    |  default  |  Default to suppress routing updates on all interfaces    |
`,
			Description: `Suppress routing updates on an interface

    |  Format   |  Description                                              |
    |-----------|-----------------------------------------------------------|
    |  txt      |  Interface to be passive (i.e. suppress routing updates)  |
    |  default  |  Default to suppress routing updates on all interfaces    |
`,
		},

		"route":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (route) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `RIP static route

    |  Format   |  Description       |
    |-----------|--------------------|
    |  ipv4net  |  RIP static route  |
`,
			Description: `RIP static route

    |  Format   |  Description       |
    |-----------|--------------------|
    |  ipv4net  |  RIP static route  |
`,
		},

		"route_map":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (route-map) */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Specify route-map name to use

    |  Format  |  Description     |
    |----------|------------------|
    |  txt     |  Route map name  |
`,
			Description: `Specify route-map name to use

    |  Format  |  Description     |
    |----------|------------------|
    |  txt     |  Route map name  |
`,
		},

		"version":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (version) */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Limit RIP protocol version

    |  Format  |  Description       |
    |----------|--------------------|
    |  1       |  Allow RIPv1 only  |
    |  2       |  Allow RIPv2 only  |
`,
			Description: `Limit RIP protocol version

    |  Format  |  Description       |
    |----------|--------------------|
    |  1       |  Allow RIPv1 only  |
    |  2       |  Allow RIPv2 only  |
`,
		},

		// TagNodes

		// Nodes

	}
}
