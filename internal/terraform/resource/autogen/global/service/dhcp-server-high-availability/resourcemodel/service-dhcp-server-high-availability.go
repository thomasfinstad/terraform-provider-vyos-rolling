/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl */
import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl */
// Validate compliance

var _ helpers.VyosTopResourceDataModel = &ServiceDhcpServerHighAvailability{}

// ServiceDhcpServerHighAvailability describes the resource data model.
// This is a basenode!
// Top level basenode type: `Node`
type ServiceDhcpServerHighAvailability struct {
	ID       types.String   `tfsdk:"id" vyos:"-,tfsdk-id"`
	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafServiceDhcpServerHighAvailabilitySourceAddress types.String `tfsdk:"source_address" vyos:"source-address,omitempty"`
	LeafServiceDhcpServerHighAvailabilityMode          types.String `tfsdk:"mode" vyos:"mode,omitempty"`
	LeafServiceDhcpServerHighAvailabilityRemote        types.String `tfsdk:"remote" vyos:"remote,omitempty"`
	LeafServiceDhcpServerHighAvailabilityName          types.String `tfsdk:"name" vyos:"name,omitempty"`
	LeafServiceDhcpServerHighAvailabilityStatus        types.String `tfsdk:"status" vyos:"status,omitempty"`
	LeafServiceDhcpServerHighAvailabilityCaCertificate types.String `tfsdk:"ca_certificate" vyos:"ca-certificate,omitempty"`
	LeafServiceDhcpServerHighAvailabilityCertificate   types.String `tfsdk:"certificate" vyos:"certificate,omitempty"`

	// TagNodes

	// Nodes
}

// SetID configures the resource ID
func (o *ServiceDhcpServerHighAvailability) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *ServiceDhcpServerHighAvailability) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *ServiceDhcpServerHighAvailability) IsGlobalResource() bool {
	return (true)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ServiceDhcpServerHighAvailability) GetVyosPath() []string {
	return append(
		o.GetVyosParentPath(),
		"high-availability",
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *ServiceDhcpServerHighAvailability) GetVyosParentPath() []string {
	return []string{
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack */

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack */
		"service", // Node

		"dhcp-server", // Node

	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
func (o *ServiceDhcpServerHighAvailability) GetVyosNamedParentPath() []string {
	return []string{
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack-for-non-global */

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-parent-vyos-path-hack.gotmpl #resource-model-parent-vyos-path-hack-for-non-global */

	}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceDhcpServerHighAvailability) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"source_address":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IPv4 address used to initiate connection

    |  Format  |  Description          |
    |----------|-----------------------|
    |  ipv4    |  IPv4 source address  |
`,
			Description: `IPv4 address used to initiate connection

    |  Format  |  Description          |
    |----------|-----------------------|
    |  ipv4    |  IPv4 source address  |
`,
		},

		"mode":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Configure high availability mode

    |  Format          |  Description                                |
    |------------------|---------------------------------------------|
    |  active-active   |  Both server attend DHCP requests           |
    |  active-passive  |  Only primary server attends DHCP requests  |
`,
			Description: `Configure high availability mode

    |  Format          |  Description                                |
    |------------------|---------------------------------------------|
    |  active-active   |  Both server attend DHCP requests           |
    |  active-passive  |  Only primary server attends DHCP requests  |
`,

			// Default:          stringdefault.StaticString(`active-active`),
			Computed: true,
		},

		"remote":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IPv4 remote address used for connection

    |  Format  |  Description                             |
    |----------|------------------------------------------|
    |  ipv4    |  IPv4 address of high availability peer  |
`,
			Description: `IPv4 remote address used for connection

    |  Format  |  Description                             |
    |----------|------------------------------------------|
    |  ipv4    |  IPv4 address of high availability peer  |
`,
		},

		"name":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Peer name used to identify connection

`,
			Description: `Peer name used to identify connection

`,
		},

		"status":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `High availability hierarchy

    |  Format     |  Description                                     |
    |-------------|--------------------------------------------------|
    |  primary    |  Configure this server to be the primary node    |
    |  secondary  |  Configure this server to be the secondary node  |
`,
			Description: `High availability hierarchy

    |  Format     |  Description                                     |
    |-------------|--------------------------------------------------|
    |  primary    |  Configure this server to be the primary node    |
    |  secondary  |  Configure this server to be the secondary node  |
`,
		},

		"ca_certificate":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Certificate Authority in PKI configuration

    |  Format  |  Description                      |
    |----------|-----------------------------------|
    |  txt     |  Name of CA in PKI configuration  |
`,
			Description: `Certificate Authority in PKI configuration

    |  Format  |  Description                      |
    |----------|-----------------------------------|
    |  txt     |  Name of CA in PKI configuration  |
`,
		},

		"certificate":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Certificate in PKI configuration

    |  Format  |  Description                               |
    |----------|--------------------------------------------|
    |  txt     |  Name of certificate in PKI configuration  |
`,
			Description: `Certificate in PKI configuration

    |  Format  |  Description                               |
    |----------|--------------------------------------------|
    |  txt     |  Name of certificate in PKI configuration  |
`,
		},

		// TagNodes

		// Nodes

	}
}
