/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl */
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl */
// Validate compliance

var _ helpers.VyosResourceDataModel = &ServiceNtpServer{}

// ServiceNtpServer describes the resource data model.
// This is not a basenode!
// Top level basenode type: `N/A`
type ServiceNtpServer struct {
	// LeafNodes
	LeafServiceNtpServerNoselect   types.Bool `tfsdk:"noselect" vyos:"noselect,omitempty"`
	LeafServiceNtpServerNts        types.Bool `tfsdk:"nts" vyos:"nts,omitempty"`
	LeafServiceNtpServerPool       types.Bool `tfsdk:"pool" vyos:"pool,omitempty"`
	LeafServiceNtpServerPrefer     types.Bool `tfsdk:"prefer" vyos:"prefer,omitempty"`
	LeafServiceNtpServerPtp        types.Bool `tfsdk:"ptp" vyos:"ptp,omitempty"`
	LeafServiceNtpServerInterleave types.Bool `tfsdk:"interleave" vyos:"interleave,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceNtpServer) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"noselect":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Marks the server as unused

`,
			Description: `Marks the server as unused

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"nts":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Enable Network Time Security (NTS) for the server

`,
			Description: `Enable Network Time Security (NTS) for the server

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"pool":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Associate with a number of remote servers

`,
			Description: `Associate with a number of remote servers

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"prefer":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Marks the server as preferred

`,
			Description: `Marks the server as preferred

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"ptp":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Use Precision Time Protocol (PTP) transport for the server

`,
			Description: `Use Precision Time Protocol (PTP) transport for the server

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"interleave":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Use the interleaved mode for the server

`,
			Description: `Use the interleaved mode for the server

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		// TagNodes

		// Nodes

	}
}
