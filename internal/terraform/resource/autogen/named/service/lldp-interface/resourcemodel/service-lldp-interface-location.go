// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &ServiceLldpInterfaceLocation{}

// ServiceLldpInterfaceLocation describes the resource data model.
type ServiceLldpInterfaceLocation struct {
	// LeafNodes
	LeafServiceLldpInterfaceLocationElin types.Number `tfsdk:"elin" vyos:"elin,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
	NodeServiceLldpInterfaceLocationCoordinateBased *ServiceLldpInterfaceLocationCoordinateBased `tfsdk:"coordinate_based" vyos:"coordinate-based,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceLldpInterfaceLocation) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"elin": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `ECS ELIN (Emergency location identifier number)

    |  Format        |  Description                                                 |
    |----------------|--------------------------------------------------------------|
    |  0-9999999999  |  Emergency Call Service ELIN number (between 10-25 numbers)  |
`,
			Description: `ECS ELIN (Emergency location identifier number)

    |  Format        |  Description                                                 |
    |----------------|--------------------------------------------------------------|
    |  0-9999999999  |  Emergency Call Service ELIN number (between 10-25 numbers)  |
`,
		},

		// Nodes

		"coordinate_based": schema.SingleNestedAttribute{
			Attributes: ServiceLldpInterfaceLocationCoordinateBased{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Coordinate based location

`,
			Description: `Coordinate based location

`,
		},
	}
}
