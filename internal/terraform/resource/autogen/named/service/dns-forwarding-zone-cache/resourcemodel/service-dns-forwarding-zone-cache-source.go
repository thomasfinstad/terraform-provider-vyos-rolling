// Package resourcemodel code generated by tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &ServiceDNSForwardingZoneCacheSource{}

// ServiceDNSForwardingZoneCacheSource describes the resource data model.
type ServiceDNSForwardingZoneCacheSource struct {
	// LeafNodes
	LeafServiceDNSForwardingZoneCacheSourceAxfr types.String `tfsdk:"axfr" vyos:"axfr,omitempty"`
	LeafServiceDNSForwardingZoneCacheSourceURL  types.String `tfsdk:"url" vyos:"url,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceDNSForwardingZoneCacheSource) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"axfr": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `DNS server address

    |  Format  |  Description   |
    |----------|----------------|
    |  ipv4    |  IPv4 address  |
    |  ipv6    |  IPv6 address  |
`,
			Description: `DNS server address

    |  Format  |  Description   |
    |----------|----------------|
    |  ipv4    |  IPv4 address  |
    |  ipv6    |  IPv6 address  |
`,
		},

		"url": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Source URL

    |  Format  |  Description    |
    |----------|-----------------|
    |  url     |  Zone file URL  |
`,
			Description: `Source URL

    |  Format  |  Description    |
    |----------|-----------------|
    |  url     |  Zone file URL  |
`,
		},

		// Nodes

	}
}
