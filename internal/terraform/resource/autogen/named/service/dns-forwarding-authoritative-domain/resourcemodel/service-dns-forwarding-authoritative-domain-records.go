/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl */
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl */
// Validate compliance

var _ helpers.VyosResourceDataModel = &ServiceDNSForwardingAuthoritativeDomainRecords{}

// ServiceDNSForwardingAuthoritativeDomainRecords describes the resource data model.
// This is not a basenode!
// Top level basenode type: `N/A`
type ServiceDNSForwardingAuthoritativeDomainRecords struct {
	// LeafNodes

	// TagNodes

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsA bool `tfsdk:"-" vyos:"a,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsAaaa bool `tfsdk:"-" vyos:"aaaa,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsCname bool `tfsdk:"-" vyos:"cname,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsMx bool `tfsdk:"-" vyos:"mx,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsNs bool `tfsdk:"-" vyos:"ns,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsPtr bool `tfsdk:"-" vyos:"ptr,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsTxt bool `tfsdk:"-" vyos:"txt,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsSpf bool `tfsdk:"-" vyos:"spf,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsSrv bool `tfsdk:"-" vyos:"srv,child"`

	ExistsTagServiceDNSForwardingAuthoritativeDomainRecordsNaptr bool `tfsdk:"-" vyos:"naptr,child"`

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ServiceDNSForwardingAuthoritativeDomainRecords) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{

		// LeafNodes

		// TagNodes

		// Nodes

	}
}
