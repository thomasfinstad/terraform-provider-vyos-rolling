// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"
	"regexp"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosTopResourceDataModel = &ContainerName{}

// ContainerName describes the resource data model.
type ContainerName struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	SelfIdentifier types.Object `tfsdk:"identifier" vyos:"-,self-id"`

	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafContainerNameAllowHostPID      types.Bool   `tfsdk:"allow_host_pid" vyos:"allow-host-pid,omitempty"`
	LeafContainerNameAllowHostNetworks types.Bool   `tfsdk:"allow_host_networks" vyos:"allow-host-networks,omitempty"`
	LeafContainerNameCapability        types.List   `tfsdk:"capability" vyos:"capability,omitempty"`
	LeafContainerNameDescrIPtion       types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafContainerNameDisable           types.Bool   `tfsdk:"disable" vyos:"disable,omitempty"`
	LeafContainerNameEntrypoint        types.String `tfsdk:"entrypoint" vyos:"entrypoint,omitempty"`
	LeafContainerNameHostName          types.String `tfsdk:"host_name" vyos:"host-name,omitempty"`
	LeafContainerNameImage             types.String `tfsdk:"image" vyos:"image,omitempty"`
	LeafContainerNameCommand           types.String `tfsdk:"command" vyos:"command,omitempty"`
	LeafContainerNameArguments         types.String `tfsdk:"arguments" vyos:"arguments,omitempty"`
	LeafContainerNameCpuQuota          types.String `tfsdk:"cpu_quota" vyos:"cpu-quota,omitempty"`
	LeafContainerNameMemory            types.Number `tfsdk:"memory" vyos:"memory,omitempty"`
	LeafContainerNameSharedMemory      types.Number `tfsdk:"shared_memory" vyos:"shared-memory,omitempty"`
	LeafContainerNameRestart           types.String `tfsdk:"restart" vyos:"restart,omitempty"`
	LeafContainerNameUID               types.Number `tfsdk:"uid" vyos:"uid,omitempty"`
	LeafContainerNameGID               types.Number `tfsdk:"gid" vyos:"gid,omitempty"`

	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	ExistsTagContainerNameDevice bool `tfsdk:"-" vyos:"device,child"`

	ExistsTagContainerNameEnvironment bool `tfsdk:"-" vyos:"environment,child"`

	ExistsTagContainerNameLabel bool `tfsdk:"-" vyos:"label,child"`

	TagContainerNameNetwork *ContainerNameNetwork `tfsdk:"network" vyos:"network,omitempty"`

	ExistsTagContainerNamePort bool `tfsdk:"-" vyos:"port,child"`

	ExistsTagContainerNameVolume bool `tfsdk:"-" vyos:"volume,child"`

	// Nodes
	NodeContainerNameSysctl *ContainerNameSysctl `tfsdk:"sysctl" vyos:"sysctl,omitempty"`
}

// SetID configures the resource ID
func (o *ContainerName) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *ContainerName) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *ContainerName) IsGlobalResource() bool {
	return (false)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ContainerName) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return append(
		o.GetVyosParentPath(),
		"name",
		o.SelfIdentifier.Attributes()["name"].(types.String).ValueString(),
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *ContainerName) GetVyosParentPath() []string {
	return []string{
		"container",
	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
func (o *ContainerName) GetVyosNamedParentPath() []string {
	return []string{}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ContainerName) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},
		"identifier": schema.SingleNestedAttribute{
			Required: true,
			Attributes: map[string]schema.Attribute{
				"name": schema.StringAttribute{
					Required: true,
					MarkdownDescription: `Container name

`,
					Description: `Container name

`,
					PlanModifiers: []planmodifier.String{
						stringplanmodifier.RequiresReplace(),
					}, Validators: []validator.String{
						stringvalidator.All(
							helpers.StringNot(
								stringvalidator.RegexMatches(
									regexp.MustCompile(`^.*__.*$`),
									"double underscores in name, conflicts with the internal resource id",
								),
							),
							stringvalidator.RegexMatches(
								regexp.MustCompile(`^[.:a-zA-Z0-9-_]+$`),
								"illegal character in  name, value must match: ^[.:a-zA-Z0-9-_]+$",
							),
						),
					},
				},
			},
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"allow_host_pid": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Allow sharing host process namespace with container

`,
			Description: `Allow sharing host process namespace with container

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"allow_host_networks": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Allow sharing host networking with container

`,
			Description: `Allow sharing host networking with container

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"capability": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Grant individual Linux capability to container instance

    |  Format            |  Description                                                            |
    |--------------------|-------------------------------------------------------------------------|
    |  net-admin         |  Network operations (interface, firewall, routing tables)               |
    |  net-bind-service  |  Bind a socket to privileged ports (port numbers less than 1024)        |
    |  net-raw           |  Permission to create raw network sockets                               |
    |  setpcap           |  Capability sets (from bounded or inherited set)                        |
    |  sys-admin         |  Administation operations (quotactl, mount, sethostname, setdomainame)  |
    |  sys-module        |  Load, unload and delete kernel modules                                 |
    |  sys-nice          |  Permission to set process nice value                                   |
    |  sys-time          |  Permission to set system clock                                         |
`,
			Description: `Grant individual Linux capability to container instance

    |  Format            |  Description                                                            |
    |--------------------|-------------------------------------------------------------------------|
    |  net-admin         |  Network operations (interface, firewall, routing tables)               |
    |  net-bind-service  |  Bind a socket to privileged ports (port numbers less than 1024)        |
    |  net-raw           |  Permission to create raw network sockets                               |
    |  setpcap           |  Capability sets (from bounded or inherited set)                        |
    |  sys-admin         |  Administation operations (quotactl, mount, sethostname, setdomainame)  |
    |  sys-module        |  Load, unload and delete kernel modules                                 |
    |  sys-nice          |  Permission to set process nice value                                   |
    |  sys-time          |  Permission to set system clock                                         |
`,
		},

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt     |  Description  |
`,
			Description: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt     |  Description  |
`,
		},

		"disable": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Disable instance

`,
			Description: `Disable instance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"entrypoint": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Override the default ENTRYPOINT from the image

`,
			Description: `Override the default ENTRYPOINT from the image

`,
		},

		"host_name": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Container host name

`,
			Description: `Container host name

`,
		},

		"image": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Container image to use

    |  Format  |  Description                     |
    |----------|----------------------------------|
    |  txt     |  Image name in the hub-registry  |
`,
			Description: `Container image to use

    |  Format  |  Description                     |
    |----------|----------------------------------|
    |  txt     |  Image name in the hub-registry  |
`,
		},

		"command": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Override the default CMD from the image

`,
			Description: `Override the default CMD from the image

`,
		},

		"arguments": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `The command's arguments for this container

`,
			Description: `The command's arguments for this container

`,
		},

		"cpu_quota": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `This limits the number of CPU resources the container can use

    |  Format  |  Description                                                                         |
    |----------|--------------------------------------------------------------------------------------|
    |  0       |  Unlimited                                                                           |
    |  txt     |  Amount of CPU time the container can use in amount of cores (up to three decimals)  |
`,
			Description: `This limits the number of CPU resources the container can use

    |  Format  |  Description                                                                         |
    |----------|--------------------------------------------------------------------------------------|
    |  0       |  Unlimited                                                                           |
    |  txt     |  Amount of CPU time the container can use in amount of cores (up to three decimals)  |
`,

			// Default:          stringdefault.StaticString(`0`),
			Computed: true,
		},

		"memory": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Memory (RAM) available to this container

    |  Format   |  Description                         |
    |-----------|--------------------------------------|
    |  0        |  Unlimited                           |
    |  1-16384  |  Container memory in megabytes (MB)  |
`,
			Description: `Memory (RAM) available to this container

    |  Format   |  Description                         |
    |-----------|--------------------------------------|
    |  0        |  Unlimited                           |
    |  1-16384  |  Container memory in megabytes (MB)  |
`,

			// Default:          stringdefault.StaticString(`512`),
			Computed: true,
		},

		"shared_memory": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Shared memory available to this container

    |  Format  |  Description                         |
    |----------|--------------------------------------|
    |  0       |  Unlimited                           |
    |  1-8192  |  Container memory in megabytes (MB)  |
`,
			Description: `Shared memory available to this container

    |  Format  |  Description                         |
    |----------|--------------------------------------|
    |  0       |  Unlimited                           |
    |  1-8192  |  Container memory in megabytes (MB)  |
`,

			// Default:          stringdefault.StaticString(`64`),
			Computed: true,
		},

		"restart": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Restart options for container

    |  Format      |  Description                                                                         |
    |--------------|--------------------------------------------------------------------------------------|
    |  no          |  Do not restart containers on exit                                                   |
    |  on-failure  |  Restart containers when they exit with a non-zero exit code, retrying indefinitely  |
    |  always      |  Restart containers when they exit, regardless of status, retrying indefinitely      |
`,
			Description: `Restart options for container

    |  Format      |  Description                                                                         |
    |--------------|--------------------------------------------------------------------------------------|
    |  no          |  Do not restart containers on exit                                                   |
    |  on-failure  |  Restart containers when they exit with a non-zero exit code, retrying indefinitely  |
    |  always      |  Restart containers when they exit, regardless of status, retrying indefinitely      |
`,

			// Default:          stringdefault.StaticString(`on-failure`),
			Computed: true,
		},

		"uid": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `User ID this container will run as

    |  Format   |  Description                         |
    |-----------|--------------------------------------|
    |  0-65535  |  User ID this container will run as  |
`,
			Description: `User ID this container will run as

    |  Format   |  Description                         |
    |-----------|--------------------------------------|
    |  0-65535  |  User ID this container will run as  |
`,
		},

		"gid": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Group ID this container will run as

    |  Format   |  Description                          |
    |-----------|---------------------------------------|
    |  0-65535  |  Group ID this container will run as  |
`,
			Description: `Group ID this container will run as

    |  Format   |  Description                          |
    |-----------|---------------------------------------|
    |  0-65535  |  Group ID this container will run as  |
`,
		},

		// Nodes

		"sysctl": schema.SingleNestedAttribute{
			Attributes: ContainerNameSysctl{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Configure namespaced kernel parameters of the container

`,
			Description: `Configure namespaced kernel parameters of the container

`,
		},
	}
}
