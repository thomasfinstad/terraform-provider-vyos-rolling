// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"
	"regexp"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosTopResourceDataModel = &ProtocolsPimInterface{}

// ProtocolsPimInterface describes the resource data model.
type ProtocolsPimInterface struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	SelfIdentifier types.Object `tfsdk:"identifier" vyos:"-,self-id"`

	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafProtocolsPimInterfaceNoBsm         types.Bool   `tfsdk:"no_bsm" vyos:"no-bsm,omitempty"`
	LeafProtocolsPimInterfaceNoUnicastBsm  types.Bool   `tfsdk:"no_unicast_bsm" vyos:"no-unicast-bsm,omitempty"`
	LeafProtocolsPimInterfaceDrPriority    types.Number `tfsdk:"dr_priority" vyos:"dr-priority,omitempty"`
	LeafProtocolsPimInterfaceHello         types.Number `tfsdk:"hello" vyos:"hello,omitempty"`
	LeafProtocolsPimInterfacePassive       types.Bool   `tfsdk:"passive" vyos:"passive,omitempty"`
	LeafProtocolsPimInterfaceSourceAddress types.String `tfsdk:"source_address" vyos:"source-address,omitempty"`

	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
	NodeProtocolsPimInterfaceBfd  *ProtocolsPimInterfaceBfd  `tfsdk:"bfd" vyos:"bfd,omitempty"`
	NodeProtocolsPimInterfaceIgmp *ProtocolsPimInterfaceIgmp `tfsdk:"igmp" vyos:"igmp,omitempty"`
}

// SetID configures the resource ID
func (o *ProtocolsPimInterface) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *ProtocolsPimInterface) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *ProtocolsPimInterface) IsGlobalResource() bool {
	return (false)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *ProtocolsPimInterface) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return append(
		o.GetVyosParentPath(),
		"interface",
		o.SelfIdentifier.Attributes()["interface"].(types.String).ValueString(),
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *ProtocolsPimInterface) GetVyosParentPath() []string {
	return []string{
		"protocols",

		"pim",
	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
func (o *ProtocolsPimInterface) GetVyosNamedParentPath() []string {
	return []string{}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o ProtocolsPimInterface) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},
		"identifier": schema.SingleNestedAttribute{
			Required: true,
			Attributes: map[string]schema.Attribute{
				"interface": schema.StringAttribute{
					Required: true,
					MarkdownDescription: `PIM interface

`,
					Description: `PIM interface

`,
					PlanModifiers: []planmodifier.String{
						stringplanmodifier.RequiresReplace(),
					}, Validators: []validator.String{
						stringvalidator.All(
							helpers.StringNot(
								stringvalidator.RegexMatches(
									regexp.MustCompile(`^.*__.*$`),
									"double underscores in interface, conflicts with the internal resource id",
								),
							),
							stringvalidator.RegexMatches(
								regexp.MustCompile(`^[.:a-zA-Z0-9-_]+$`),
								"illegal character in  interface, value must match: ^[.:a-zA-Z0-9-_]+$",
							),
						),
					},
				},
			},
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"no_bsm": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Do not process bootstrap messages

`,
			Description: `Do not process bootstrap messages

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"no_unicast_bsm": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Do not process unicast bootstrap messages

`,
			Description: `Do not process unicast bootstrap messages

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"dr_priority": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Designated router election priority

    |  Format        |  Description  |
    |----------------|---------------|
    |  1-4294967295  |  DR Priority  |
`,
			Description: `Designated router election priority

    |  Format        |  Description  |
    |----------------|---------------|
    |  1-4294967295  |  DR Priority  |
`,
		},

		"hello": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Hello Interval

    |  Format  |  Description                |
    |----------|-----------------------------|
    |  1-180   |  Hello Interval in seconds  |
`,
			Description: `Hello Interval

    |  Format  |  Description                |
    |----------|-----------------------------|
    |  1-180   |  Hello Interval in seconds  |
`,
		},

		"passive": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Disable sending and receiving PIM control packets on the interface

`,
			Description: `Disable sending and receiving PIM control packets on the interface

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"source_address": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `IPv4 source address used to initiate connection

    |  Format  |  Description          |
    |----------|-----------------------|
    |  ipv4    |  IPv4 source address  |
`,
			Description: `IPv4 source address used to initiate connection

    |  Format  |  Description          |
    |----------|-----------------------|
    |  ipv4    |  IPv4 source address  |
`,
		},

		// Nodes

		"bfd": schema.SingleNestedAttribute{
			Attributes: ProtocolsPimInterfaceBfd{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Enable Bidirectional Forwarding Detection (BFD)

`,
			Description: `Enable Bidirectional Forwarding Detection (BFD)

`,
		},

		"igmp": schema.SingleNestedAttribute{
			Attributes: ProtocolsPimInterfaceIgmp{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Internet Group Management Protocol (IGMP) options

`,
			Description: `Internet Group Management Protocol (IGMP) options

`,
		},
	}
}
