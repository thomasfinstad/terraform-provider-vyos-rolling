// Package resourcemodel code generated by tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &PolicyRouteMapRuleSetLargeCommunity{}

// PolicyRouteMapRuleSetLargeCommunity describes the resource data model.
type PolicyRouteMapRuleSetLargeCommunity struct {
	// LeafNodes
	LeafPolicyRouteMapRuleSetLargeCommunityAdd     types.List   `tfsdk:"add" vyos:"add,omitempty"`
	LeafPolicyRouteMapRuleSetLargeCommunityReplace types.List   `tfsdk:"replace" vyos:"replace,omitempty"`
	LeafPolicyRouteMapRuleSetLargeCommunityNone    types.Bool   `tfsdk:"none" vyos:"none,omitempty"`
	LeafPolicyRouteMapRuleSetLargeCommunityDelete  types.String `tfsdk:"delete" vyos:"delete,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyRouteMapRuleSetLargeCommunity) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"add": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Add large communities to a prefix ;

    |  Format          |  Description                                                   |
    |------------------|----------------------------------------------------------------|
    |  <GA:LDP1:LDP2>  |  Community in format <0-4294967295:0-4294967295:0-4294967295>  |
`,
			Description: `Add large communities to a prefix ;

    |  Format          |  Description                                                   |
    |------------------|----------------------------------------------------------------|
    |  <GA:LDP1:LDP2>  |  Community in format <0-4294967295:0-4294967295:0-4294967295>  |
`,
		},

		"replace": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Set large communities for a prefix

    |  Format          |  Description                                                   |
    |------------------|----------------------------------------------------------------|
    |  <GA:LDP1:LDP2>  |  Community in format <0-4294967295:0-4294967295:0-4294967295>  |
`,
			Description: `Set large communities for a prefix

    |  Format          |  Description                                                   |
    |------------------|----------------------------------------------------------------|
    |  <GA:LDP1:LDP2>  |  Community in format <0-4294967295:0-4294967295:0-4294967295>  |
`,
		},

		"none": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Completely remove communities attribute from a prefix

`,
			Description: `Completely remove communities attribute from a prefix

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"delete": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Remove communities defined in a list from a prefix

    |  Format  |  Description     |
    |----------|------------------|
    |  txt     |  Community-list  |
`,
			Description: `Remove communities defined in a list from a prefix

    |  Format  |  Description     |
    |----------|------------------|
    |  txt     |  Community-list  |
`,
		},

		// Nodes

	}
}
