// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &PolicyRouteMapRuleSetEvpnGateway{}

// PolicyRouteMapRuleSetEvpnGateway describes the resource data model.
type PolicyRouteMapRuleSetEvpnGateway struct {
	// LeafNodes
	LeafPolicyRouteMapRuleSetEvpnGatewayIPvfour types.String `tfsdk:"ipv4" vyos:"ipv4,omitempty"`
	LeafPolicyRouteMapRuleSetEvpnGatewayIPvsix  types.String `tfsdk:"ipv6" vyos:"ipv6,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o PolicyRouteMapRuleSetEvpnGateway) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"ipv4": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Set gateway IPv4 address

    |  Format  |  Description           |
    |----------|------------------------|
    |  ipv4    |  Gateway IPv4 address  |
`,
			Description: `Set gateway IPv4 address

    |  Format  |  Description           |
    |----------|------------------------|
    |  ipv4    |  Gateway IPv4 address  |
`,
		},

		"ipv6": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Set gateway IPv6 address

    |  Format  |  Description           |
    |----------|------------------------|
    |  ipv6    |  Gateway IPv6 address  |
`,
			Description: `Set gateway IPv6 address

    |  Format  |  Description           |
    |----------|------------------------|
    |  ipv6    |  Gateway IPv6 address  |
`,
		},

		// Nodes

	}
}
