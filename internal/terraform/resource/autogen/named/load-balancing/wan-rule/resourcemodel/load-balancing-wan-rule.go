// Package resourcemodel code generated by tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"
	"strings"

	"github.com/hashicorp/terraform-plugin-framework-timeouts/resource/timeouts"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/numberplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosTopResourceDataModel = &LoadBalancingWanRule{}

// LoadBalancingWanRule describes the resource data model.
type LoadBalancingWanRule struct {
	ID types.String `tfsdk:"id" vyos:"-,tfsdk-id"`

	SelfIdentifier types.Object `tfsdk:"identifier" vyos:"-,self-id"`

	Timeouts timeouts.Value `tfsdk:"timeouts" vyos:"-,timeout"`

	// LeafNodes
	LeafLoadBalancingWanRuleDescrIPtion        types.String `tfsdk:"description" vyos:"description,omitempty"`
	LeafLoadBalancingWanRuleExclude            types.Bool   `tfsdk:"exclude" vyos:"exclude,omitempty"`
	LeafLoadBalancingWanRuleFailover           types.Bool   `tfsdk:"failover" vyos:"failover,omitempty"`
	LeafLoadBalancingWanRuleInboundInterface   types.String `tfsdk:"inbound_interface" vyos:"inbound-interface,omitempty"`
	LeafLoadBalancingWanRulePerPacketBalancing types.Bool   `tfsdk:"per_packet_balancing" vyos:"per-packet-balancing,omitempty"`
	LeafLoadBalancingWanRuleProtocol           types.String `tfsdk:"protocol" vyos:"protocol,omitempty"`

	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	ExistsTagLoadBalancingWanRuleInterface bool `tfsdk:"-" vyos:"interface,child"`

	// Nodes
	NodeLoadBalancingWanRuleDestination *LoadBalancingWanRuleDestination `tfsdk:"destination" vyos:"destination,omitempty"`
	NodeLoadBalancingWanRuleLimit       *LoadBalancingWanRuleLimit       `tfsdk:"limit" vyos:"limit,omitempty"`
	NodeLoadBalancingWanRuleSource      *LoadBalancingWanRuleSource      `tfsdk:"source" vyos:"source,omitempty"`
}

// SetID configures the resource ID
func (o *LoadBalancingWanRule) SetID(id []string) {
	o.ID = basetypes.NewStringValue(strings.Join(id, "__"))
}

// GetTimeouts returns resource timeout config
func (o *LoadBalancingWanRule) GetTimeouts() timeouts.Value {
	return o.Timeouts
}

// IsGlobalResource returns true if this is global
// This is useful during CRUD delete
func (o *LoadBalancingWanRule) IsGlobalResource() bool {
	return (false)
}

// GetVyosPath returns the list of strings to use to get to the correct vyos configuration
func (o *LoadBalancingWanRule) GetVyosPath() []string {
	if o.ID.ValueString() != "" {
		return strings.Split(o.ID.ValueString(), "__")
	}

	return append(
		o.GetVyosParentPath(),
		"rule",
		o.SelfIdentifier.Attributes()["rule"].(types.Number).ValueBigFloat().String(),
	)
}

// GetVyosParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent.
// If this is the top level resource the list might end up returning the entire interface definition tree.
// This is intended to use with the resource CRUD read function to check for empty resources.
func (o *LoadBalancingWanRule) GetVyosParentPath() []string {
	return []string{
		"load-balancing",

		"wan",
	}
}

// GetVyosNamedParentPath returns the list of strings to use to get to the correct
// vyos configuration for the nearest parent that is not a global resource.
// If this is the top level named resource the list is zero elements long.
// This is intended to use with the resource CRUD create function to check if the required parent exists.
func (o *LoadBalancingWanRule) GetVyosNamedParentPath() []string {
	return []string{}
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o LoadBalancingWanRule) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		"id": schema.StringAttribute{
			Computed:            true,
			MarkdownDescription: "Resource ID, full vyos path to the resource with each field separated by dunder (`__`).",
		},
		"identifier": schema.SingleNestedAttribute{
			Required: true,
			Attributes: map[string]schema.Attribute{
				"rule": schema.NumberAttribute{
					Required: true,
					MarkdownDescription: `Rule number (1-9999)

    |  Format  |  Description  |
    |----------|---------------|
    |  1-9999  |  Rule number  |
`,
					Description: `Rule number (1-9999)

    |  Format  |  Description  |
    |----------|---------------|
    |  1-9999  |  Rule number  |
`,
					PlanModifiers: []planmodifier.Number{
						numberplanmodifier.RequiresReplace(),
					},
				},
			},
		},

		"timeouts": timeouts.Attributes(ctx, timeouts.Opts{
			Create: true,
		}),

		// LeafNodes

		"description": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt     |  Description  |
`,
			Description: `Description

    |  Format  |  Description  |
    |----------|---------------|
    |  txt     |  Description  |
`,
		},

		"exclude": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Exclude packets matching this rule from WAN load balance

`,
			Description: `Exclude packets matching this rule from WAN load balance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"failover": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Enable failover for packets matching this rule from WAN load balance

`,
			Description: `Enable failover for packets matching this rule from WAN load balance

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"inbound_interface": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Inbound interface name (e.g., "eth0") [REQUIRED]

`,
			Description: `Inbound interface name (e.g., "eth0") [REQUIRED]

`,
		},

		"per_packet_balancing": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Option to match traffic per-packet instead of the default, per-flow

`,
			Description: `Option to match traffic per-packet instead of the default, per-flow

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"protocol": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Protocol to match (protocol name, number, or "all")

    |  Format       |  Description         |
    |---------------|----------------------|
    |  all          |  All IP protocols    |
    |  tcp_udp      |  Both TCP and UDP    |
    |  0-255        |  IP protocol number  |
    |  <protocol>   |  IP protocol name    |
    |  !<protocol>  |  IP protocol name    |
`,
			Description: `Protocol to match (protocol name, number, or "all")

    |  Format       |  Description         |
    |---------------|----------------------|
    |  all          |  All IP protocols    |
    |  tcp_udp      |  Both TCP and UDP    |
    |  0-255        |  IP protocol number  |
    |  <protocol>   |  IP protocol name    |
    |  !<protocol>  |  IP protocol name    |
`,

			// Default:          stringdefault.StaticString(`all`),
			Computed: true,
		},

		// Nodes

		"destination": schema.SingleNestedAttribute{
			Attributes: LoadBalancingWanRuleDestination{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Destination

`,
			Description: `Destination

`,
		},

		"limit": schema.SingleNestedAttribute{
			Attributes: LoadBalancingWanRuleLimit{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Enable packet limit for this rule

`,
			Description: `Enable packet limit for this rule

`,
		},

		"source": schema.SingleNestedAttribute{
			Attributes: LoadBalancingWanRuleSource{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Source information

`,
			Description: `Source information

`,
		},
	}
}
