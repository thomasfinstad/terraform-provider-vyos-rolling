/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl #package (<no value>) */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl #imports (.) */
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl #resource-model (http-compression) */
// Validate compliance

var _ helpers.VyosResourceDataModel = &LoadBalancingHaproxyServiceHTTPCompression{}

// LoadBalancingHaproxyServiceHTTPCompression describes the resource data model.
// This is not a basenode!
// Top level basenode type: `N/A`
type LoadBalancingHaproxyServiceHTTPCompression struct {
	// LeafNodes
	LeafLoadBalancingHaproxyServiceHTTPCompressionAlgorithm types.String `tfsdk:"algorithm" vyos:"algorithm,omitempty"`
	LeafLoadBalancingHaproxyServiceHTTPCompressionMimeType  types.List   `tfsdk:"mime_type" vyos:"mime-type,omitempty"`

	// TagNodes

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o LoadBalancingHaproxyServiceHTTPCompression) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"algorithm":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (algorithm) */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Compression algorithm

`,
			Description: `Compression algorithm

`,
		},

		"mime_type":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (mime-type) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `MIME types to compress

    |  Format  |  Description            |
    |----------|-------------------------|
    |  txt     |  MIME type to compress  |
`,
			Description: `MIME types to compress

    |  Format  |  Description            |
    |----------|-------------------------|
    |  txt     |  MIME type to compress  |
`,
		},

		// TagNodes

		// Nodes

	}
}
