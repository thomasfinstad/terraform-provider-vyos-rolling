/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl */
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/named/resource-model.gotmpl */
// Validate compliance

var _ helpers.VyosResourceDataModel = &VrfNameProtocolsBgpAddressFamilyIPvsixUnicast{}

// VrfNameProtocolsBgpAddressFamilyIPvsixUnicast describes the resource data model.
type VrfNameProtocolsBgpAddressFamilyIPvsixUnicast struct {
	// LeafNodes

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	ExistsTagVrfNameProtocolsBgpAddressFamilyIPvsixUnicastAggregateAddress bool `tfsdk:"-" vyos:"aggregate-address,child"`

	ExistsTagVrfNameProtocolsBgpAddressFamilyIPvsixUnicastNetwork bool `tfsdk:"-" vyos:"network,child"`

	// Nodes
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastDistance     *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastDistance     `tfsdk:"distance" vyos:"distance,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastExport       *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastExport       `tfsdk:"export" vyos:"export,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastImport       *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastImport       `tfsdk:"import" vyos:"import,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastLabel        *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastLabel        `tfsdk:"label" vyos:"label,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastMaximumPaths *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastMaximumPaths `tfsdk:"maximum_paths" vyos:"maximum-paths,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastRd           *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRd           `tfsdk:"rd" vyos:"rd,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastRouteMap     *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRouteMap     `tfsdk:"route_map" vyos:"route-map,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastRouteTarget  *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRouteTarget  `tfsdk:"route_target" vyos:"route-target,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastNexthop      *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastNexthop      `tfsdk:"nexthop" vyos:"nexthop,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastRedistribute *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRedistribute `tfsdk:"redistribute" vyos:"redistribute,omitempty"`
	NodeVrfNameProtocolsBgpAddressFamilyIPvsixUnicastSID          *VrfNameProtocolsBgpAddressFamilyIPvsixUnicastSID          `tfsdk:"sid" vyos:"sid,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VrfNameProtocolsBgpAddressFamilyIPvsixUnicast) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		// Nodes

		"distance": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastDistance{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Administrative distances for BGP routes

`,
			Description: `Administrative distances for BGP routes

`,
		},

		"export": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastExport{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Export routes from this address-family

`,
			Description: `Export routes from this address-family

`,
		},

		"import": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastImport{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Import routes to this address-family

`,
			Description: `Import routes to this address-family

`,
		},

		"label": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastLabel{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Label value for VRF

`,
			Description: `Label value for VRF

`,
		},

		"maximum_paths": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastMaximumPaths{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Forward packets over multiple paths

`,
			Description: `Forward packets over multiple paths

`,
		},

		"rd": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRd{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Specify route distinguisher

`,
			Description: `Specify route distinguisher

`,
		},

		"route_map": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRouteMap{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Route-map to filter route updates to/from this peer

`,
			Description: `Route-map to filter route updates to/from this peer

`,
		},

		"route_target": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRouteTarget{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Specify route target list

`,
			Description: `Specify route target list

`,
		},

		"nexthop": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastNexthop{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Specify next hop to use for VRF advertised prefixes

`,
			Description: `Specify next hop to use for VRF advertised prefixes

`,
		},

		"redistribute": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastRedistribute{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Redistribute routes from other protocols into BGP

`,
			Description: `Redistribute routes from other protocols into BGP

`,
		},

		"sid": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpAddressFamilyIPvsixUnicastSID{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `SID value for VRF

`,
			Description: `SID value for VRF

`,
		},
	}
}
