/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl #package (<no value>) */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl #imports (.) */
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl #resource-model (bestpath) */
// Validate compliance

var _ helpers.VyosResourceDataModel = &VrfNameProtocolsBgpParametersBestpath{}

// VrfNameProtocolsBgpParametersBestpath describes the resource data model.
// This is not a basenode!
// Top level basenode type: `N/A`
type VrfNameProtocolsBgpParametersBestpath struct {
	// LeafNodes
	LeafVrfNameProtocolsBgpParametersBestpathBandwIDth       types.String `tfsdk:"bandwidth" vyos:"bandwidth,omitempty"`
	LeafVrfNameProtocolsBgpParametersBestpathCompareRouterID types.Bool   `tfsdk:"compare_routerid" vyos:"compare-routerid,omitempty"`
	LeafVrfNameProtocolsBgpParametersBestpathMed             types.List   `tfsdk:"med" vyos:"med,omitempty"`

	// TagNodes

	// Nodes

	NodeVrfNameProtocolsBgpParametersBestpathAsPath *VrfNameProtocolsBgpParametersBestpathAsPath `tfsdk:"as_path" vyos:"as-path,omitempty"`

	NodeVrfNameProtocolsBgpParametersBestpathPeerType *VrfNameProtocolsBgpParametersBestpathPeerType `tfsdk:"peer_type" vyos:"peer-type,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VrfNameProtocolsBgpParametersBestpath) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"bandwidth":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (bandwidth) */
		schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Link Bandwidth attribute

    |  Format                      |  Description                                                            |
    |------------------------------|-------------------------------------------------------------------------|
    |  default-weight-for-missing  |  Assign low default weight (1) to paths not having link bandwidth       |
    |  ignore                      |  Ignore link bandwidth (do regular ECMP, not weighted)                  |
    |  skip-missing                |  Ignore paths without link bandwidth for ECMP (if other paths have it)  |
`,
			Description: `Link Bandwidth attribute

    |  Format                      |  Description                                                            |
    |------------------------------|-------------------------------------------------------------------------|
    |  default-weight-for-missing  |  Assign low default weight (1) to paths not having link bandwidth       |
    |  ignore                      |  Ignore link bandwidth (do regular ECMP, not weighted)                  |
    |  skip-missing                |  Ignore paths without link bandwidth for ECMP (if other paths have it)  |
`,
		},

		"compare_routerid":

		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype (compare-routerid) */
		schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Compare the router-id for identical EBGP paths

`,
			Description: `Compare the router-id for identical EBGP paths

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"med":
		/* tools/generate-terraform-resource-full/templates/resources/common/resource-model-schema-attrtype.gotmpl #resource-model-schema-attrtype-multi (med) */
		schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `MED attribute comparison parameters

    |  Format            |  Description                                              |
    |--------------------|-----------------------------------------------------------|
    |  confed            |  Compare MEDs among confederation paths                   |
    |  missing-as-worst  |  Treat missing route as a MED as the least preferred one  |
`,
			Description: `MED attribute comparison parameters

    |  Format            |  Description                                              |
    |--------------------|-----------------------------------------------------------|
    |  confed            |  Compare MEDs among confederation paths                   |
    |  missing-as-worst  |  Treat missing route as a MED as the least preferred one  |
`,
		},

		// TagNodes

		// Nodes

		"as_path": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpParametersBestpathAsPath{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `AS-path attribute comparison parameters

`,
			Description: `AS-path attribute comparison parameters

`,
		},

		"peer_type": schema.SingleNestedAttribute{
			Attributes: VrfNameProtocolsBgpParametersBestpathPeerType{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Peer type

`,
			Description: `Peer type

`,
		},
	}
}
