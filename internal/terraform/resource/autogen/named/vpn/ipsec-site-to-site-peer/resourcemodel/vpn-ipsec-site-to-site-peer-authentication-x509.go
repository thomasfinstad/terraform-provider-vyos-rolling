// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &VpnIPsecSiteToSitePeerAuthenticationXfivezeronine{}

// VpnIPsecSiteToSitePeerAuthenticationXfivezeronine describes the resource data model.
type VpnIPsecSiteToSitePeerAuthenticationXfivezeronine struct {
	// LeafNodes
	LeafVpnIPsecSiteToSitePeerAuthenticationXfivezeronineCertificate   types.String `tfsdk:"certificate" vyos:"certificate,omitempty"`
	LeafVpnIPsecSiteToSitePeerAuthenticationXfivezeroninePassphrase    types.String `tfsdk:"passphrase" vyos:"passphrase,omitempty"`
	LeafVpnIPsecSiteToSitePeerAuthenticationXfivezeronineCaCertificate types.List   `tfsdk:"ca_certificate" vyos:"ca-certificate,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VpnIPsecSiteToSitePeerAuthenticationXfivezeronine) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"certificate": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Certificate in PKI configuration

    |  Format  |  Description                               |
    |----------|--------------------------------------------|
    |  txt     |  Name of certificate in PKI configuration  |
`,
			Description: `Certificate in PKI configuration

    |  Format  |  Description                               |
    |----------|--------------------------------------------|
    |  txt     |  Name of certificate in PKI configuration  |
`,
		},

		"passphrase": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Private key passphrase

    |  Format  |  Description                            |
    |----------|-----------------------------------------|
    |  txt     |  Passphrase to decrypt the private key  |
`,
			Description: `Private key passphrase

    |  Format  |  Description                            |
    |----------|-----------------------------------------|
    |  txt     |  Passphrase to decrypt the private key  |
`,
		},

		"ca_certificate": schema.ListAttribute{
			ElementType: types.StringType,
			Optional:    true,
			MarkdownDescription: `Certificate Authority chain in PKI configuration

    |  Format  |  Description                      |
    |----------|-----------------------------------|
    |  txt     |  Name of CA in PKI configuration  |
`,
			Description: `Certificate Authority chain in PKI configuration

    |  Format  |  Description                      |
    |----------|-----------------------------------|
    |  txt     |  Name of CA in PKI configuration  |
`,
		},

		// Nodes

	}
}
