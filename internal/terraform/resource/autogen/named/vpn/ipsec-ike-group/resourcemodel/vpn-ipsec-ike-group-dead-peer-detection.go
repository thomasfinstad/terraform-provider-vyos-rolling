// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &VpnIPsecIkeGroupDeadPeerDetection{}

// VpnIPsecIkeGroupDeadPeerDetection describes the resource data model.
type VpnIPsecIkeGroupDeadPeerDetection struct {
	// LeafNodes
	LeafVpnIPsecIkeGroupDeadPeerDetectionAction   types.String `tfsdk:"action" vyos:"action,omitempty"`
	LeafVpnIPsecIkeGroupDeadPeerDetectionInterval types.Number `tfsdk:"interval" vyos:"interval,omitempty"`
	LeafVpnIPsecIkeGroupDeadPeerDetectionTimeout  types.Number `tfsdk:"timeout" vyos:"timeout,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o VpnIPsecIkeGroupDeadPeerDetection) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"action": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Keep-alive failure action

    |  Format   |  Description                                                           |
    |-----------|------------------------------------------------------------------------|
    |  trap     |  Attempt to re-negotiate the connection when matching traffic is seen  |
    |  clear    |  Remove the connection immediately                                     |
    |  restart  |  Attempt to re-negotiate the connection immediately                    |
`,
			Description: `Keep-alive failure action

    |  Format   |  Description                                                           |
    |-----------|------------------------------------------------------------------------|
    |  trap     |  Attempt to re-negotiate the connection when matching traffic is seen  |
    |  clear    |  Remove the connection immediately                                     |
    |  restart  |  Attempt to re-negotiate the connection immediately                    |
`,

			// Default:          stringdefault.StaticString(`clear`),
			Computed: true,
		},

		"interval": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Keep-alive interval

    |  Format   |  Description                     |
    |-----------|----------------------------------|
    |  2-86400  |  Keep-alive interval in seconds  |
`,
			Description: `Keep-alive interval

    |  Format   |  Description                     |
    |-----------|----------------------------------|
    |  2-86400  |  Keep-alive interval in seconds  |
`,

			// Default:          stringdefault.StaticString(`30`),
			Computed: true,
		},

		"timeout": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Dead Peer Detection keep-alive timeout (IKEv1 only)

    |  Format   |  Description                    |
    |-----------|---------------------------------|
    |  2-86400  |  Keep-alive timeout in seconds  |
`,
			Description: `Dead Peer Detection keep-alive timeout (IKEv1 only)

    |  Format   |  Description                    |
    |-----------|---------------------------------|
    |  2-86400  |  Keep-alive timeout in seconds  |
`,

			// Default:          stringdefault.StaticString(`120`),
			Computed: true,
		},

		// Nodes

	}
}
