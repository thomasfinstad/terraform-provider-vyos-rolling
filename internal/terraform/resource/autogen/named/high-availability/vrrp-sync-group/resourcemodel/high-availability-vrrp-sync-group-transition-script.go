// Package resourcemodel code generated by tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &HighAvailabilityVrrpSyncGroupTransitionScrIPt{}

// HighAvailabilityVrrpSyncGroupTransitionScrIPt describes the resource data model.
type HighAvailabilityVrrpSyncGroupTransitionScrIPt struct {
	// LeafNodes
	LeafHighAvailabilityVrrpSyncGroupTransitionScrIPtMaster types.String `tfsdk:"master" vyos:"master,omitempty"`
	LeafHighAvailabilityVrrpSyncGroupTransitionScrIPtBackup types.String `tfsdk:"backup" vyos:"backup,omitempty"`
	LeafHighAvailabilityVrrpSyncGroupTransitionScrIPtFault  types.String `tfsdk:"fault" vyos:"fault,omitempty"`
	LeafHighAvailabilityVrrpSyncGroupTransitionScrIPtStop   types.String `tfsdk:"stop" vyos:"stop,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o HighAvailabilityVrrpSyncGroupTransitionScrIPt) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"master": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Script to run on VRRP state transition to master

`,
			Description: `Script to run on VRRP state transition to master

`,
		},

		"backup": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Script to run on VRRP state transition to backup

`,
			Description: `Script to run on VRRP state transition to backup

`,
		},

		"fault": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Script to run on VRRP state transition to fault

`,
			Description: `Script to run on VRRP state transition to fault

`,
		},

		"stop": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Script to run on VRRP state transition to stop

`,
			Description: `Script to run on VRRP state transition to stop

`,
		},

		// Nodes

	}
}
