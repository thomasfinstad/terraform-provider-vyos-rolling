// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &InterfacesTunnelParametersErspan{}

// InterfacesTunnelParametersErspan describes the resource data model.
type InterfacesTunnelParametersErspan struct {
	// LeafNodes
	LeafInterfacesTunnelParametersErspanDirection types.String `tfsdk:"direction" vyos:"direction,omitempty"`
	LeafInterfacesTunnelParametersErspanHwID      types.Number `tfsdk:"hw_id" vyos:"hw-id,omitempty"`
	LeafInterfacesTunnelParametersErspanIndex     types.Number `tfsdk:"index" vyos:"index,omitempty"`
	LeafInterfacesTunnelParametersErspanVersion   types.String `tfsdk:"version" vyos:"version,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o InterfacesTunnelParametersErspan) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"direction": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Mirrored traffic direction

    |  Format   |  Description             |
    |-----------|--------------------------|
    |  ingress  |  Mirror ingress traffic  |
    |  egress   |  Mirror egress traffic   |
`,
			Description: `Mirrored traffic direction

    |  Format   |  Description             |
    |-----------|--------------------------|
    |  ingress  |  Mirror ingress traffic  |
    |  egress   |  Mirror egress traffic   |
`,
		},

		"hw_id": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `Unique identifier of an ERSPAN engine within a system

    |  Format     |  Description                            |
    |-------------|-----------------------------------------|
    |  0-1048575  |  Unique identifier of an ERSPAN engine  |
`,
			Description: `Unique identifier of an ERSPAN engine within a system

    |  Format     |  Description                            |
    |-------------|-----------------------------------------|
    |  0-1048575  |  Unique identifier of an ERSPAN engine  |
`,
		},

		"index": schema.NumberAttribute{
			Optional: true,
			MarkdownDescription: `ERSPAN version 1 index field

    |  Format  |  Description                                                       |
    |----------|--------------------------------------------------------------------|
    |  0-63    |  Platform-depedent field for specifying port number and direction  |
`,
			Description: `ERSPAN version 1 index field

    |  Format  |  Description                                                       |
    |----------|--------------------------------------------------------------------|
    |  0-63    |  Platform-depedent field for specifying port number and direction  |
`,
		},

		"version": schema.StringAttribute{
			Optional: true,
			MarkdownDescription: `Protocol version

    |  Format  |  Description      |
    |----------|-------------------|
    |  1       |  ERSPAN Type II   |
    |  2       |  ERSPAN Type III  |
`,
			Description: `Protocol version

    |  Format  |  Description      |
    |----------|-------------------|
    |  1       |  ERSPAN Type II   |
    |  2       |  ERSPAN Type III  |
`,

			// Default:          stringdefault.StaticString(`1`),
			Computed: true,
		},

		// Nodes

	}
}
