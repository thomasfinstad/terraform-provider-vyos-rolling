// Package resourcemodel code generated by tools/build-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/booldefault"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

// Validate compliance

var _ helpers.VyosResourceDataModel = &InterfacesWirelessCapabilities{}

// InterfacesWirelessCapabilities describes the resource data model.
type InterfacesWirelessCapabilities struct {
	// LeafNodes
	LeafInterfacesWirelessCapabilitiesRequireHt  types.Bool `tfsdk:"require_ht" vyos:"require-ht,omitempty"`
	LeafInterfacesWirelessCapabilitiesRequireVht types.Bool `tfsdk:"require_vht" vyos:"require-vht,omitempty"`
	LeafInterfacesWirelessCapabilitiesRequireHe  types.Bool `tfsdk:"require_he" vyos:"require-he,omitempty"`

	// TagNodes (Bools that show if child resources have been configured)
	// TagNodes (bools that show if child resources have been configured if they are their own BaseNode)

	// Nodes
	NodeInterfacesWirelessCapabilitiesHt  *InterfacesWirelessCapabilitiesHt  `tfsdk:"ht" vyos:"ht,omitempty"`
	NodeInterfacesWirelessCapabilitiesVht *InterfacesWirelessCapabilitiesVht `tfsdk:"vht" vyos:"vht,omitempty"`
	NodeInterfacesWirelessCapabilitiesHe  *InterfacesWirelessCapabilitiesHe  `tfsdk:"he" vyos:"he,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o InterfacesWirelessCapabilities) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		"require_ht": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Require stations to support HT PHY

`,
			Description: `Require stations to support HT PHY

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"require_vht": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Require stations to support VHT PHY

`,
			Description: `Require stations to support VHT PHY

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		"require_he": schema.BoolAttribute{
			Optional: true,
			MarkdownDescription: `Require stations to support HE PHY

`,
			Description: `Require stations to support HE PHY

`,
			Default:  booldefault.StaticBool(false),
			Computed: true,
		},

		// Nodes

		"ht": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessCapabilitiesHt{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `High Throughput (HT) settings

`,
			Description: `High Throughput (HT) settings

`,
		},

		"vht": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessCapabilitiesVht{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Very High Throughput (VHT) settings

`,
			Description: `Very High Throughput (VHT) settings

`,
		},

		"he": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessCapabilitiesHe{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `High Efficiency (HE) settings

`,
			Description: `High Efficiency (HE) settings

`,
		},
	}
}
