/* tools/generate-terraform-resource-full/templates/resources/common/package.gotmpl #package (<no value>) */
// Package resourcemodel code generated by tools/generate-terraform-resource-full/main.go. DO NOT EDIT.
package resourcemodel

/* tools/generate-terraform-resource-full/templates/resources/common/imports.gotmpl #imports (.) */
import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"

	"github.com/thomasfinstad/terraform-provider-vyos-rolling/internal/terraform/helpers"
)

/* tools/generate-terraform-resource-full/templates/resources/common/resource-model.gotmpl #resource-model (security) */
// Validate compliance

var _ helpers.VyosResourceDataModel = &InterfacesWirelessSecURIty{}

// InterfacesWirelessSecURIty describes the resource data model.
// This is not a basenode!
// Top level basenode type: `N/A`
type InterfacesWirelessSecURIty struct {
	// LeafNodes

	// TagNodes

	// Nodes

	NodeInterfacesWirelessSecURItyStationAddress *InterfacesWirelessSecURItyStationAddress `tfsdk:"station_address" vyos:"station-address,omitempty"`

	NodeInterfacesWirelessSecURItyWep *InterfacesWirelessSecURItyWep `tfsdk:"wep" vyos:"wep,omitempty"`

	NodeInterfacesWirelessSecURItyWpa *InterfacesWirelessSecURItyWpa `tfsdk:"wpa" vyos:"wpa,omitempty"`
}

// ResourceSchemaAttributes generates the schema attributes for the resource at this level
func (o InterfacesWirelessSecURIty) ResourceSchemaAttributes(ctx context.Context) map[string]schema.Attribute {
	return map[string]schema.Attribute{
		// LeafNodes

		// TagNodes

		// Nodes

		"station_address": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessSecURItyStationAddress{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Station MAC address based authentication

`,
			Description: `Station MAC address based authentication

`,
		},

		"wep": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessSecURItyWep{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Wired Equivalent Privacy (WEP) parameters

`,
			Description: `Wired Equivalent Privacy (WEP) parameters

`,
		},

		"wpa": schema.SingleNestedAttribute{
			Attributes: InterfacesWirelessSecURItyWpa{}.ResourceSchemaAttributes(ctx),
			Optional:   true,
			MarkdownDescription: `Wifi Protected Access (WPA) parameters

`,
			Description: `Wifi Protected Access (WPA) parameters

`,
		},
	}
}
